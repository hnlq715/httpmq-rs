<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="821.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="821.00"> </text><svg id="frames" x="10" width="1180" total_samples="72047"><g><title>httpmq-rs`tokio::runtime::queue::Steal&lt;T&gt;::steal_into (10 samples, 0.01%)</title><rect x="0.0111%" y="613" width="0.0139%" height="15" fill="rgb(227,0,7)" fg:x="8" fg:w="10"/><text x="0.2611%" y="623.50"></text></g><g><title>httpmq-rs`&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (10 samples, 0.01%)</title><rect x="0.8245%" y="597" width="0.0139%" height="15" fill="rgb(217,0,24)" fg:x="594" fg:w="10"/><text x="1.0745%" y="607.50"></text></g><g><title>httpmq-rs`parking_lot::condvar::Condvar::notify_one_slow (12 samples, 0.02%)</title><rect x="0.8397%" y="597" width="0.0167%" height="15" fill="rgb(221,193,54)" fg:x="605" fg:w="12"/><text x="1.0897%" y="607.50"></text></g><g><title>httpmq-rs`std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.02%)</title><rect x="0.8647%" y="597" width="0.0222%" height="15" fill="rgb(248,212,6)" fg:x="623" fg:w="16"/><text x="1.1147%" y="607.50"></text></g><g><title>httpmq-rs`tokio::runtime::queue::Steal&lt;T&gt;::steal_into (217 samples, 0.30%)</title><rect x="0.8869%" y="597" width="0.3012%" height="15" fill="rgb(208,68,35)" fg:x="639" fg:w="217"/><text x="1.1369%" y="607.50"></text></g><g><title>httpmq-rs`tokio::signal::unix::driver::Driver::process (17 samples, 0.02%)</title><rect x="1.9113%" y="549" width="0.0236%" height="15" fill="rgb(232,128,0)" fg:x="1377" fg:w="17"/><text x="2.1613%" y="559.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (20 samples, 0.03%)</title><rect x="2.0278%" y="533" width="0.0278%" height="15" fill="rgb(207,160,47)" fg:x="1461" fg:w="20"/><text x="2.2778%" y="543.50"></text></g><g><title> 32]&gt; (20 samples, 0.03%)</title><rect x="2.0278%" y="517" width="0.0278%" height="15" fill="rgb(228,23,34)" fg:x="1461" fg:w="20"/><text x="2.2778%" y="527.50"></text></g><g><title>httpmq-rs`mio::event::event::Event::token (16 samples, 0.02%)</title><rect x="2.0639%" y="533" width="0.0222%" height="15" fill="rgb(218,30,26)" fg:x="1487" fg:w="16"/><text x="2.3139%" y="543.50"></text></g><g><title>httpmq-rs`mio::event::events::Events::iter (13 samples, 0.02%)</title><rect x="2.0861%" y="533" width="0.0180%" height="15" fill="rgb(220,122,19)" fg:x="1503" fg:w="13"/><text x="2.3361%" y="543.50"></text></g><g><title>httpmq-rs`std::time::Instant::checked_duration_since (36 samples, 0.05%)</title><rect x="2.1139%" y="533" width="0.0500%" height="15" fill="rgb(250,228,42)" fg:x="1523" fg:w="36"/><text x="2.3639%" y="543.50"></text></g><g><title>httpmq-rs`mio::event::event::Event::token (14 samples, 0.02%)</title><rect x="2.4109%" y="517" width="0.0194%" height="15" fill="rgb(240,193,28)" fg:x="1737" fg:w="14"/><text x="2.6609%" y="527.50"></text></g><g><title>httpmq-rs`mio::poll::Poll::poll (65 samples, 0.09%)</title><rect x="2.4304%" y="517" width="0.0902%" height="15" fill="rgb(216,20,37)" fg:x="1751" fg:w="65"/><text x="2.6804%" y="527.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::ref_dec (21 samples, 0.03%)</title><rect x="2.5969%" y="485" width="0.0291%" height="15" fill="rgb(206,188,39)" fg:x="1871" fg:w="21"/><text x="2.8469%" y="495.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_notified_by_val (27 samples, 0.04%)</title><rect x="2.6261%" y="485" width="0.0375%" height="15" fill="rgb(217,207,13)" fg:x="1892" fg:w="27"/><text x="2.8761%" y="495.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (17 samples, 0.02%)</title><rect x="2.7066%" y="453" width="0.0236%" height="15" fill="rgb(231,73,38)" fg:x="1950" fg:w="17"/><text x="2.9566%" y="463.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Shared::schedule_local (12 samples, 0.02%)</title><rect x="2.7302%" y="453" width="0.0167%" height="15" fill="rgb(225,20,46)" fg:x="1967" fg:w="12"/><text x="2.9802%" y="463.50"></text></g><g><title>httpmq-rs`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (76 samples, 0.11%)</title><rect x="2.6691%" y="469" width="0.1055%" height="15" fill="rgb(210,31,41)" fg:x="1923" fg:w="76"/><text x="2.9191%" y="479.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (20 samples, 0.03%)</title><rect x="2.7468%" y="453" width="0.0278%" height="15" fill="rgb(221,200,47)" fg:x="1979" fg:w="20"/><text x="2.9968%" y="463.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (15 samples, 0.02%)</title><rect x="2.7746%" y="469" width="0.0208%" height="15" fill="rgb(226,26,5)" fg:x="1999" fg:w="15"/><text x="3.0246%" y="479.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (152 samples, 0.21%)</title><rect x="2.5872%" y="501" width="0.2110%" height="15" fill="rgb(249,33,26)" fg:x="1864" fg:w="152"/><text x="2.8372%" y="511.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (97 samples, 0.13%)</title><rect x="2.6635%" y="485" width="0.1346%" height="15" fill="rgb(235,183,28)" fg:x="1919" fg:w="97"/><text x="2.9135%" y="495.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::raw::RawTask::from_raw (13 samples, 0.02%)</title><rect x="2.7982%" y="501" width="0.0180%" height="15" fill="rgb(221,5,38)" fg:x="2016" fg:w="13"/><text x="3.0482%" y="511.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_notified_by_val (18 samples, 0.02%)</title><rect x="2.8245%" y="501" width="0.0250%" height="15" fill="rgb(247,18,42)" fg:x="2035" fg:w="18"/><text x="3.0745%" y="511.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::wake0 (245 samples, 0.34%)</title><rect x="2.5206%" y="517" width="0.3401%" height="15" fill="rgb(241,131,45)" fg:x="1816" fg:w="245"/><text x="2.7706%" y="527.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (8 samples, 0.01%)</title><rect x="2.8495%" y="501" width="0.0111%" height="15" fill="rgb(249,31,29)" fg:x="2053" fg:w="8"/><text x="3.0995%" y="511.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::waker::wake_by_val (11 samples, 0.02%)</title><rect x="2.8703%" y="517" width="0.0153%" height="15" fill="rgb(225,111,53)" fg:x="2068" fg:w="11"/><text x="3.1203%" y="527.50"></text></g><g><title>httpmq-rs`tokio::io::driver::Driver::turn (2,673 samples, 3.71%)</title><rect x="2.1639%" y="533" width="3.7101%" height="15" fill="rgb(238,160,17)" fg:x="1559" fg:w="2673"/><text x="2.4139%" y="543.50">http..</text></g><g><title>libsystem_kernel.dylib`kevent (2,151 samples, 2.99%)</title><rect x="2.8884%" y="517" width="2.9856%" height="15" fill="rgb(214,148,48)" fg:x="2081" fg:w="2151"/><text x="3.1384%" y="527.50">lib..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (9 samples, 0.01%)</title><rect x="5.8739%" y="533" width="0.0125%" height="15" fill="rgb(232,36,49)" fg:x="4232" fg:w="9"/><text x="6.1239%" y="543.50"></text></g><g><title>httpmq-rs`tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (46 samples, 0.06%)</title><rect x="5.8864%" y="533" width="0.0638%" height="15" fill="rgb(209,103,24)" fg:x="4241" fg:w="46"/><text x="6.1364%" y="543.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (62 samples, 0.09%)</title><rect x="5.9642%" y="517" width="0.0861%" height="15" fill="rgb(229,88,8)" fg:x="4297" fg:w="62"/><text x="6.2142%" y="527.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (43 samples, 0.06%)</title><rect x="5.9905%" y="501" width="0.0597%" height="15" fill="rgb(213,181,19)" fg:x="4316" fg:w="43"/><text x="6.2405%" y="511.50"></text></g><g><title>httpmq-rs`tokio::signal::unix::driver::Driver::process (96 samples, 0.13%)</title><rect x="5.9503%" y="533" width="0.1332%" height="15" fill="rgb(254,191,54)" fg:x="4287" fg:w="96"/><text x="6.2003%" y="543.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (23 samples, 0.03%)</title><rect x="6.0516%" y="517" width="0.0319%" height="15" fill="rgb(241,83,37)" fg:x="4360" fg:w="23"/><text x="6.3016%" y="527.50"></text></g><g><title>httpmq-rs`tokio::signal::unix::driver::noop (12 samples, 0.02%)</title><rect x="6.0835%" y="533" width="0.0167%" height="15" fill="rgb(233,36,39)" fg:x="4383" fg:w="12"/><text x="6.3335%" y="543.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (84 samples, 0.12%)</title><rect x="6.1918%" y="517" width="0.1166%" height="15" fill="rgb(226,3,54)" fg:x="4461" fg:w="84"/><text x="6.4418%" y="527.50"></text></g><g><title> 32]&gt; (84 samples, 0.12%)</title><rect x="6.1918%" y="501" width="0.1166%" height="15" fill="rgb(245,192,40)" fg:x="4461" fg:w="84"/><text x="6.4418%" y="511.50"></text></g><g><title>httpmq-rs`tokio::time::driver::wheel::Wheel::next_expiration (49 samples, 0.07%)</title><rect x="6.3084%" y="517" width="0.0680%" height="15" fill="rgb(238,167,29)" fg:x="4545" fg:w="49"/><text x="6.5584%" y="527.50"></text></g><g><title>httpmq-rs`tokio::time::driver::wheel::level::Level::next_expiration (30 samples, 0.04%)</title><rect x="6.3348%" y="501" width="0.0416%" height="15" fill="rgb(232,182,51)" fg:x="4564" fg:w="30"/><text x="6.5848%" y="511.50"></text></g><g><title>httpmq-rs`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (204 samples, 0.28%)</title><rect x="6.1002%" y="533" width="0.2831%" height="15" fill="rgb(231,60,39)" fg:x="4395" fg:w="204"/><text x="6.3502%" y="543.50"></text></g><g><title>httpmq-rs`tokio::time::driver::wheel::Wheel::next_expiration (23 samples, 0.03%)</title><rect x="6.3833%" y="533" width="0.0319%" height="15" fill="rgb(208,69,12)" fg:x="4599" fg:w="23"/><text x="6.6333%" y="543.50"></text></g><g><title>httpmq-rs`tokio::time::driver::wheel::level::Level::next_expiration (19 samples, 0.03%)</title><rect x="6.3889%" y="517" width="0.0264%" height="15" fill="rgb(235,93,37)" fg:x="4603" fg:w="19"/><text x="6.6389%" y="527.50"></text></g><g><title>httpmq-rs`tokio::time::driver::Driver&lt;P&gt;::park_internal (3,266 samples, 4.53%)</title><rect x="1.9348%" y="549" width="4.5332%" height="15" fill="rgb(213,116,39)" fg:x="1394" fg:w="3266"/><text x="2.1848%" y="559.50">httpm..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (35 samples, 0.05%)</title><rect x="6.4194%" y="533" width="0.0486%" height="15" fill="rgb(222,207,29)" fg:x="4625" fg:w="35"/><text x="6.6694%" y="543.50"></text></g><g><title>httpmq-rs`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (3,340 samples, 4.64%)</title><rect x="1.8557%" y="565" width="4.6359%" height="15" fill="rgb(206,96,30)" fg:x="1337" fg:w="3340"/><text x="2.1057%" y="575.50">httpm..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (14 samples, 0.02%)</title><rect x="6.4722%" y="549" width="0.0194%" height="15" fill="rgb(218,138,4)" fg:x="4663" fg:w="14"/><text x="6.7222%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (2,043 samples, 2.84%)</title><rect x="6.7650%" y="549" width="2.8356%" height="15" fill="rgb(250,191,14)" fg:x="4874" fg:w="2043"/><text x="7.0150%" y="559.50">li..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (14 samples, 0.02%)</title><rect x="9.7436%" y="533" width="0.0194%" height="15" fill="rgb(239,60,40)" fg:x="7020" fg:w="14"/><text x="9.9936%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (69 samples, 0.10%)</title><rect x="9.7645%" y="517" width="0.0958%" height="15" fill="rgb(206,27,48)" fg:x="7035" fg:w="69"/><text x="10.0145%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (77 samples, 0.11%)</title><rect x="9.7631%" y="533" width="0.1069%" height="15" fill="rgb(225,35,8)" fg:x="7034" fg:w="77"/><text x="10.0131%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (87 samples, 0.12%)</title><rect x="9.8699%" y="533" width="0.1208%" height="15" fill="rgb(250,213,24)" fg:x="7111" fg:w="87"/><text x="10.1199%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (314 samples, 0.44%)</title><rect x="9.6048%" y="549" width="0.4358%" height="15" fill="rgb(247,123,22)" fg:x="6920" fg:w="314"/><text x="9.8548%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (36 samples, 0.05%)</title><rect x="9.9907%" y="533" width="0.0500%" height="15" fill="rgb(231,138,38)" fg:x="7198" fg:w="36"/><text x="10.2407%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (12 samples, 0.02%)</title><rect x="10.0504%" y="549" width="0.0167%" height="15" fill="rgb(231,145,46)" fg:x="7241" fg:w="12"/><text x="10.3004%" y="559.50"></text></g><g><title>httpmq-rs`parking_lot::condvar::Condvar::wait_until_internal (2,587 samples, 3.59%)</title><rect x="6.4985%" y="565" width="3.5907%" height="15" fill="rgb(251,118,11)" fg:x="4682" fg:w="2587"/><text x="6.7485%" y="575.50">http..</text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (16 samples, 0.02%)</title><rect x="10.0670%" y="549" width="0.0222%" height="15" fill="rgb(217,147,25)" fg:x="7253" fg:w="16"/><text x="10.3170%" y="559.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (16 samples, 0.02%)</title><rect x="10.0934%" y="565" width="0.0222%" height="15" fill="rgb(247,81,37)" fg:x="7272" fg:w="16"/><text x="10.3434%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (10 samples, 0.01%)</title><rect x="10.1156%" y="565" width="0.0139%" height="15" fill="rgb(209,12,38)" fg:x="7288" fg:w="10"/><text x="10.3656%" y="575.50"></text></g><g><title>httpmq-rs`&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (6,368 samples, 8.84%)</title><rect x="1.3436%" y="581" width="8.8387%" height="15" fill="rgb(227,1,9)" fg:x="968" fg:w="6368"/><text x="1.5936%" y="591.50">httpmq-rs`&lt;t..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (32 samples, 0.04%)</title><rect x="10.1378%" y="565" width="0.0444%" height="15" fill="rgb(248,47,43)" fg:x="7304" fg:w="32"/><text x="10.3878%" y="575.50"></text></g><g><title>httpmq-rs`tokio::io::driver::Driver::turn (81 samples, 0.11%)</title><rect x="10.1961%" y="533" width="0.1124%" height="15" fill="rgb(221,10,30)" fg:x="7346" fg:w="81"/><text x="10.4461%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`kevent (68 samples, 0.09%)</title><rect x="10.2142%" y="517" width="0.0944%" height="15" fill="rgb(210,229,1)" fg:x="7359" fg:w="68"/><text x="10.4642%" y="527.50"></text></g><g><title>httpmq-rs`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (9 samples, 0.01%)</title><rect x="10.3197%" y="533" width="0.0125%" height="15" fill="rgb(222,148,37)" fg:x="7435" fg:w="9"/><text x="10.5697%" y="543.50"></text></g><g><title>httpmq-rs`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park_timeout (104 samples, 0.14%)</title><rect x="10.1892%" y="565" width="0.1444%" height="15" fill="rgb(234,67,33)" fg:x="7341" fg:w="104"/><text x="10.4392%" y="575.50"></text></g><g><title>httpmq-rs`tokio::time::driver::Driver&lt;P&gt;::park_internal (104 samples, 0.14%)</title><rect x="10.1892%" y="549" width="0.1444%" height="15" fill="rgb(247,98,35)" fg:x="7341" fg:w="104"/><text x="10.4392%" y="559.50"></text></g><g><title>httpmq-rs`&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park_timeout (110 samples, 0.15%)</title><rect x="10.1822%" y="581" width="0.1527%" height="15" fill="rgb(247,138,52)" fg:x="7336" fg:w="110"/><text x="10.4322%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (152 samples, 0.21%)</title><rect x="10.3544%" y="565" width="0.2110%" height="15" fill="rgb(213,79,30)" fg:x="7460" fg:w="152"/><text x="10.6044%" y="575.50"></text></g><g><title>httpmq-rs`parking_lot::condvar::Condvar::notify_one_slow (182 samples, 0.25%)</title><rect x="10.3391%" y="581" width="0.2526%" height="15" fill="rgb(246,177,23)" fg:x="7449" fg:w="182"/><text x="10.5891%" y="591.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Shared::notify_parked (10 samples, 0.01%)</title><rect x="10.5917%" y="581" width="0.0139%" height="15" fill="rgb(230,62,27)" fg:x="7631" fg:w="10"/><text x="10.8417%" y="591.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Context::park_timeout (6,788 samples, 9.42%)</title><rect x="1.1881%" y="597" width="9.4216%" height="15" fill="rgb(216,154,8)" fg:x="856" fg:w="6788"/><text x="1.4381%" y="607.50">httpmq-rs`tok..</text></g><g><title>httpmq-rs`&lt;tokio::io::driver::Handle as tokio::park::Unpark&gt;::unpark (13 samples, 0.02%)</title><rect x="10.6778%" y="581" width="0.0180%" height="15" fill="rgb(244,35,45)" fg:x="7693" fg:w="13"/><text x="10.9278%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`kevent (11 samples, 0.02%)</title><rect x="10.6805%" y="565" width="0.0153%" height="15" fill="rgb(251,115,12)" fg:x="7695" fg:w="11"/><text x="10.9305%" y="575.50"></text></g><g><title>httpmq-rs`&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (40 samples, 0.06%)</title><rect x="10.6958%" y="581" width="0.0555%" height="15" fill="rgb(240,54,50)" fg:x="7706" fg:w="40"/><text x="10.9458%" y="591.50"></text></g><g><title>httpmq-rs`parking_lot_core::parking_lot::lock_bucket_pair (61 samples, 0.08%)</title><rect x="10.7943%" y="565" width="0.0847%" height="15" fill="rgb(233,84,52)" fg:x="7777" fg:w="61"/><text x="11.0443%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (1,085 samples, 1.51%)</title><rect x="10.8790%" y="565" width="1.5060%" height="15" fill="rgb(207,117,47)" fg:x="7838" fg:w="1085"/><text x="11.1290%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (10 samples, 0.01%)</title><rect x="12.3850%" y="565" width="0.0139%" height="15" fill="rgb(249,43,39)" fg:x="8923" fg:w="10"/><text x="12.6350%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (11 samples, 0.02%)</title><rect x="12.4058%" y="565" width="0.0153%" height="15" fill="rgb(209,38,44)" fg:x="8938" fg:w="11"/><text x="12.6558%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (35 samples, 0.05%)</title><rect x="12.4211%" y="565" width="0.0486%" height="15" fill="rgb(236,212,23)" fg:x="8949" fg:w="35"/><text x="12.6711%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (35 samples, 0.05%)</title><rect x="12.4211%" y="549" width="0.0486%" height="15" fill="rgb(242,79,21)" fg:x="8949" fg:w="35"/><text x="12.6711%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (34 samples, 0.05%)</title><rect x="12.4696%" y="565" width="0.0472%" height="15" fill="rgb(211,96,35)" fg:x="8984" fg:w="34"/><text x="12.7196%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (11 samples, 0.02%)</title><rect x="12.5016%" y="549" width="0.0153%" height="15" fill="rgb(253,215,40)" fg:x="9007" fg:w="11"/><text x="12.7516%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (19 samples, 0.03%)</title><rect x="12.5168%" y="565" width="0.0264%" height="15" fill="rgb(211,81,21)" fg:x="9018" fg:w="19"/><text x="12.7668%" y="575.50"></text></g><g><title>httpmq-rs`parking_lot::condvar::Condvar::notify_one_slow (1,294 samples, 1.80%)</title><rect x="10.7513%" y="581" width="1.7960%" height="15" fill="rgb(208,190,38)" fg:x="7746" fg:w="1294"/><text x="11.0013%" y="591.50">h..</text></g><g><title>httpmq-rs`parking_lot_core::parking_lot::lock_bucket_pair (9 samples, 0.01%)</title><rect x="12.5543%" y="581" width="0.0125%" height="15" fill="rgb(235,213,38)" fg:x="9045" fg:w="9"/><text x="12.8043%" y="591.50"></text></g><g><title>httpmq-rs`&lt;hyper::server::conn::spawn_all::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="12.6334%" y="565" width="0.0167%" height="15" fill="rgb(237,122,38)" fg:x="9102" fg:w="12"/><text x="12.8834%" y="575.50"></text></g><g><title>httpmq-rs`&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (9 samples, 0.01%)</title><rect x="12.8985%" y="517" width="0.0125%" height="15" fill="rgb(244,218,35)" fg:x="9293" fg:w="9"/><text x="13.1485%" y="527.50"></text></g><g><title>httpmq-rs`&lt;http_body::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::is_end_stream (26 samples, 0.04%)</title><rect x="12.9110%" y="517" width="0.0361%" height="15" fill="rgb(240,68,47)" fg:x="9302" fg:w="26"/><text x="13.1610%" y="527.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (10 samples, 0.01%)</title><rect x="12.9693%" y="517" width="0.0139%" height="15" fill="rgb(210,16,53)" fg:x="9344" fg:w="10"/><text x="13.2193%" y="527.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (13 samples, 0.02%)</title><rect x="12.9832%" y="517" width="0.0180%" height="15" fill="rgb(235,124,12)" fg:x="9354" fg:w="13"/><text x="13.2332%" y="527.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;http_body::combinators::map_err::MapErr&lt;http_body::full::Full&lt;bytes::bytes::Bytes&gt;,axum_core::error::Error::new&lt;core::convert::Infallible&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="13.0151%" y="517" width="0.0167%" height="15" fill="rgb(224,169,11)" fg:x="9377" fg:w="12"/><text x="13.2651%" y="527.50"></text></g><g><title>httpmq-rs`core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (17 samples, 0.02%)</title><rect x="13.0318%" y="517" width="0.0236%" height="15" fill="rgb(250,166,2)" fg:x="9389" fg:w="17"/><text x="13.2818%" y="527.50"></text></g><g><title>httpmq-rs`hyper::body::body::Body::new (17 samples, 0.02%)</title><rect x="13.0554%" y="517" width="0.0236%" height="15" fill="rgb(242,216,29)" fg:x="9406" fg:w="17"/><text x="13.3054%" y="527.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::Wants::contains (14 samples, 0.02%)</title><rect x="13.0790%" y="517" width="0.0194%" height="15" fill="rgb(230,116,27)" fg:x="9423" fg:w="14"/><text x="13.3290%" y="527.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (17 samples, 0.02%)</title><rect x="13.0984%" y="517" width="0.0236%" height="15" fill="rgb(228,99,48)" fg:x="9437" fg:w="17"/><text x="13.3484%" y="527.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (17 samples, 0.02%)</title><rect x="13.1248%" y="517" width="0.0236%" height="15" fill="rgb(253,11,6)" fg:x="9456" fg:w="17"/><text x="13.3748%" y="527.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.03%)</title><rect x="13.7480%" y="501" width="0.0264%" height="15" fill="rgb(247,143,39)" fg:x="9905" fg:w="19"/><text x="13.9980%" y="511.50"></text></g><g><title>httpmq-rs`&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::poll_ready (20 samples, 0.03%)</title><rect x="13.8160%" y="485" width="0.0278%" height="15" fill="rgb(236,97,10)" fg:x="9954" fg:w="20"/><text x="14.0660%" y="495.50"></text></g><g><title>httpmq-rs`&lt;axum::error_handling::HandleError&lt;S,F,()&gt; as tower_service::Service&lt;http::request::Request&lt;ReqBody&gt;&gt;&gt;::call (15 samples, 0.02%)</title><rect x="13.9201%" y="469" width="0.0208%" height="15" fill="rgb(233,208,19)" fg:x="10029" fg:w="15"/><text x="14.1701%" y="479.50"></text></g><g><title>httpmq-rs`&lt;axum::error_handling::future::HandleErrorFuture as core::future::future::Future&gt;::poll (13 samples, 0.02%)</title><rect x="13.9409%" y="469" width="0.0180%" height="15" fill="rgb(216,164,2)" fg:x="10044" fg:w="13"/><text x="14.1909%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (16 samples, 0.02%)</title><rect x="14.0450%" y="421" width="0.0222%" height="15" fill="rgb(220,129,5)" fg:x="10119" fg:w="16"/><text x="14.2950%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (12 samples, 0.02%)</title><rect x="14.1630%" y="341" width="0.0167%" height="15" fill="rgb(242,17,10)" fg:x="10204" fg:w="12"/><text x="14.4130%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (94 samples, 0.13%)</title><rect x="14.0700%" y="405" width="0.1305%" height="15" fill="rgb(242,107,0)" fg:x="10137" fg:w="94"/><text x="14.3200%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (77 samples, 0.11%)</title><rect x="14.0936%" y="389" width="0.1069%" height="15" fill="rgb(251,28,31)" fg:x="10154" fg:w="77"/><text x="14.3436%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (72 samples, 0.10%)</title><rect x="14.1005%" y="373" width="0.0999%" height="15" fill="rgb(233,223,10)" fg:x="10159" fg:w="72"/><text x="14.3505%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (40 samples, 0.06%)</title><rect x="14.1449%" y="357" width="0.0555%" height="15" fill="rgb(215,21,27)" fg:x="10191" fg:w="40"/><text x="14.3949%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (15 samples, 0.02%)</title><rect x="14.1796%" y="341" width="0.0208%" height="15" fill="rgb(232,23,21)" fg:x="10216" fg:w="15"/><text x="14.4296%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_memalign (30 samples, 0.04%)</title><rect x="14.2005%" y="405" width="0.0416%" height="15" fill="rgb(244,5,23)" fg:x="10231" fg:w="30"/><text x="14.4505%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.01%)</title><rect x="14.2421%" y="405" width="0.0139%" height="15" fill="rgb(226,81,46)" fg:x="10261" fg:w="10"/><text x="14.4921%" y="415.50"></text></g><g><title>httpmq-rs`__rdl_alloc (162 samples, 0.22%)</title><rect x="14.0436%" y="437" width="0.2249%" height="15" fill="rgb(247,70,30)" fg:x="10118" fg:w="162"/><text x="14.2936%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (145 samples, 0.20%)</title><rect x="14.0672%" y="421" width="0.2013%" height="15" fill="rgb(212,68,19)" fg:x="10135" fg:w="145"/><text x="14.3172%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_memalign (9 samples, 0.01%)</title><rect x="14.2560%" y="405" width="0.0125%" height="15" fill="rgb(240,187,13)" fg:x="10271" fg:w="9"/><text x="14.5060%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (31 samples, 0.04%)</title><rect x="14.2685%" y="437" width="0.0430%" height="15" fill="rgb(223,113,26)" fg:x="10280" fg:w="31"/><text x="14.5185%" y="447.50"></text></g><g><title>httpmq-rs`&lt;axum::error_handling::HandleError&lt;S,F,()&gt; as tower_service::Service&lt;http::request::Request&lt;ReqBody&gt;&gt;&gt;::call (275 samples, 0.38%)</title><rect x="13.9742%" y="453" width="0.3817%" height="15" fill="rgb(206,192,2)" fg:x="10068" fg:w="275"/><text x="14.2242%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (32 samples, 0.04%)</title><rect x="14.3115%" y="437" width="0.0444%" height="15" fill="rgb(241,108,4)" fg:x="10311" fg:w="32"/><text x="14.5615%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (41 samples, 0.06%)</title><rect x="14.3684%" y="453" width="0.0569%" height="15" fill="rgb(247,173,49)" fg:x="10352" fg:w="41"/><text x="14.6184%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.05%)</title><rect x="14.3726%" y="437" width="0.0527%" height="15" fill="rgb(224,114,35)" fg:x="10355" fg:w="38"/><text x="14.6226%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (38 samples, 0.05%)</title><rect x="14.3726%" y="421" width="0.0527%" height="15" fill="rgb(245,159,27)" fg:x="10355" fg:w="38"/><text x="14.6226%" y="431.50"></text></g><g><title>httpmq-rs`&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (361 samples, 0.50%)</title><rect x="13.9589%" y="469" width="0.5011%" height="15" fill="rgb(245,172,44)" fg:x="10057" fg:w="361"/><text x="14.2089%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.02%)</title><rect x="14.4364%" y="453" width="0.0236%" height="15" fill="rgb(236,23,11)" fg:x="10401" fg:w="17"/><text x="14.6864%" y="463.50"></text></g><g><title>httpmq-rs`&lt;tokio::time::driver::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="14.7973%" y="421" width="0.0153%" height="15" fill="rgb(205,117,38)" fg:x="10661" fg:w="11"/><text x="15.0473%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.02%)</title><rect x="14.9430%" y="341" width="0.0167%" height="15" fill="rgb(237,72,25)" fg:x="10766" fg:w="12"/><text x="15.1930%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (58 samples, 0.08%)</title><rect x="14.8820%" y="373" width="0.0805%" height="15" fill="rgb(244,70,9)" fg:x="10722" fg:w="58"/><text x="15.1320%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (57 samples, 0.08%)</title><rect x="14.8833%" y="357" width="0.0791%" height="15" fill="rgb(217,125,39)" fg:x="10723" fg:w="57"/><text x="15.1333%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (64 samples, 0.09%)</title><rect x="14.8750%" y="389" width="0.0888%" height="15" fill="rgb(235,36,10)" fg:x="10717" fg:w="64"/><text x="15.1250%" y="399.50"></text></g><g><title>httpmq-rs`http::extensions::Extensions::insert (86 samples, 0.12%)</title><rect x="14.8473%" y="405" width="0.1194%" height="15" fill="rgb(251,123,47)" fg:x="10697" fg:w="86"/><text x="15.0973%" y="415.50"></text></g><g><title>httpmq-rs`std::time::Instant::checked_add (21 samples, 0.03%)</title><rect x="15.0360%" y="389" width="0.0291%" height="15" fill="rgb(221,13,13)" fg:x="10833" fg:w="21"/><text x="15.2860%" y="399.50"></text></g><g><title>httpmq-rs`tokio::runtime::context::time_handle (40 samples, 0.06%)</title><rect x="15.0652%" y="389" width="0.0555%" height="15" fill="rgb(238,131,9)" fg:x="10854" fg:w="40"/><text x="15.3152%" y="399.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.01%)</title><rect x="15.1207%" y="389" width="0.0139%" height="15" fill="rgb(211,50,8)" fg:x="10894" fg:w="10"/><text x="15.3707%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (21 samples, 0.03%)</title><rect x="15.1346%" y="389" width="0.0291%" height="15" fill="rgb(245,182,24)" fg:x="10904" fg:w="21"/><text x="15.3846%" y="399.50"></text></g><g><title>httpmq-rs`tokio::time::driver::sleep::sleep (138 samples, 0.19%)</title><rect x="14.9777%" y="405" width="0.1915%" height="15" fill="rgb(242,14,37)" fg:x="10791" fg:w="138"/><text x="15.2277%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (11 samples, 0.02%)</title><rect x="15.1693%" y="405" width="0.0153%" height="15" fill="rgb(246,228,12)" fg:x="10929" fg:w="11"/><text x="15.4193%" y="415.50"></text></g><g><title>httpmq-rs`&lt;tower::timeout::Timeout&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (294 samples, 0.41%)</title><rect x="14.8126%" y="421" width="0.4081%" height="15" fill="rgb(213,55,15)" fg:x="10672" fg:w="294"/><text x="15.0626%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.03%)</title><rect x="15.1887%" y="405" width="0.0319%" height="15" fill="rgb(209,9,3)" fg:x="10943" fg:w="23"/><text x="15.4387%" y="415.50"></text></g><g><title>httpmq-rs`&lt;axum::handler::future::IntoServiceFuture as core::future::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="15.3067%" y="405" width="0.0167%" height="15" fill="rgb(230,59,30)" fg:x="11028" fg:w="12"/><text x="15.5567%" y="415.50"></text></g><g><title>httpmq-rs`&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (9 samples, 0.01%)</title><rect x="15.3233%" y="405" width="0.0125%" height="15" fill="rgb(209,121,21)" fg:x="11040" fg:w="9"/><text x="15.5733%" y="415.50"></text></g><g><title>httpmq-rs`&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::poll_ready (13 samples, 0.02%)</title><rect x="15.3358%" y="405" width="0.0180%" height="15" fill="rgb(220,109,13)" fg:x="11049" fg:w="13"/><text x="15.5858%" y="415.50"></text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.04%)</title><rect x="15.4580%" y="373" width="0.0361%" height="15" fill="rgb(232,18,1)" fg:x="11137" fg:w="26"/><text x="15.7080%" y="383.50"></text></g><g><title>httpmq-rs`&lt;alloc::borrow::Cow&lt;str&gt; as axum_core::response::IntoResponse&gt;::into_response (17 samples, 0.02%)</title><rect x="15.5773%" y="357" width="0.0236%" height="15" fill="rgb(215,41,42)" fg:x="11223" fg:w="17"/><text x="15.8273%" y="367.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="15.6009%" y="357" width="0.0153%" height="15" fill="rgb(224,123,36)" fg:x="11240" fg:w="11"/><text x="15.8509%" y="367.50"></text></g><g><title>httpmq-rs`&lt;T as core::any::Any&gt;::type_id (20 samples, 0.03%)</title><rect x="16.1228%" y="341" width="0.0278%" height="15" fill="rgb(240,125,3)" fg:x="11616" fg:w="20"/><text x="16.3728%" y="351.50"></text></g><g><title>httpmq-rs`http::header::map::Danger::is_yellow (14 samples, 0.02%)</title><rect x="16.2130%" y="325" width="0.0194%" height="15" fill="rgb(205,98,50)" fg:x="11681" fg:w="14"/><text x="16.4630%" y="335.50"></text></g><g><title>httpmq-rs`http::header::map::hash_elem_using (15 samples, 0.02%)</title><rect x="16.3546%" y="309" width="0.0208%" height="15" fill="rgb(205,185,37)" fg:x="11783" fg:w="15"/><text x="16.6046%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (18 samples, 0.02%)</title><rect x="16.4767%" y="261" width="0.0250%" height="15" fill="rgb(238,207,15)" fg:x="11871" fg:w="18"/><text x="16.7267%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (124 samples, 0.17%)</title><rect x="16.3754%" y="309" width="0.1721%" height="15" fill="rgb(213,199,42)" fg:x="11798" fg:w="124"/><text x="16.6254%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (119 samples, 0.17%)</title><rect x="16.3824%" y="293" width="0.1652%" height="15" fill="rgb(235,201,11)" fg:x="11803" fg:w="119"/><text x="16.6324%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (113 samples, 0.16%)</title><rect x="16.3907%" y="277" width="0.1568%" height="15" fill="rgb(207,46,11)" fg:x="11809" fg:w="113"/><text x="16.6407%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (33 samples, 0.05%)</title><rect x="16.5017%" y="261" width="0.0458%" height="15" fill="rgb(241,35,35)" fg:x="11889" fg:w="33"/><text x="16.7517%" y="271.50"></text></g><g><title>httpmq-rs`http::header::map::HeaderMap&lt;T&gt;::insert (233 samples, 0.32%)</title><rect x="16.2325%" y="325" width="0.3234%" height="15" fill="rgb(243,32,47)" fg:x="11695" fg:w="233"/><text x="16.4825%" y="335.50"></text></g><g><title>httpmq-rs`http::response::Parts::new (10 samples, 0.01%)</title><rect x="16.5739%" y="325" width="0.0139%" height="15" fill="rgb(247,202,23)" fg:x="11941" fg:w="10"/><text x="16.8239%" y="335.50"></text></g><g><title>httpmq-rs`mime::Source::as_ref (15 samples, 0.02%)</title><rect x="16.5878%" y="325" width="0.0208%" height="15" fill="rgb(219,102,11)" fg:x="11951" fg:w="15"/><text x="16.8378%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (50 samples, 0.07%)</title><rect x="16.6183%" y="293" width="0.0694%" height="15" fill="rgb(243,110,44)" fg:x="11973" fg:w="50"/><text x="16.8683%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.02%)</title><rect x="16.6711%" y="277" width="0.0167%" height="15" fill="rgb(222,74,54)" fg:x="12011" fg:w="12"/><text x="16.9211%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (54 samples, 0.07%)</title><rect x="16.6155%" y="309" width="0.0750%" height="15" fill="rgb(216,99,12)" fg:x="11971" fg:w="54"/><text x="16.8655%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (60 samples, 0.08%)</title><rect x="16.6086%" y="325" width="0.0833%" height="15" fill="rgb(226,22,26)" fg:x="11966" fg:w="60"/><text x="16.8586%" y="335.50"></text></g><g><title>httpmq-rs`&lt;alloc::borrow::Cow&lt;str&gt; as axum_core::response::IntoResponse&gt;::into_response (407 samples, 0.56%)</title><rect x="16.1506%" y="341" width="0.5649%" height="15" fill="rgb(217,163,10)" fg:x="11636" fg:w="407"/><text x="16.4006%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.01%)</title><rect x="16.7016%" y="325" width="0.0139%" height="15" fill="rgb(213,25,53)" fg:x="12033" fg:w="10"/><text x="16.9516%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.03%)</title><rect x="16.8293%" y="277" width="0.0264%" height="15" fill="rgb(252,105,26)" fg:x="12125" fg:w="19"/><text x="17.0793%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (70 samples, 0.10%)</title><rect x="16.7599%" y="309" width="0.0972%" height="15" fill="rgb(220,39,43)" fg:x="12075" fg:w="70"/><text x="17.0099%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (66 samples, 0.09%)</title><rect x="16.7654%" y="293" width="0.0916%" height="15" fill="rgb(229,68,48)" fg:x="12079" fg:w="66"/><text x="17.0154%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (82 samples, 0.11%)</title><rect x="16.7446%" y="325" width="0.1138%" height="15" fill="rgb(252,8,32)" fg:x="12064" fg:w="82"/><text x="16.9946%" y="335.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::clone::Clone&gt;::clone (123 samples, 0.17%)</title><rect x="16.7155%" y="341" width="0.1707%" height="15" fill="rgb(223,20,43)" fg:x="12043" fg:w="123"/><text x="16.9655%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.02%)</title><rect x="16.8626%" y="325" width="0.0236%" height="15" fill="rgb(229,81,49)" fg:x="12149" fg:w="17"/><text x="17.1126%" y="335.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15 samples, 0.02%)</title><rect x="16.8862%" y="341" width="0.0208%" height="15" fill="rgb(236,28,36)" fg:x="12166" fg:w="15"/><text x="17.1362%" y="351.50"></text></g><g><title>httpmq-rs`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (21 samples, 0.03%)</title><rect x="16.9070%" y="341" width="0.0291%" height="15" fill="rgb(249,185,26)" fg:x="12181" fg:w="21"/><text x="17.1570%" y="351.50"></text></g><g><title>httpmq-rs`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (11 samples, 0.02%)</title><rect x="17.0181%" y="325" width="0.0153%" height="15" fill="rgb(249,174,33)" fg:x="12261" fg:w="11"/><text x="17.2681%" y="335.50"></text></g><g><title>httpmq-rs`&lt;serde_urlencoded::de::Part as serde::de::Deserializer&gt;::deserialize_any (22 samples, 0.03%)</title><rect x="17.2304%" y="293" width="0.0305%" height="15" fill="rgb(233,201,37)" fg:x="12414" fg:w="22"/><text x="17.4804%" y="303.50"></text></g><g><title>httpmq-rs`alloc::string::String::from_utf8_lossy (22 samples, 0.03%)</title><rect x="17.4081%" y="261" width="0.0305%" height="15" fill="rgb(221,78,26)" fg:x="12542" fg:w="22"/><text x="17.6581%" y="271.50"></text></g><g><title>httpmq-rs`&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.06%)</title><rect x="17.5608%" y="229" width="0.0583%" height="15" fill="rgb(250,127,30)" fg:x="12652" fg:w="42"/><text x="17.8108%" y="239.50"></text></g><g><title>httpmq-rs`alloc::string::String::from_utf8_lossy (70 samples, 0.10%)</title><rect x="17.5233%" y="245" width="0.0972%" height="15" fill="rgb(230,49,44)" fg:x="12625" fg:w="70"/><text x="17.7733%" y="255.50"></text></g><g><title>httpmq-rs`core::str::lossy::Utf8Lossy::from_bytes (26 samples, 0.04%)</title><rect x="17.6204%" y="245" width="0.0361%" height="15" fill="rgb(229,67,23)" fg:x="12695" fg:w="26"/><text x="17.8704%" y="255.50"></text></g><g><title>httpmq-rs`percent_encoding::PercentDecode::if_any (13 samples, 0.02%)</title><rect x="17.6565%" y="245" width="0.0180%" height="15" fill="rgb(249,83,47)" fg:x="12721" fg:w="13"/><text x="17.9065%" y="255.50"></text></g><g><title>httpmq-rs`form_urlencoded::decode (208 samples, 0.29%)</title><rect x="17.4386%" y="261" width="0.2887%" height="15" fill="rgb(215,43,3)" fg:x="12564" fg:w="208"/><text x="17.6886%" y="271.50"></text></g><g><title>httpmq-rs`percent_encoding::_&lt;impl core::convert::From&lt;percent_encoding::PercentDecode&gt; for alloc::borrow::Cow&lt;[u8]&gt;&gt;::from (38 samples, 0.05%)</title><rect x="17.6746%" y="245" width="0.0527%" height="15" fill="rgb(238,154,13)" fg:x="12734" fg:w="38"/><text x="17.9246%" y="255.50"></text></g><g><title>httpmq-rs`percent_encoding::PercentDecode::if_any (28 samples, 0.04%)</title><rect x="17.6885%" y="229" width="0.0389%" height="15" fill="rgb(219,56,2)" fg:x="12744" fg:w="28"/><text x="17.9385%" y="239.50"></text></g><g><title>httpmq-rs`&lt;form_urlencoded::Parse as core::iter::traits::iterator::Iterator&gt;::next (330 samples, 0.46%)</title><rect x="17.2873%" y="277" width="0.4580%" height="15" fill="rgb(233,0,4)" fg:x="12455" fg:w="330"/><text x="17.5373%" y="287.50"></text></g><g><title>httpmq-rs`percent_encoding::_&lt;impl core::convert::From&lt;percent_encoding::PercentDecode&gt; for alloc::borrow::Cow&lt;[u8]&gt;&gt;::from (13 samples, 0.02%)</title><rect x="17.7273%" y="261" width="0.0180%" height="15" fill="rgb(235,30,7)" fg:x="12772" fg:w="13"/><text x="17.9773%" y="271.50"></text></g><g><title>httpmq-rs`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (428 samples, 0.59%)</title><rect x="17.1652%" y="309" width="0.5941%" height="15" fill="rgb(250,79,13)" fg:x="12367" fg:w="428"/><text x="17.4152%" y="319.50"></text></g><g><title>httpmq-rs`&lt;serde_urlencoded::de::PartIterator as core::iter::traits::iterator::Iterator&gt;::next (359 samples, 0.50%)</title><rect x="17.2610%" y="293" width="0.4983%" height="15" fill="rgb(211,146,34)" fg:x="12436" fg:w="359"/><text x="17.5110%" y="303.50"></text></g><g><title>httpmq-rs`form_urlencoded::decode (10 samples, 0.01%)</title><rect x="17.7454%" y="277" width="0.0139%" height="15" fill="rgb(228,22,38)" fg:x="12785" fg:w="10"/><text x="17.9954%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (29 samples, 0.04%)</title><rect x="17.8842%" y="261" width="0.0403%" height="15" fill="rgb(235,168,5)" fg:x="12885" fg:w="29"/><text x="18.1342%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (100 samples, 0.14%)</title><rect x="17.7884%" y="293" width="0.1388%" height="15" fill="rgb(221,155,16)" fg:x="12816" fg:w="100"/><text x="18.0384%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (97 samples, 0.13%)</title><rect x="17.7926%" y="277" width="0.1346%" height="15" fill="rgb(215,215,53)" fg:x="12819" fg:w="97"/><text x="18.0426%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (109 samples, 0.15%)</title><rect x="17.7773%" y="309" width="0.1513%" height="15" fill="rgb(223,4,10)" fg:x="12808" fg:w="109"/><text x="18.0273%" y="319.50"></text></g><g><title>httpmq-rs`&lt;serde_urlencoded::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (658 samples, 0.91%)</title><rect x="17.0333%" y="325" width="0.9133%" height="15" fill="rgb(234,103,6)" fg:x="12272" fg:w="658"/><text x="17.2833%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="17.9355%" y="309" width="0.0111%" height="15" fill="rgb(227,97,0)" fg:x="12922" fg:w="8"/><text x="18.1855%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.01%)</title><rect x="17.9716%" y="325" width="0.0111%" height="15" fill="rgb(234,150,53)" fg:x="12948" fg:w="8"/><text x="18.2216%" y="335.50"></text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (761 samples, 1.06%)</title><rect x="16.9362%" y="341" width="1.0563%" height="15" fill="rgb(228,201,54)" fg:x="12202" fg:w="761"/><text x="17.1862%" y="351.50"></text></g><g><title>httpmq-rs`&lt;serde_urlencoded::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.02%)</title><rect x="18.0174%" y="341" width="0.0180%" height="15" fill="rgb(222,22,37)" fg:x="12981" fg:w="13"/><text x="18.2674%" y="351.50"></text></g><g><title>httpmq-rs`__rdl_alloc (13 samples, 0.02%)</title><rect x="18.0368%" y="341" width="0.0180%" height="15" fill="rgb(237,53,32)" fg:x="12995" fg:w="13"/><text x="18.2868%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (26 samples, 0.04%)</title><rect x="18.1312%" y="293" width="0.0361%" height="15" fill="rgb(233,25,53)" fg:x="13063" fg:w="26"/><text x="18.3812%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (14 samples, 0.02%)</title><rect x="18.1479%" y="277" width="0.0194%" height="15" fill="rgb(210,40,34)" fg:x="13075" fg:w="14"/><text x="18.3979%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.01%)</title><rect x="18.1534%" y="261" width="0.0139%" height="15" fill="rgb(241,220,44)" fg:x="13079" fg:w="10"/><text x="18.4034%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.01%)</title><rect x="18.1548%" y="245" width="0.0125%" height="15" fill="rgb(235,28,35)" fg:x="13080" fg:w="9"/><text x="18.4048%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (57 samples, 0.08%)</title><rect x="18.1048%" y="309" width="0.0791%" height="15" fill="rgb(210,56,17)" fg:x="13044" fg:w="57"/><text x="18.3548%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.01%)</title><rect x="18.1715%" y="293" width="0.0125%" height="15" fill="rgb(224,130,29)" fg:x="13092" fg:w="9"/><text x="18.4215%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.01%)</title><rect x="18.1729%" y="277" width="0.0111%" height="15" fill="rgb(235,212,8)" fg:x="13093" fg:w="8"/><text x="18.4229%" y="287.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (71 samples, 0.10%)</title><rect x="18.0896%" y="325" width="0.0985%" height="15" fill="rgb(223,33,50)" fg:x="13033" fg:w="71"/><text x="18.3396%" y="335.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (108 samples, 0.15%)</title><rect x="18.0688%" y="341" width="0.1499%" height="15" fill="rgb(219,149,13)" fg:x="13018" fg:w="108"/><text x="18.3188%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (22 samples, 0.03%)</title><rect x="18.1881%" y="325" width="0.0305%" height="15" fill="rgb(250,156,29)" fg:x="13104" fg:w="22"/><text x="18.4381%" y="335.50"></text></g><g><title>httpmq-rs`bytes::bytes::promotable_even_drop (8 samples, 0.01%)</title><rect x="18.2187%" y="341" width="0.0111%" height="15" fill="rgb(216,193,19)" fg:x="13126" fg:w="8"/><text x="18.4687%" y="351.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::new (12 samples, 0.02%)</title><rect x="18.2298%" y="341" width="0.0167%" height="15" fill="rgb(216,135,14)" fg:x="13134" fg:w="12"/><text x="18.4798%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (53 samples, 0.07%)</title><rect x="18.3117%" y="277" width="0.0736%" height="15" fill="rgb(241,47,5)" fg:x="13193" fg:w="53"/><text x="18.5617%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (43 samples, 0.06%)</title><rect x="18.3255%" y="261" width="0.0597%" height="15" fill="rgb(233,42,35)" fg:x="13203" fg:w="43"/><text x="18.5755%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (43 samples, 0.06%)</title><rect x="18.3255%" y="245" width="0.0597%" height="15" fill="rgb(231,13,6)" fg:x="13203" fg:w="43"/><text x="18.5755%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.02%)</title><rect x="18.3658%" y="229" width="0.0194%" height="15" fill="rgb(207,181,40)" fg:x="13232" fg:w="14"/><text x="18.6158%" y="239.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (57 samples, 0.08%)</title><rect x="18.3089%" y="293" width="0.0791%" height="15" fill="rgb(254,173,49)" fg:x="13191" fg:w="57"/><text x="18.5589%" y="303.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (71 samples, 0.10%)</title><rect x="18.2992%" y="309" width="0.0985%" height="15" fill="rgb(221,1,38)" fg:x="13184" fg:w="71"/><text x="18.5492%" y="319.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (18 samples, 0.02%)</title><rect x="18.3977%" y="309" width="0.0250%" height="15" fill="rgb(206,124,46)" fg:x="13255" fg:w="18"/><text x="18.6477%" y="319.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (94 samples, 0.13%)</title><rect x="18.2950%" y="325" width="0.1305%" height="15" fill="rgb(249,21,11)" fg:x="13181" fg:w="94"/><text x="18.5450%" y="335.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.02%)</title><rect x="18.4255%" y="325" width="0.0236%" height="15" fill="rgb(222,201,40)" fg:x="13275" fg:w="17"/><text x="18.6755%" y="335.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::pad_integral (10 samples, 0.01%)</title><rect x="18.4491%" y="325" width="0.0139%" height="15" fill="rgb(235,61,29)" fg:x="13292" fg:w="10"/><text x="18.6991%" y="335.50"></text></g><g><title>httpmq-rs`core::fmt::num::imp::_&lt;impl core::fmt::Display for i32&gt;::fmt (165 samples, 0.23%)</title><rect x="18.2464%" y="341" width="0.2290%" height="15" fill="rgb(219,207,3)" fg:x="13146" fg:w="165"/><text x="18.4964%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.01%)</title><rect x="18.5657%" y="277" width="0.0139%" height="15" fill="rgb(222,56,46)" fg:x="13376" fg:w="10"/><text x="18.8157%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.01%)</title><rect x="18.5684%" y="261" width="0.0111%" height="15" fill="rgb(239,76,54)" fg:x="13378" fg:w="8"/><text x="18.8184%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.02%)</title><rect x="18.5601%" y="293" width="0.0208%" height="15" fill="rgb(231,124,27)" fg:x="13372" fg:w="15"/><text x="18.8101%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (24 samples, 0.03%)</title><rect x="18.6198%" y="277" width="0.0333%" height="15" fill="rgb(249,195,6)" fg:x="13415" fg:w="24"/><text x="18.8698%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (53 samples, 0.07%)</title><rect x="18.5809%" y="293" width="0.0736%" height="15" fill="rgb(237,174,47)" fg:x="13387" fg:w="53"/><text x="18.8309%" y="303.50"></text></g><g><title>httpmq-rs`bytes::bytes::shared_drop (72 samples, 0.10%)</title><rect x="18.5559%" y="309" width="0.0999%" height="15" fill="rgb(206,201,31)" fg:x="13369" fg:w="72"/><text x="18.8059%" y="319.50"></text></g><g><title>httpmq-rs`bytes::bytes::static_drop (8 samples, 0.01%)</title><rect x="18.6559%" y="309" width="0.0111%" height="15" fill="rgb(231,57,52)" fg:x="13441" fg:w="8"/><text x="18.9059%" y="319.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt; (23 samples, 0.03%)</title><rect x="18.6670%" y="309" width="0.0319%" height="15" fill="rgb(248,177,22)" fg:x="13449" fg:w="23"/><text x="18.9170%" y="319.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::extract::matched_path::MatchedPath&gt; (23 samples, 0.03%)</title><rect x="18.6989%" y="309" width="0.0319%" height="15" fill="rgb(215,211,37)" fg:x="13472" fg:w="23"/><text x="18.9489%" y="319.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::option::Option&lt;axum::routing::UrlParams&gt;&gt; (10 samples, 0.01%)</title><rect x="18.7308%" y="309" width="0.0139%" height="15" fill="rgb(241,128,51)" fg:x="13495" fg:w="10"/><text x="18.9808%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (30 samples, 0.04%)</title><rect x="18.7489%" y="309" width="0.0416%" height="15" fill="rgb(227,165,31)" fg:x="13508" fg:w="30"/><text x="18.9989%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (63 samples, 0.09%)</title><rect x="18.8363%" y="293" width="0.0874%" height="15" fill="rgb(228,167,24)" fg:x="13571" fg:w="63"/><text x="19.0863%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (60 samples, 0.08%)</title><rect x="18.8405%" y="277" width="0.0833%" height="15" fill="rgb(228,143,12)" fg:x="13574" fg:w="60"/><text x="19.0905%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (98 samples, 0.14%)</title><rect x="18.7905%" y="309" width="0.1360%" height="15" fill="rgb(249,149,8)" fg:x="13538" fg:w="98"/><text x="19.0405%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (25 samples, 0.03%)</title><rect x="19.0889%" y="293" width="0.0347%" height="15" fill="rgb(243,35,44)" fg:x="13753" fg:w="25"/><text x="19.3389%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (74 samples, 0.10%)</title><rect x="19.2555%" y="277" width="0.1027%" height="15" fill="rgb(246,89,9)" fg:x="13873" fg:w="74"/><text x="19.5055%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (172 samples, 0.24%)</title><rect x="19.1236%" y="293" width="0.2387%" height="15" fill="rgb(233,213,13)" fg:x="13778" fg:w="172"/><text x="19.3736%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (319 samples, 0.44%)</title><rect x="18.9265%" y="309" width="0.4428%" height="15" fill="rgb(233,141,41)" fg:x="13636" fg:w="319"/><text x="19.1765%" y="319.50"></text></g><g><title>httpmq-rs`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (641 samples, 0.89%)</title><rect x="18.4949%" y="325" width="0.8897%" height="15" fill="rgb(239,167,4)" fg:x="13325" fg:w="641"/><text x="18.7449%" y="335.50"></text></g><g><title>httpmq-rs`bytes::bytes::promotable_even_drop (18 samples, 0.02%)</title><rect x="19.3929%" y="325" width="0.0250%" height="15" fill="rgb(209,217,16)" fg:x="13972" fg:w="18"/><text x="19.6429%" y="335.50"></text></g><g><title>httpmq-rs`bytes::bytes::static_drop (9 samples, 0.01%)</title><rect x="19.4234%" y="325" width="0.0125%" height="15" fill="rgb(219,88,35)" fg:x="13994" fg:w="9"/><text x="19.6734%" y="335.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::shared_v_drop (9 samples, 0.01%)</title><rect x="19.4359%" y="325" width="0.0125%" height="15" fill="rgb(220,193,23)" fg:x="14003" fg:w="9"/><text x="19.6859%" y="335.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt; (13 samples, 0.02%)</title><rect x="19.4484%" y="325" width="0.0180%" height="15" fill="rgb(230,90,52)" fg:x="14012" fg:w="13"/><text x="19.6984%" y="335.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::extract::matched_path::MatchedPath&gt; (9 samples, 0.01%)</title><rect x="19.4665%" y="325" width="0.0125%" height="15" fill="rgb(252,106,19)" fg:x="14025" fg:w="9"/><text x="19.7165%" y="335.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::extract::request_parts::OriginalUri&gt; (12 samples, 0.02%)</title><rect x="19.4790%" y="325" width="0.0167%" height="15" fill="rgb(206,74,20)" fg:x="14034" fg:w="12"/><text x="19.7290%" y="335.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::routing::RouteId&gt; (20 samples, 0.03%)</title><rect x="19.4956%" y="325" width="0.0278%" height="15" fill="rgb(230,138,44)" fg:x="14046" fg:w="20"/><text x="19.7456%" y="335.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::option::Option&lt;axum::routing::UrlParams&gt;&gt; (15 samples, 0.02%)</title><rect x="19.5234%" y="325" width="0.0208%" height="15" fill="rgb(235,182,43)" fg:x="14066" fg:w="15"/><text x="19.7734%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_size (46 samples, 0.06%)</title><rect x="19.5900%" y="277" width="0.0638%" height="15" fill="rgb(242,16,51)" fg:x="14114" fg:w="46"/><text x="19.8400%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (12 samples, 0.02%)</title><rect x="19.6538%" y="277" width="0.0167%" height="15" fill="rgb(248,9,4)" fg:x="14160" fg:w="12"/><text x="19.9038%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.01%)</title><rect x="19.6566%" y="261" width="0.0139%" height="15" fill="rgb(210,31,22)" fg:x="14162" fg:w="10"/><text x="19.9066%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (64 samples, 0.09%)</title><rect x="19.5830%" y="293" width="0.0888%" height="15" fill="rgb(239,54,39)" fg:x="14109" fg:w="64"/><text x="19.8330%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (18 samples, 0.02%)</title><rect x="19.7232%" y="277" width="0.0250%" height="15" fill="rgb(230,99,41)" fg:x="14210" fg:w="18"/><text x="19.9732%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (8 samples, 0.01%)</title><rect x="19.7496%" y="277" width="0.0111%" height="15" fill="rgb(253,106,12)" fg:x="14229" fg:w="8"/><text x="19.9996%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_small (65 samples, 0.09%)</title><rect x="19.6719%" y="293" width="0.0902%" height="15" fill="rgb(213,46,41)" fg:x="14173" fg:w="65"/><text x="19.9219%" y="303.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::shared_v_drop (145 samples, 0.20%)</title><rect x="19.5636%" y="309" width="0.2013%" height="15" fill="rgb(215,133,35)" fg:x="14095" fg:w="145"/><text x="19.8136%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (25 samples, 0.03%)</title><rect x="19.7649%" y="309" width="0.0347%" height="15" fill="rgb(213,28,5)" fg:x="14240" fg:w="25"/><text x="20.0149%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (77 samples, 0.11%)</title><rect x="19.8246%" y="293" width="0.1069%" height="15" fill="rgb(215,77,49)" fg:x="14283" fg:w="77"/><text x="20.0746%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (77 samples, 0.11%)</title><rect x="19.8246%" y="277" width="0.1069%" height="15" fill="rgb(248,100,22)" fg:x="14283" fg:w="77"/><text x="20.0746%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (95 samples, 0.13%)</title><rect x="19.8010%" y="309" width="0.1319%" height="15" fill="rgb(208,67,9)" fg:x="14266" fg:w="95"/><text x="20.0510%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (22 samples, 0.03%)</title><rect x="20.0702%" y="293" width="0.0305%" height="15" fill="rgb(219,133,21)" fg:x="14460" fg:w="22"/><text x="20.3202%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (68 samples, 0.09%)</title><rect x="20.2035%" y="277" width="0.0944%" height="15" fill="rgb(246,46,29)" fg:x="14556" fg:w="68"/><text x="20.4535%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (164 samples, 0.23%)</title><rect x="20.1008%" y="293" width="0.2276%" height="15" fill="rgb(246,185,52)" fg:x="14482" fg:w="164"/><text x="20.3508%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (22 samples, 0.03%)</title><rect x="20.2979%" y="277" width="0.0305%" height="15" fill="rgb(252,136,11)" fg:x="14624" fg:w="22"/><text x="20.5479%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (292 samples, 0.41%)</title><rect x="19.9328%" y="309" width="0.4053%" height="15" fill="rgb(219,138,53)" fg:x="14361" fg:w="292"/><text x="20.1828%" y="319.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (582 samples, 0.81%)</title><rect x="19.5442%" y="325" width="0.8078%" height="15" fill="rgb(211,51,23)" fg:x="14081" fg:w="582"/><text x="19.7942%" y="335.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (23 samples, 0.03%)</title><rect x="20.3520%" y="325" width="0.0319%" height="15" fill="rgb(247,221,28)" fg:x="14663" fg:w="23"/><text x="20.6020%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (51 samples, 0.07%)</title><rect x="20.3992%" y="325" width="0.0708%" height="15" fill="rgb(251,222,45)" fg:x="14697" fg:w="51"/><text x="20.6492%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (25 samples, 0.03%)</title><rect x="20.4353%" y="309" width="0.0347%" height="15" fill="rgb(217,162,53)" fg:x="14723" fg:w="25"/><text x="20.6853%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (25 samples, 0.03%)</title><rect x="20.4353%" y="293" width="0.0347%" height="15" fill="rgb(229,93,14)" fg:x="14723" fg:w="25"/><text x="20.6853%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (11 samples, 0.02%)</title><rect x="20.5297%" y="309" width="0.0153%" height="15" fill="rgb(209,67,49)" fg:x="14791" fg:w="11"/><text x="20.7797%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (37 samples, 0.05%)</title><rect x="20.5991%" y="293" width="0.0514%" height="15" fill="rgb(213,87,29)" fg:x="14841" fg:w="37"/><text x="20.8491%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (82 samples, 0.11%)</title><rect x="20.5463%" y="309" width="0.1138%" height="15" fill="rgb(205,151,52)" fg:x="14803" fg:w="82"/><text x="20.7963%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (139 samples, 0.19%)</title><rect x="20.4700%" y="325" width="0.1929%" height="15" fill="rgb(253,215,39)" fg:x="14748" fg:w="139"/><text x="20.7200%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (9 samples, 0.01%)</title><rect x="20.6629%" y="325" width="0.0125%" height="15" fill="rgb(221,220,41)" fg:x="14887" fg:w="9"/><text x="20.9129%" y="335.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum_core::extract::RequestParts&lt;hyper::body::body::Body&gt;&gt; (1,590 samples, 2.21%)</title><rect x="18.4754%" y="341" width="2.2069%" height="15" fill="rgb(218,133,21)" fg:x="13311" fg:w="1590"/><text x="18.7254%" y="351.50">h..</text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;httpmq_rs::service::process::{{closure}}&gt;&gt; (14 samples, 0.02%)</title><rect x="20.6823%" y="341" width="0.0194%" height="15" fill="rgb(221,193,43)" fg:x="14901" fg:w="14"/><text x="20.9323%" y="351.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (10 samples, 0.01%)</title><rect x="20.7087%" y="341" width="0.0139%" height="15" fill="rgb(240,128,52)" fg:x="14920" fg:w="10"/><text x="20.9587%" y="351.50"></text></g><g><title>httpmq-rs`core::str::converts::from_utf8 (45 samples, 0.06%)</title><rect x="20.7226%" y="341" width="0.0625%" height="15" fill="rgb(253,114,12)" fg:x="14930" fg:w="45"/><text x="20.9726%" y="351.50"></text></g><g><title>httpmq-rs`http::header::map::HeaderMap&lt;T&gt;::insert (20 samples, 0.03%)</title><rect x="20.7850%" y="341" width="0.0278%" height="15" fill="rgb(215,223,47)" fg:x="14975" fg:w="20"/><text x="21.0350%" y="351.50"></text></g><g><title>httpmq-rs`http::header::value::is_visible_ascii (14 samples, 0.02%)</title><rect x="20.8128%" y="341" width="0.0194%" height="15" fill="rgb(248,225,23)" fg:x="14995" fg:w="14"/><text x="21.0628%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.06%)</title><rect x="20.9419%" y="309" width="0.0611%" height="15" fill="rgb(250,108,0)" fg:x="15088" fg:w="44"/><text x="21.1919%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (39 samples, 0.05%)</title><rect x="20.9488%" y="293" width="0.0541%" height="15" fill="rgb(228,208,7)" fg:x="15093" fg:w="39"/><text x="21.1988%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (39 samples, 0.05%)</title><rect x="20.9488%" y="277" width="0.0541%" height="15" fill="rgb(244,45,10)" fg:x="15093" fg:w="39"/><text x="21.1988%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.01%)</title><rect x="20.9905%" y="261" width="0.0125%" height="15" fill="rgb(207,125,25)" fg:x="15123" fg:w="9"/><text x="21.2405%" y="271.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::clone::Clone&gt;::clone (67 samples, 0.09%)</title><rect x="20.9211%" y="325" width="0.0930%" height="15" fill="rgb(210,195,18)" fg:x="15073" fg:w="67"/><text x="21.1711%" y="335.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15 samples, 0.02%)</title><rect x="21.0141%" y="325" width="0.0208%" height="15" fill="rgb(249,80,12)" fg:x="15140" fg:w="15"/><text x="21.2641%" y="335.50"></text></g><g><title>httpmq-rs`&lt;rocksdb::db_options::WriteOptions as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="21.0488%" y="325" width="0.0125%" height="15" fill="rgb(221,65,9)" fg:x="15165" fg:w="9"/><text x="21.2988%" y="335.50"></text></g><g><title>httpmq-rs`__rdl_dealloc (13 samples, 0.02%)</title><rect x="21.0682%" y="325" width="0.0180%" height="15" fill="rgb(235,49,36)" fg:x="15179" fg:w="13"/><text x="21.3182%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (16 samples, 0.02%)</title><rect x="21.1431%" y="277" width="0.0222%" height="15" fill="rgb(225,32,20)" fg:x="15233" fg:w="16"/><text x="21.3931%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (8 samples, 0.01%)</title><rect x="21.1542%" y="261" width="0.0111%" height="15" fill="rgb(215,141,46)" fg:x="15241" fg:w="8"/><text x="21.4042%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (40 samples, 0.06%)</title><rect x="21.1320%" y="293" width="0.0555%" height="15" fill="rgb(250,160,47)" fg:x="15225" fg:w="40"/><text x="21.3820%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.02%)</title><rect x="21.1681%" y="277" width="0.0194%" height="15" fill="rgb(216,222,40)" fg:x="15251" fg:w="14"/><text x="21.4181%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (12 samples, 0.02%)</title><rect x="21.1709%" y="261" width="0.0167%" height="15" fill="rgb(234,217,39)" fg:x="15253" fg:w="12"/><text x="21.4209%" y="271.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (56 samples, 0.08%)</title><rect x="21.1112%" y="309" width="0.0777%" height="15" fill="rgb(207,178,40)" fg:x="15210" fg:w="56"/><text x="21.3612%" y="319.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (81 samples, 0.11%)</title><rect x="21.0904%" y="325" width="0.1124%" height="15" fill="rgb(221,136,13)" fg:x="15195" fg:w="81"/><text x="21.3404%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 0.01%)</title><rect x="21.1889%" y="309" width="0.0139%" height="15" fill="rgb(249,199,10)" fg:x="15266" fg:w="10"/><text x="21.4389%" y="319.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (42 samples, 0.06%)</title><rect x="21.2667%" y="277" width="0.0583%" height="15" fill="rgb(249,222,13)" fg:x="15322" fg:w="42"/><text x="21.5167%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.05%)</title><rect x="21.2708%" y="261" width="0.0541%" height="15" fill="rgb(244,185,38)" fg:x="15325" fg:w="39"/><text x="21.5208%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.05%)</title><rect x="21.2722%" y="245" width="0.0527%" height="15" fill="rgb(236,202,9)" fg:x="15326" fg:w="38"/><text x="21.5222%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (38 samples, 0.05%)</title><rect x="21.2722%" y="229" width="0.0527%" height="15" fill="rgb(250,229,37)" fg:x="15326" fg:w="38"/><text x="21.5222%" y="239.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (51 samples, 0.07%)</title><rect x="21.2583%" y="293" width="0.0708%" height="15" fill="rgb(206,174,23)" fg:x="15316" fg:w="51"/><text x="21.5083%" y="303.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 samples, 0.09%)</title><rect x="21.2500%" y="309" width="0.0888%" height="15" fill="rgb(211,33,43)" fg:x="15310" fg:w="64"/><text x="21.5000%" y="319.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::pad_integral (22 samples, 0.03%)</title><rect x="21.3416%" y="309" width="0.0305%" height="15" fill="rgb(245,58,50)" fg:x="15376" fg:w="22"/><text x="21.5916%" y="319.50"></text></g><g><title>httpmq-rs`core::fmt::num::imp::_&lt;impl core::fmt::Display for i32&gt;::fmt (127 samples, 0.18%)</title><rect x="21.2098%" y="325" width="0.1763%" height="15" fill="rgb(244,68,36)" fg:x="15281" fg:w="127"/><text x="21.4598%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (106 samples, 0.15%)</title><rect x="21.4985%" y="277" width="0.1471%" height="15" fill="rgb(232,229,15)" fg:x="15489" fg:w="106"/><text x="21.7485%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (100 samples, 0.14%)</title><rect x="21.5068%" y="261" width="0.1388%" height="15" fill="rgb(254,30,23)" fg:x="15495" fg:w="100"/><text x="21.7568%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.02%)</title><rect x="21.6234%" y="245" width="0.0222%" height="15" fill="rgb(235,160,14)" fg:x="15579" fg:w="16"/><text x="21.8734%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (113 samples, 0.16%)</title><rect x="21.4901%" y="293" width="0.1568%" height="15" fill="rgb(212,155,44)" fg:x="15483" fg:w="113"/><text x="21.7401%" y="303.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::clone::Clone&gt;::clone (133 samples, 0.18%)</title><rect x="21.4776%" y="309" width="0.1846%" height="15" fill="rgb(226,2,50)" fg:x="15474" fg:w="133"/><text x="21.7276%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="21.6498%" y="293" width="0.0125%" height="15" fill="rgb(234,177,6)" fg:x="15598" fg:w="9"/><text x="21.8998%" y="303.50"></text></g><g><title>httpmq-rs`core::num::_&lt;impl core::str::traits::FromStr for i32&gt;::from_str (23 samples, 0.03%)</title><rect x="21.6942%" y="293" width="0.0319%" height="15" fill="rgb(217,24,9)" fg:x="15630" fg:w="23"/><text x="21.9442%" y="303.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (96 samples, 0.13%)</title><rect x="21.6622%" y="309" width="0.1332%" height="15" fill="rgb(220,13,46)" fg:x="15607" fg:w="96"/><text x="21.9122%" y="319.50"></text></g><g><title>httpmq-rs`core::str::converts::from_utf8 (50 samples, 0.07%)</title><rect x="21.7261%" y="293" width="0.0694%" height="15" fill="rgb(239,221,27)" fg:x="15653" fg:w="50"/><text x="21.9761%" y="303.50"></text></g><g><title>httpmq-rs`&lt;rocksdb::db_options::ReadOptions as core::default::Default&gt;::default (17 samples, 0.02%)</title><rect x="21.7955%" y="309" width="0.0236%" height="15" fill="rgb(222,198,25)" fg:x="15703" fg:w="17"/><text x="22.0455%" y="319.50"></text></g><g><title>httpmq-rs`__rdl_alloc_zeroed (8 samples, 0.01%)</title><rect x="21.8233%" y="309" width="0.0111%" height="15" fill="rgb(211,99,13)" fg:x="15723" fg:w="8"/><text x="22.0733%" y="319.50"></text></g><g><title>httpmq-rs`__rdl_dealloc (8 samples, 0.01%)</title><rect x="21.8344%" y="309" width="0.0111%" height="15" fill="rgb(232,111,31)" fg:x="15731" fg:w="8"/><text x="22.0844%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (9 samples, 0.01%)</title><rect x="21.9038%" y="277" width="0.0125%" height="15" fill="rgb(245,82,37)" fg:x="15781" fg:w="9"/><text x="22.1538%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (10 samples, 0.01%)</title><rect x="21.9829%" y="245" width="0.0139%" height="15" fill="rgb(227,149,46)" fg:x="15838" fg:w="10"/><text x="22.2329%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (25 samples, 0.03%)</title><rect x="22.0051%" y="229" width="0.0347%" height="15" fill="rgb(218,36,50)" fg:x="15854" fg:w="25"/><text x="22.2551%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.02%)</title><rect x="22.0162%" y="213" width="0.0236%" height="15" fill="rgb(226,80,48)" fg:x="15862" fg:w="17"/><text x="22.2662%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (33 samples, 0.05%)</title><rect x="21.9968%" y="245" width="0.0458%" height="15" fill="rgb(238,224,15)" fg:x="15848" fg:w="33"/><text x="22.2468%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (64 samples, 0.09%)</title><rect x="21.9579%" y="261" width="0.0888%" height="15" fill="rgb(241,136,10)" fg:x="15820" fg:w="64"/><text x="22.2079%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (10 samples, 0.01%)</title><rect x="22.0467%" y="261" width="0.0139%" height="15" fill="rgb(208,32,45)" fg:x="15884" fg:w="10"/><text x="22.2967%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (139 samples, 0.19%)</title><rect x="21.9162%" y="277" width="0.1929%" height="15" fill="rgb(207,135,9)" fg:x="15790" fg:w="139"/><text x="22.1662%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (35 samples, 0.05%)</title><rect x="22.0606%" y="261" width="0.0486%" height="15" fill="rgb(206,86,44)" fg:x="15894" fg:w="35"/><text x="22.3106%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (34 samples, 0.05%)</title><rect x="22.0620%" y="245" width="0.0472%" height="15" fill="rgb(245,177,15)" fg:x="15895" fg:w="34"/><text x="22.3120%" y="255.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (175 samples, 0.24%)</title><rect x="21.8815%" y="293" width="0.2429%" height="15" fill="rgb(206,64,50)" fg:x="15765" fg:w="175"/><text x="22.1315%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.02%)</title><rect x="22.1092%" y="277" width="0.0153%" height="15" fill="rgb(234,36,40)" fg:x="15929" fg:w="11"/><text x="22.3592%" y="287.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (228 samples, 0.32%)</title><rect x="21.8496%" y="309" width="0.3165%" height="15" fill="rgb(213,64,8)" fg:x="15742" fg:w="228"/><text x="22.0996%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (30 samples, 0.04%)</title><rect x="22.1244%" y="293" width="0.0416%" height="15" fill="rgb(210,75,36)" fg:x="15940" fg:w="30"/><text x="22.3744%" y="303.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (20 samples, 0.03%)</title><rect x="22.1661%" y="309" width="0.0278%" height="15" fill="rgb(229,88,21)" fg:x="15970" fg:w="20"/><text x="22.4161%" y="319.50"></text></g><g><title>httpmq-rs`core::iter::traits::iterator::Iterator::unzip (14 samples, 0.02%)</title><rect x="22.1938%" y="309" width="0.0194%" height="15" fill="rgb(252,204,47)" fg:x="15990" fg:w="14"/><text x="22.4438%" y="319.50"></text></g><g><title>httpmq-rs`core::num::_&lt;impl core::str::traits::FromStr for i32&gt;::from_str (20 samples, 0.03%)</title><rect x="22.2133%" y="309" width="0.0278%" height="15" fill="rgb(208,77,27)" fg:x="16004" fg:w="20"/><text x="22.4633%" y="319.50"></text></g><g><title>httpmq-rs`core::str::converts::from_utf8 (17 samples, 0.02%)</title><rect x="22.2410%" y="309" width="0.0236%" height="15" fill="rgb(221,76,26)" fg:x="16024" fg:w="17"/><text x="22.4910%" y="319.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.02%)</title><rect x="22.3382%" y="293" width="0.0208%" height="15" fill="rgb(225,139,18)" fg:x="16094" fg:w="15"/><text x="22.5882%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb::ReadOptions::ReadOptions (14 samples, 0.02%)</title><rect x="22.3618%" y="277" width="0.0194%" height="15" fill="rgb(230,137,11)" fg:x="16111" fg:w="14"/><text x="22.6118%" y="287.50"></text></g><g><title>libc+ (10 samples, 0.01%)</title><rect x="22.3923%" y="261" width="0.0139%" height="15" fill="rgb(212,28,1)" fg:x="16133" fg:w="10"/><text x="22.6423%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (53 samples, 0.07%)</title><rect x="22.4118%" y="245" width="0.0736%" height="15" fill="rgb(248,164,17)" fg:x="16147" fg:w="53"/><text x="22.6618%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (49 samples, 0.07%)</title><rect x="22.4173%" y="229" width="0.0680%" height="15" fill="rgb(222,171,42)" fg:x="16151" fg:w="49"/><text x="22.6673%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (48 samples, 0.07%)</title><rect x="22.4187%" y="213" width="0.0666%" height="15" fill="rgb(243,84,45)" fg:x="16152" fg:w="48"/><text x="22.6687%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (18 samples, 0.02%)</title><rect x="22.4603%" y="197" width="0.0250%" height="15" fill="rgb(252,49,23)" fg:x="16182" fg:w="18"/><text x="22.7103%" y="207.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (58 samples, 0.08%)</title><rect x="22.4062%" y="261" width="0.0805%" height="15" fill="rgb(215,19,7)" fg:x="16143" fg:w="58"/><text x="22.6562%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb_readoptions_create (93 samples, 0.13%)</title><rect x="22.3812%" y="277" width="0.1291%" height="15" fill="rgb(238,81,41)" fg:x="16125" fg:w="93"/><text x="22.6312%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (16 samples, 0.02%)</title><rect x="22.4881%" y="261" width="0.0222%" height="15" fill="rgb(210,199,37)" fg:x="16202" fg:w="16"/><text x="22.7381%" y="271.50"></text></g><g><title>libc+ (24 samples, 0.03%)</title><rect x="22.5103%" y="277" width="0.0333%" height="15" fill="rgb(244,192,49)" fg:x="16218" fg:w="24"/><text x="22.7603%" y="287.50"></text></g><g><title>httpmq-rs`&lt;rocksdb::db_options::ReadOptions as core::default::Default&gt;::default (134 samples, 0.19%)</title><rect x="22.3590%" y="293" width="0.1860%" height="15" fill="rgb(226,211,11)" fg:x="16109" fg:w="134"/><text x="22.6090%" y="303.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.01%)</title><rect x="22.5533%" y="293" width="0.0139%" height="15" fill="rgb(236,162,54)" fg:x="16249" fg:w="10"/><text x="22.8033%" y="303.50"></text></g><g><title>httpmq-rs`alloc::vec::source_iter_marker::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="22.5672%" y="293" width="0.0111%" height="15" fill="rgb(220,229,9)" fg:x="16259" fg:w="8"/><text x="22.8172%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (79 samples, 0.11%)</title><rect x="22.6505%" y="229" width="0.1097%" height="15" fill="rgb(250,87,22)" fg:x="16319" fg:w="79"/><text x="22.9005%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.02%)</title><rect x="22.7449%" y="213" width="0.0153%" height="15" fill="rgb(239,43,17)" fg:x="16387" fg:w="11"/><text x="22.9949%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (98 samples, 0.14%)</title><rect x="22.6255%" y="261" width="0.1360%" height="15" fill="rgb(231,177,25)" fg:x="16301" fg:w="98"/><text x="22.8755%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (86 samples, 0.12%)</title><rect x="22.6422%" y="245" width="0.1194%" height="15" fill="rgb(219,179,1)" fg:x="16313" fg:w="86"/><text x="22.8922%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (42 samples, 0.06%)</title><rect x="22.7629%" y="261" width="0.0583%" height="15" fill="rgb(238,219,53)" fg:x="16400" fg:w="42"/><text x="23.0129%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (25 samples, 0.03%)</title><rect x="22.7865%" y="245" width="0.0347%" height="15" fill="rgb(232,167,36)" fg:x="16417" fg:w="25"/><text x="23.0365%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (22 samples, 0.03%)</title><rect x="22.7907%" y="229" width="0.0305%" height="15" fill="rgb(244,19,51)" fg:x="16420" fg:w="22"/><text x="23.0407%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (40 samples, 0.06%)</title><rect x="22.8212%" y="261" width="0.0555%" height="15" fill="rgb(224,6,22)" fg:x="16442" fg:w="40"/><text x="23.0712%" y="271.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (212 samples, 0.29%)</title><rect x="22.5964%" y="277" width="0.2943%" height="15" fill="rgb(224,145,5)" fg:x="16280" fg:w="212"/><text x="22.8464%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.01%)</title><rect x="23.0128%" y="197" width="0.0111%" height="15" fill="rgb(234,130,49)" fg:x="16580" fg:w="8"/><text x="23.2628%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (80 samples, 0.11%)</title><rect x="22.9309%" y="245" width="0.1110%" height="15" fill="rgb(254,6,2)" fg:x="16521" fg:w="80"/><text x="23.1809%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (71 samples, 0.10%)</title><rect x="22.9434%" y="229" width="0.0985%" height="15" fill="rgb(208,96,46)" fg:x="16530" fg:w="71"/><text x="23.1934%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (68 samples, 0.09%)</title><rect x="22.9475%" y="213" width="0.0944%" height="15" fill="rgb(239,3,39)" fg:x="16533" fg:w="68"/><text x="23.1975%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.02%)</title><rect x="23.0239%" y="197" width="0.0180%" height="15" fill="rgb(233,210,1)" fg:x="16588" fg:w="13"/><text x="23.2739%" y="207.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (90 samples, 0.12%)</title><rect x="22.9211%" y="261" width="0.1249%" height="15" fill="rgb(244,137,37)" fg:x="16514" fg:w="90"/><text x="23.1711%" y="271.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (118 samples, 0.16%)</title><rect x="22.9003%" y="277" width="0.1638%" height="15" fill="rgb(240,136,2)" fg:x="16499" fg:w="118"/><text x="23.1503%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (12 samples, 0.02%)</title><rect x="23.0475%" y="261" width="0.0167%" height="15" fill="rgb(239,18,37)" fg:x="16605" fg:w="12"/><text x="23.2975%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.03%)</title><rect x="23.0724%" y="277" width="0.0305%" height="15" fill="rgb(218,185,22)" fg:x="16623" fg:w="22"/><text x="23.3224%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (30 samples, 0.04%)</title><rect x="23.1030%" y="277" width="0.0416%" height="15" fill="rgb(225,218,4)" fg:x="16645" fg:w="30"/><text x="23.3530%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (20 samples, 0.03%)</title><rect x="23.1169%" y="261" width="0.0278%" height="15" fill="rgb(230,182,32)" fg:x="16655" fg:w="20"/><text x="23.3669%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (12 samples, 0.02%)</title><rect x="23.1446%" y="277" width="0.0167%" height="15" fill="rgb(242,56,43)" fg:x="16675" fg:w="12"/><text x="23.3946%" y="287.50"></text></g><g><title>httpmq-rs`core::iter::traits::iterator::Iterator::unzip (431 samples, 0.60%)</title><rect x="22.5783%" y="293" width="0.5982%" height="15" fill="rgb(233,99,24)" fg:x="16267" fg:w="431"/><text x="22.8283%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb::DB::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (33 samples, 0.05%)</title><rect x="23.1765%" y="293" width="0.0458%" height="15" fill="rgb(234,209,42)" fg:x="16698" fg:w="33"/><text x="23.4265%" y="303.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.02%)</title><rect x="23.2390%" y="277" width="0.0153%" height="15" fill="rgb(227,7,12)" fg:x="16743" fg:w="11"/><text x="23.4890%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (9 samples, 0.01%)</title><rect x="23.4403%" y="197" width="0.0125%" height="15" fill="rgb(245,203,43)" fg:x="16888" fg:w="9"/><text x="23.6903%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.02%)</title><rect x="23.4541%" y="197" width="0.0153%" height="15" fill="rgb(238,205,33)" fg:x="16898" fg:w="11"/><text x="23.7041%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (111 samples, 0.15%)</title><rect x="23.3167%" y="245" width="0.1541%" height="15" fill="rgb(231,56,7)" fg:x="16799" fg:w="111"/><text x="23.5667%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (91 samples, 0.13%)</title><rect x="23.3445%" y="229" width="0.1263%" height="15" fill="rgb(244,186,29)" fg:x="16819" fg:w="91"/><text x="23.5945%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (89 samples, 0.12%)</title><rect x="23.3473%" y="213" width="0.1235%" height="15" fill="rgb(234,111,31)" fg:x="16821" fg:w="89"/><text x="23.5973%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (39 samples, 0.05%)</title><rect x="23.5124%" y="229" width="0.0541%" height="15" fill="rgb(241,149,10)" fg:x="16940" fg:w="39"/><text x="23.7624%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (37 samples, 0.05%)</title><rect x="23.5152%" y="213" width="0.0514%" height="15" fill="rgb(249,206,44)" fg:x="16942" fg:w="37"/><text x="23.7652%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (68 samples, 0.09%)</title><rect x="23.4750%" y="245" width="0.0944%" height="15" fill="rgb(251,153,30)" fg:x="16913" fg:w="68"/><text x="23.7250%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (137 samples, 0.19%)</title><rect x="23.5693%" y="245" width="0.1902%" height="15" fill="rgb(239,152,38)" fg:x="16981" fg:w="137"/><text x="23.8193%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (73 samples, 0.10%)</title><rect x="23.6582%" y="229" width="0.1013%" height="15" fill="rgb(249,139,47)" fg:x="17045" fg:w="73"/><text x="23.9082%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (30 samples, 0.04%)</title><rect x="23.7179%" y="213" width="0.0416%" height="15" fill="rgb(244,64,35)" fg:x="17088" fg:w="30"/><text x="23.9679%" y="223.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (371 samples, 0.51%)</title><rect x="23.2737%" y="261" width="0.5149%" height="15" fill="rgb(216,46,15)" fg:x="16768" fg:w="371"/><text x="23.5237%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.02%)</title><rect x="23.7650%" y="245" width="0.0236%" height="15" fill="rgb(250,74,19)" fg:x="17122" fg:w="17"/><text x="24.0150%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb_free (9 samples, 0.01%)</title><rect x="23.8081%" y="261" width="0.0125%" height="15" fill="rgb(249,42,33)" fg:x="17153" fg:w="9"/><text x="24.0581%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.02%)</title><rect x="23.8733%" y="213" width="0.0180%" height="15" fill="rgb(242,149,17)" fg:x="17200" fg:w="13"/><text x="24.1233%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (49 samples, 0.07%)</title><rect x="23.8247%" y="261" width="0.0680%" height="15" fill="rgb(244,29,21)" fg:x="17165" fg:w="49"/><text x="24.0747%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (40 samples, 0.06%)</title><rect x="23.8372%" y="245" width="0.0555%" height="15" fill="rgb(220,130,37)" fg:x="17174" fg:w="40"/><text x="24.0872%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (38 samples, 0.05%)</title><rect x="23.8400%" y="229" width="0.0527%" height="15" fill="rgb(211,67,2)" fg:x="17176" fg:w="38"/><text x="24.0900%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (11 samples, 0.02%)</title><rect x="23.8927%" y="261" width="0.0153%" height="15" fill="rgb(235,68,52)" fg:x="17214" fg:w="11"/><text x="24.1427%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.04%)</title><rect x="23.9122%" y="261" width="0.0361%" height="15" fill="rgb(246,142,3)" fg:x="17228" fg:w="26"/><text x="24.1622%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.02%)</title><rect x="23.9816%" y="229" width="0.0153%" height="15" fill="rgb(241,25,7)" fg:x="17278" fg:w="11"/><text x="24.2316%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (36 samples, 0.05%)</title><rect x="23.9483%" y="261" width="0.0500%" height="15" fill="rgb(242,119,39)" fg:x="17254" fg:w="36"/><text x="24.1983%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (25 samples, 0.03%)</title><rect x="23.9635%" y="245" width="0.0347%" height="15" fill="rgb(241,98,45)" fg:x="17265" fg:w="25"/><text x="24.2135%" y="255.50"></text></g><g><title>httpmq-rs`alloc::vec::source_iter_marker::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (590 samples, 0.82%)</title><rect x="23.2640%" y="277" width="0.8189%" height="15" fill="rgb(254,28,30)" fg:x="16761" fg:w="590"/><text x="23.5140%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (47 samples, 0.07%)</title><rect x="24.0177%" y="261" width="0.0652%" height="15" fill="rgb(241,142,54)" fg:x="17304" fg:w="47"/><text x="24.2677%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::db::convert_values (647 samples, 0.90%)</title><rect x="23.2223%" y="293" width="0.8980%" height="15" fill="rgb(222,85,15)" fg:x="16731" fg:w="647"/><text x="23.4723%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.02%)</title><rect x="24.0982%" y="277" width="0.0222%" height="15" fill="rgb(210,85,47)" fg:x="17362" fg:w="16"/><text x="24.3482%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::DefaultColumnFamily (13 samples, 0.02%)</title><rect x="24.2578%" y="261" width="0.0180%" height="15" fill="rgb(224,206,25)" fg:x="17477" fg:w="13"/><text x="24.5078%" y="271.50"></text></g><g><title>httpmq-rs`bool rocksdb::DBImpl::MultiCFSnapshot&lt;std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt; &gt;(rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, std::__1::function&lt;rocksdb::DBImpl::MultiGetColumnFamilyData* (std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::iterator&amp;)&gt;&amp;, std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair (17 samples, 0.02%)</title><rect x="24.2953%" y="245" width="0.0236%" height="15" fill="rgb(243,201,19)" fg:x="17504" fg:w="17"/><text x="24.5453%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::Cleanable (17 samples, 0.02%)</title><rect x="24.3188%" y="245" width="0.0236%" height="15" fill="rgb(236,59,4)" fg:x="17521" fg:w="17"/><text x="24.5688%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion (9 samples, 0.01%)</title><rect x="24.3466%" y="245" width="0.0125%" height="15" fill="rgb(254,179,45)" fg:x="17541" fg:w="9"/><text x="24.5966%" y="255.50"></text></g><g><title>httpmq-rs`DYLD-STUB$$std::__1::__next_prime (10 samples, 0.01%)</title><rect x="24.8157%" y="229" width="0.0139%" height="15" fill="rgb(226,14,10)" fg:x="17879" fg:w="10"/><text x="25.0657%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Instance (11 samples, 0.02%)</title><rect x="24.8740%" y="197" width="0.0153%" height="15" fill="rgb(244,27,41)" fg:x="17921" fg:w="11"/><text x="25.1240%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal (9 samples, 0.01%)</title><rect x="24.9323%" y="181" width="0.0125%" height="15" fill="rgb(235,35,32)" fg:x="17963" fg:w="9"/><text x="25.1823%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::StaticMeta::Swap (52 samples, 0.07%)</title><rect x="24.8935%" y="197" width="0.0722%" height="15" fill="rgb(218,68,31)" fg:x="17935" fg:w="52"/><text x="25.1435%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.02%)</title><rect x="24.9448%" y="181" width="0.0208%" height="15" fill="rgb(207,120,37)" fg:x="17972" fg:w="15"/><text x="25.1948%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion (98 samples, 0.14%)</title><rect x="24.8518%" y="213" width="0.1360%" height="15" fill="rgb(227,98,0)" fg:x="17905" fg:w="98"/><text x="25.1018%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Swap (16 samples, 0.02%)</title><rect x="24.9656%" y="197" width="0.0222%" height="15" fill="rgb(207,7,3)" fg:x="17987" fg:w="16"/><text x="25.2156%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Instance (12 samples, 0.02%)</title><rect x="24.9712%" y="181" width="0.0167%" height="15" fill="rgb(206,98,19)" fg:x="17991" fg:w="12"/><text x="25.2212%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Swap (9 samples, 0.01%)</title><rect x="24.9892%" y="213" width="0.0125%" height="15" fill="rgb(217,5,26)" fg:x="18004" fg:w="9"/><text x="25.2392%" y="223.50"></text></g><g><title>httpmq-rs`bool rocksdb::DBImpl::MultiCFSnapshot&lt;std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt; &gt;(rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, std::__1::function&lt;rocksdb::DBImpl::MultiGetColumnFamilyData* (std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::iterator&amp;)&gt;&amp;, std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair (136 samples, 0.19%)</title><rect x="24.8296%" y="229" width="0.1888%" height="15" fill="rgb(235,190,38)" fg:x="17889" fg:w="136"/><text x="25.0796%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.01%)</title><rect x="25.0059%" y="213" width="0.0125%" height="15" fill="rgb(247,86,24)" fg:x="18016" fg:w="9"/><text x="25.2559%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FilePicker::GetNextFile (12 samples, 0.02%)</title><rect x="25.0184%" y="229" width="0.0167%" height="15" fill="rgb(205,101,16)" fg:x="18025" fg:w="12"/><text x="25.2684%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FilePicker::PrepareNextLevel (13 samples, 0.02%)</title><rect x="25.0350%" y="229" width="0.0180%" height="15" fill="rgb(246,168,33)" fg:x="18037" fg:w="13"/><text x="25.2850%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (26 samples, 0.04%)</title><rect x="25.0531%" y="229" width="0.0361%" height="15" fill="rgb(231,114,1)" fg:x="18050" fg:w="26"/><text x="25.3031%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::Cleanable (25 samples, 0.03%)</title><rect x="25.0947%" y="229" width="0.0347%" height="15" fill="rgb(207,184,53)" fg:x="18080" fg:w="25"/><text x="25.3447%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::LRU_Insert (13 samples, 0.02%)</title><rect x="25.1600%" y="213" width="0.0180%" height="15" fill="rgb(224,95,51)" fg:x="18127" fg:w="13"/><text x="25.4100%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::LRU_Insert (15 samples, 0.02%)</title><rect x="25.1919%" y="197" width="0.0208%" height="15" fill="rgb(212,188,45)" fg:x="18150" fg:w="15"/><text x="25.4419%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (25 samples, 0.03%)</title><rect x="25.2183%" y="165" width="0.0347%" height="15" fill="rgb(223,154,38)" fg:x="18169" fg:w="25"/><text x="25.4683%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (29 samples, 0.04%)</title><rect x="25.2155%" y="181" width="0.0403%" height="15" fill="rgb(251,22,52)" fg:x="18167" fg:w="29"/><text x="25.4655%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Lock (60 samples, 0.08%)</title><rect x="25.2127%" y="197" width="0.0833%" height="15" fill="rgb(229,209,22)" fg:x="18165" fg:w="60"/><text x="25.4627%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (29 samples, 0.04%)</title><rect x="25.2557%" y="181" width="0.0403%" height="15" fill="rgb(234,138,34)" fg:x="18196" fg:w="29"/><text x="25.5057%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (13 samples, 0.02%)</title><rect x="25.2974%" y="181" width="0.0180%" height="15" fill="rgb(212,95,11)" fg:x="18226" fg:w="13"/><text x="25.5474%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (13 samples, 0.02%)</title><rect x="25.2974%" y="165" width="0.0180%" height="15" fill="rgb(240,179,47)" fg:x="18226" fg:w="13"/><text x="25.5474%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Unlock (32 samples, 0.04%)</title><rect x="25.2960%" y="197" width="0.0444%" height="15" fill="rgb(240,163,11)" fg:x="18225" fg:w="32"/><text x="25.5460%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (18 samples, 0.02%)</title><rect x="25.3154%" y="181" width="0.0250%" height="15" fill="rgb(236,37,12)" fg:x="18239" fg:w="18"/><text x="25.5654%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Release (127 samples, 0.18%)</title><rect x="25.1780%" y="213" width="0.1763%" height="15" fill="rgb(232,164,16)" fg:x="18140" fg:w="127"/><text x="25.4280%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Release (17 samples, 0.02%)</title><rect x="25.3543%" y="213" width="0.0236%" height="15" fill="rgb(244,205,15)" fg:x="18267" fg:w="17"/><text x="25.6043%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::~Cleanable (183 samples, 0.25%)</title><rect x="25.1294%" y="229" width="0.2540%" height="15" fill="rgb(223,117,47)" fg:x="18105" fg:w="183"/><text x="25.3794%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion (20 samples, 0.03%)</title><rect x="25.3834%" y="229" width="0.0278%" height="15" fill="rgb(244,107,35)" fg:x="18288" fg:w="20"/><text x="25.6334%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::CompareAndSwap (14 samples, 0.02%)</title><rect x="25.4167%" y="213" width="0.0194%" height="15" fill="rgb(205,140,8)" fg:x="18312" fg:w="14"/><text x="25.6667%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Instance (10 samples, 0.01%)</title><rect x="25.4362%" y="213" width="0.0139%" height="15" fill="rgb(228,84,46)" fg:x="18326" fg:w="10"/><text x="25.6862%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap (34 samples, 0.05%)</title><rect x="25.4501%" y="213" width="0.0472%" height="15" fill="rgb(254,188,9)" fg:x="18336" fg:w="34"/><text x="25.7001%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.01%)</title><rect x="25.4848%" y="197" width="0.0125%" height="15" fill="rgb(206,112,54)" fg:x="18361" fg:w="9"/><text x="25.7348%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion (66 samples, 0.09%)</title><rect x="25.4112%" y="229" width="0.0916%" height="15" fill="rgb(216,84,49)" fg:x="18308" fg:w="66"/><text x="25.6612%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::EncodeVarint32 (23 samples, 0.03%)</title><rect x="25.5028%" y="229" width="0.0319%" height="15" fill="rgb(214,194,35)" fg:x="18374" fg:w="23"/><text x="25.7528%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::GetPerfLevel (15 samples, 0.02%)</title><rect x="25.5403%" y="229" width="0.0208%" height="15" fill="rgb(249,28,3)" fg:x="18401" fg:w="15"/><text x="25.7903%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::LookupKey::LookupKey (51 samples, 0.07%)</title><rect x="25.5666%" y="229" width="0.0708%" height="15" fill="rgb(222,56,52)" fg:x="18420" fg:w="51"/><text x="25.8166%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.03%)</title><rect x="25.6097%" y="213" width="0.0278%" height="15" fill="rgb(245,217,50)" fg:x="18451" fg:w="20"/><text x="25.8597%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (25 samples, 0.03%)</title><rect x="26.7423%" y="197" width="0.0347%" height="15" fill="rgb(213,201,24)" fg:x="19267" fg:w="25"/><text x="26.9923%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (8 samples, 0.01%)</title><rect x="26.7770%" y="197" width="0.0111%" height="15" fill="rgb(248,116,28)" fg:x="19292" fg:w="8"/><text x="27.0270%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (278 samples, 0.39%)</title><rect x="27.1045%" y="181" width="0.3859%" height="15" fill="rgb(219,72,43)" fg:x="19528" fg:w="278"/><text x="27.3545%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (155 samples, 0.22%)</title><rect x="27.2753%" y="165" width="0.2151%" height="15" fill="rgb(209,138,14)" fg:x="19651" fg:w="155"/><text x="27.5253%" y="175.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (38 samples, 0.05%)</title><rect x="27.4904%" y="181" width="0.0527%" height="15" fill="rgb(222,18,33)" fg:x="19806" fg:w="38"/><text x="27.7404%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (32 samples, 0.04%)</title><rect x="27.5431%" y="181" width="0.0444%" height="15" fill="rgb(213,199,7)" fg:x="19844" fg:w="32"/><text x="27.7931%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (603 samples, 0.84%)</title><rect x="26.7881%" y="197" width="0.8370%" height="15" fill="rgb(250,110,10)" fg:x="19300" fg:w="603"/><text x="27.0381%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (27 samples, 0.04%)</title><rect x="27.5875%" y="181" width="0.0375%" height="15" fill="rgb(248,123,6)" fg:x="19876" fg:w="27"/><text x="27.8375%" y="191.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external (9 samples, 0.01%)</title><rect x="27.7111%" y="181" width="0.0125%" height="15" fill="rgb(206,91,31)" fg:x="19965" fg:w="9"/><text x="27.9611%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::SaveValue (72 samples, 0.10%)</title><rect x="27.6320%" y="197" width="0.0999%" height="15" fill="rgb(211,154,13)" fg:x="19908" fg:w="72"/><text x="27.8820%" y="207.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (13 samples, 0.02%)</title><rect x="27.7319%" y="197" width="0.0180%" height="15" fill="rgb(225,148,7)" fg:x="19980" fg:w="13"/><text x="27.9819%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (1,454 samples, 2.02%)</title><rect x="25.7679%" y="213" width="2.0181%" height="15" fill="rgb(220,160,43)" fg:x="18565" fg:w="1454"/><text x="26.0179%" y="223.50">h..</text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.03%)</title><rect x="27.7569%" y="197" width="0.0291%" height="15" fill="rgb(213,52,39)" fg:x="19998" fg:w="21"/><text x="28.0069%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (12 samples, 0.02%)</title><rect x="27.7860%" y="213" width="0.0167%" height="15" fill="rgb(243,137,7)" fg:x="20019" fg:w="12"/><text x="28.0360%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::NewRangeTombstoneIterator (19 samples, 0.03%)</title><rect x="27.8027%" y="213" width="0.0264%" height="15" fill="rgb(230,79,13)" fg:x="20031" fg:w="19"/><text x="28.0527%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableRep::KeyComparator::decode_key (25 samples, 0.03%)</title><rect x="27.8291%" y="213" width="0.0347%" height="15" fill="rgb(247,105,23)" fg:x="20050" fg:w="25"/><text x="28.0791%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::SaveValue (10 samples, 0.01%)</title><rect x="27.8638%" y="213" width="0.0139%" height="15" fill="rgb(223,179,41)" fg:x="20075" fg:w="10"/><text x="28.1138%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1,642 samples, 2.28%)</title><rect x="25.6374%" y="229" width="2.2791%" height="15" fill="rgb(218,9,34)" fg:x="18471" fg:w="1642"/><text x="25.8874%" y="239.50">h..</text></g><g><title>libdyld.dylib`tlv_get_addr (24 samples, 0.03%)</title><rect x="27.8832%" y="213" width="0.0333%" height="15" fill="rgb(222,106,8)" fg:x="20089" fg:w="24"/><text x="28.1332%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::NewRangeTombstoneIterator (18 samples, 0.02%)</title><rect x="27.9165%" y="229" width="0.0250%" height="15" fill="rgb(211,220,0)" fg:x="20113" fg:w="18"/><text x="28.1665%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (12 samples, 0.02%)</title><rect x="27.9415%" y="229" width="0.0167%" height="15" fill="rgb(229,52,16)" fg:x="20131" fg:w="12"/><text x="28.1915%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::CompareAndSwap (13 samples, 0.02%)</title><rect x="27.9720%" y="229" width="0.0180%" height="15" fill="rgb(212,155,18)" fg:x="20153" fg:w="13"/><text x="28.2220%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (16 samples, 0.02%)</title><rect x="28.2843%" y="213" width="0.0222%" height="15" fill="rgb(242,21,14)" fg:x="20378" fg:w="16"/><text x="28.5343%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (28 samples, 0.04%)</title><rect x="28.3371%" y="197" width="0.0389%" height="15" fill="rgb(222,19,48)" fg:x="20416" fg:w="28"/><text x="28.5871%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.02%)</title><rect x="28.3593%" y="181" width="0.0167%" height="15" fill="rgb(232,45,27)" fg:x="20432" fg:w="12"/><text x="28.6093%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FilePicker::GetNextFile (63 samples, 0.09%)</title><rect x="28.3065%" y="213" width="0.0874%" height="15" fill="rgb(249,103,42)" fg:x="20394" fg:w="63"/><text x="28.5565%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (12 samples, 0.02%)</title><rect x="28.5106%" y="181" width="0.0167%" height="15" fill="rgb(246,81,33)" fg:x="20541" fg:w="12"/><text x="28.7606%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FindFileInRange (64 samples, 0.09%)</title><rect x="28.4509%" y="197" width="0.0888%" height="15" fill="rgb(252,33,42)" fg:x="20498" fg:w="64"/><text x="28.7009%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FilePicker::PrepareNextLevel (106 samples, 0.15%)</title><rect x="28.3940%" y="213" width="0.1471%" height="15" fill="rgb(209,212,41)" fg:x="20457" fg:w="106"/><text x="28.6440%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::Get (16 samples, 0.02%)</title><rect x="28.5466%" y="213" width="0.0222%" height="15" fill="rgb(207,154,6)" fg:x="20567" fg:w="16"/><text x="28.7966%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::NewRangeTombstoneIterator (21 samples, 0.03%)</title><rect x="28.5689%" y="213" width="0.0291%" height="15" fill="rgb(223,64,47)" fg:x="20583" fg:w="21"/><text x="28.8189%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::FileIndexer::GetNextLevelIndex (16 samples, 0.02%)</title><rect x="28.6036%" y="213" width="0.0222%" height="15" fill="rgb(211,161,38)" fg:x="20608" fg:w="16"/><text x="28.8536%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="28.6466%" y="197" width="0.0153%" height="15" fill="rgb(219,138,40)" fg:x="20639" fg:w="11"/><text x="28.8966%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (83 samples, 0.12%)</title><rect x="28.6258%" y="213" width="0.1152%" height="15" fill="rgb(241,228,46)" fg:x="20624" fg:w="83"/><text x="28.8758%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (57 samples, 0.08%)</title><rect x="28.6618%" y="197" width="0.0791%" height="15" fill="rgb(223,209,38)" fg:x="20650" fg:w="57"/><text x="28.9118%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::Random::GetTLSInstance (10 samples, 0.01%)</title><rect x="28.7437%" y="213" width="0.0139%" height="15" fill="rgb(236,164,45)" fg:x="20709" fg:w="10"/><text x="28.9937%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::BinarySearchIndexReader::NewIterator (25 samples, 0.03%)</title><rect x="28.8950%" y="197" width="0.0347%" height="15" fill="rgb(231,15,5)" fg:x="20818" fg:w="25"/><text x="29.1450%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::Block::NewIndexIterator (48 samples, 0.07%)</title><rect x="29.3586%" y="165" width="0.0666%" height="15" fill="rgb(252,35,15)" fg:x="21152" fg:w="48"/><text x="29.6086%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::Initialize (16 samples, 0.02%)</title><rect x="29.4030%" y="149" width="0.0222%" height="15" fill="rgb(248,181,18)" fg:x="21184" fg:w="16"/><text x="29.6530%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry (15 samples, 0.02%)</title><rect x="29.4252%" y="165" width="0.0208%" height="15" fill="rgb(233,39,42)" fg:x="21200" fg:w="15"/><text x="29.6752%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::BinarySearchIndexReader::NewIterator (104 samples, 0.14%)</title><rect x="29.3059%" y="181" width="0.1444%" height="15" fill="rgb(238,110,33)" fg:x="21114" fg:w="104"/><text x="29.5559%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::Block::NewIndexIterator (14 samples, 0.02%)</title><rect x="29.4585%" y="181" width="0.0194%" height="15" fill="rgb(233,195,10)" fg:x="21224" fg:w="14"/><text x="29.7085%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::FullFilterKeyMayMatch (12 samples, 0.02%)</title><rect x="29.4780%" y="181" width="0.0167%" height="15" fill="rgb(254,105,3)" fg:x="21238" fg:w="12"/><text x="29.7280%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry (20 samples, 0.03%)</title><rect x="29.4946%" y="181" width="0.0278%" height="15" fill="rgb(221,225,9)" fg:x="21250" fg:w="20"/><text x="29.7446%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Valid (25 samples, 0.03%)</title><rect x="29.5224%" y="181" width="0.0347%" height="15" fill="rgb(224,227,45)" fg:x="21270" fg:w="25"/><text x="29.7724%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (10 samples, 0.01%)</title><rect x="29.5571%" y="181" width="0.0139%" height="15" fill="rgb(229,198,43)" fg:x="21295" fg:w="10"/><text x="29.8071%" y="191.50"></text></g><g><title>httpmq-rs`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::BinarySeek&lt;rocksdb::DecodeKeyV4&gt; (11 samples, 0.02%)</title><rect x="29.5932%" y="165" width="0.0153%" height="15" fill="rgb(206,209,35)" fg:x="21321" fg:w="11"/><text x="29.8432%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::NextImpl (13 samples, 0.02%)</title><rect x="29.6112%" y="165" width="0.0180%" height="15" fill="rgb(245,195,53)" fg:x="21334" fg:w="13"/><text x="29.8612%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (132 samples, 0.18%)</title><rect x="30.6009%" y="117" width="0.1832%" height="15" fill="rgb(240,92,26)" fg:x="22047" fg:w="132"/><text x="30.8509%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (64 samples, 0.09%)</title><rect x="30.6952%" y="101" width="0.0888%" height="15" fill="rgb(207,40,23)" fg:x="22115" fg:w="64"/><text x="30.9452%" y="111.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (14 samples, 0.02%)</title><rect x="30.7841%" y="117" width="0.0194%" height="15" fill="rgb(223,111,35)" fg:x="22179" fg:w="14"/><text x="31.0341%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (29 samples, 0.04%)</title><rect x="30.8035%" y="117" width="0.0403%" height="15" fill="rgb(229,147,28)" fg:x="22193" fg:w="29"/><text x="31.0535%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (301 samples, 0.42%)</title><rect x="30.4426%" y="133" width="0.4178%" height="15" fill="rgb(211,29,28)" fg:x="21933" fg:w="301"/><text x="30.6926%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.02%)</title><rect x="30.8438%" y="117" width="0.0167%" height="15" fill="rgb(228,72,33)" fg:x="22222" fg:w="12"/><text x="31.0938%" y="127.50"></text></g><g><title>httpmq-rs`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::BinarySeek&lt;rocksdb::DecodeKeyV4&gt; (875 samples, 1.21%)</title><rect x="29.6681%" y="149" width="1.2145%" height="15" fill="rgb(205,214,31)" fg:x="21375" fg:w="875"/><text x="29.9181%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.02%)</title><rect x="30.8646%" y="133" width="0.0180%" height="15" fill="rgb(224,111,15)" fg:x="22237" fg:w="13"/><text x="31.1146%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (14 samples, 0.02%)</title><rect x="30.8826%" y="149" width="0.0194%" height="15" fill="rgb(253,21,26)" fg:x="22250" fg:w="14"/><text x="31.1326%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::DecodeCurrentValue (11 samples, 0.02%)</title><rect x="30.9021%" y="149" width="0.0153%" height="15" fill="rgb(245,139,43)" fg:x="22264" fg:w="11"/><text x="31.1521%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::GetVarint64Ptr (11 samples, 0.02%)</title><rect x="30.9784%" y="117" width="0.0153%" height="15" fill="rgb(252,170,7)" fg:x="22319" fg:w="11"/><text x="31.2284%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::DecodeCurrentValue (62 samples, 0.09%)</title><rect x="30.9603%" y="133" width="0.0861%" height="15" fill="rgb(231,118,14)" fg:x="22306" fg:w="62"/><text x="31.2103%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::IndexValue::DecodeFrom (38 samples, 0.05%)</title><rect x="30.9937%" y="117" width="0.0527%" height="15" fill="rgb(238,83,0)" fg:x="22330" fg:w="38"/><text x="31.2437%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::GetVarint64Ptr (13 samples, 0.02%)</title><rect x="31.0284%" y="101" width="0.0180%" height="15" fill="rgb(221,39,39)" fg:x="22355" fg:w="13"/><text x="31.2784%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::ParseNextIndexKey (110 samples, 0.15%)</title><rect x="30.9173%" y="149" width="0.1527%" height="15" fill="rgb(222,119,46)" fg:x="22275" fg:w="110"/><text x="31.1673%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::IndexValue::DecodeFrom (17 samples, 0.02%)</title><rect x="31.0464%" y="133" width="0.0236%" height="15" fill="rgb(222,165,49)" fg:x="22368" fg:w="17"/><text x="31.2964%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::SeekImpl (1,042 samples, 1.45%)</title><rect x="29.6348%" y="165" width="1.4463%" height="15" fill="rgb(219,113,52)" fg:x="21351" fg:w="1042"/><text x="29.8848%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Seek (1,094 samples, 1.52%)</title><rect x="29.5710%" y="181" width="1.5185%" height="15" fill="rgb(214,7,15)" fg:x="21305" fg:w="1094"/><text x="29.8210%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::CachableEntry&lt;rocksdb::UncompressionDict&gt;::ReleaseResource (10 samples, 0.01%)</title><rect x="31.0894%" y="181" width="0.0139%" height="15" fill="rgb(235,32,4)" fg:x="22399" fg:w="10"/><text x="31.3394%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::~Cleanable (8 samples, 0.01%)</title><rect x="31.1089%" y="181" width="0.0111%" height="15" fill="rgb(238,90,54)" fg:x="22413" fg:w="8"/><text x="31.3589%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::Block::NewDataIterator (23 samples, 0.03%)</title><rect x="31.2463%" y="165" width="0.0319%" height="15" fill="rgb(213,208,19)" fg:x="22512" fg:w="23"/><text x="31.4963%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (20 samples, 0.03%)</title><rect x="31.2893%" y="165" width="0.0278%" height="15" fill="rgb(233,156,4)" fg:x="22543" fg:w="20"/><text x="31.5393%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry (8 samples, 0.01%)</title><rect x="31.3615%" y="149" width="0.0111%" height="15" fill="rgb(207,194,5)" fg:x="22595" fg:w="8"/><text x="31.6115%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::UpdateCacheHitMetrics (11 samples, 0.02%)</title><rect x="31.4656%" y="133" width="0.0153%" height="15" fill="rgb(206,111,30)" fg:x="22670" fg:w="11"/><text x="31.7156%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Lookup (9 samples, 0.01%)</title><rect x="31.4892%" y="133" width="0.0125%" height="15" fill="rgb(243,70,54)" fg:x="22687" fg:w="9"/><text x="31.7392%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::GetUsage (11 samples, 0.02%)</title><rect x="31.5017%" y="133" width="0.0153%" height="15" fill="rgb(242,28,8)" fg:x="22696" fg:w="11"/><text x="31.7517%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Lookup (23 samples, 0.03%)</title><rect x="31.5169%" y="133" width="0.0319%" height="15" fill="rgb(219,106,18)" fg:x="22707" fg:w="23"/><text x="31.7669%" y="143.50"></text></g><g><title>httpmq-rs`ROCKSDB_XXH3p_64bits (21 samples, 0.03%)</title><rect x="31.6196%" y="117" width="0.0291%" height="15" fill="rgb(244,222,10)" fg:x="22781" fg:w="21"/><text x="31.8696%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::UpdateCacheHitMetrics (52 samples, 0.07%)</title><rect x="31.6488%" y="117" width="0.0722%" height="15" fill="rgb(236,179,52)" fg:x="22802" fg:w="52"/><text x="31.8988%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.01%)</title><rect x="31.7071%" y="101" width="0.0139%" height="15" fill="rgb(213,23,39)" fg:x="22844" fg:w="10"/><text x="31.9571%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::Hash64 (8 samples, 0.01%)</title><rect x="31.7210%" y="117" width="0.0111%" height="15" fill="rgb(238,48,10)" fg:x="22854" fg:w="8"/><text x="31.9710%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCache::GetShard (10 samples, 0.01%)</title><rect x="31.7321%" y="117" width="0.0139%" height="15" fill="rgb(251,196,23)" fg:x="22862" fg:w="10"/><text x="31.9821%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (76 samples, 0.11%)</title><rect x="31.8209%" y="69" width="0.1055%" height="15" fill="rgb(250,152,24)" fg:x="22926" fg:w="76"/><text x="32.0709%" y="79.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (88 samples, 0.12%)</title><rect x="31.8153%" y="85" width="0.1221%" height="15" fill="rgb(209,150,17)" fg:x="22922" fg:w="88"/><text x="32.0653%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Lock (129 samples, 0.18%)</title><rect x="31.8153%" y="101" width="0.1790%" height="15" fill="rgb(234,202,34)" fg:x="22922" fg:w="129"/><text x="32.0653%" y="111.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (40 samples, 0.06%)</title><rect x="31.9389%" y="85" width="0.0555%" height="15" fill="rgb(253,148,53)" fg:x="23011" fg:w="40"/><text x="32.1889%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (61 samples, 0.08%)</title><rect x="31.9972%" y="69" width="0.0847%" height="15" fill="rgb(218,129,16)" fg:x="23053" fg:w="61"/><text x="32.2472%" y="79.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (64 samples, 0.09%)</title><rect x="31.9944%" y="85" width="0.0888%" height="15" fill="rgb(216,85,19)" fg:x="23051" fg:w="64"/><text x="32.2444%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Unlock (93 samples, 0.13%)</title><rect x="31.9944%" y="101" width="0.1291%" height="15" fill="rgb(235,228,7)" fg:x="23051" fg:w="93"/><text x="32.2444%" y="111.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (29 samples, 0.04%)</title><rect x="32.0832%" y="85" width="0.0403%" height="15" fill="rgb(245,175,0)" fg:x="23115" fg:w="29"/><text x="32.3332%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (13 samples, 0.02%)</title><rect x="32.1235%" y="101" width="0.0180%" height="15" fill="rgb(208,168,36)" fg:x="23144" fg:w="13"/><text x="32.3735%" y="111.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (13 samples, 0.02%)</title><rect x="32.1415%" y="101" width="0.0180%" height="15" fill="rgb(246,171,24)" fg:x="23157" fg:w="13"/><text x="32.3915%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Lookup (299 samples, 0.42%)</title><rect x="31.7529%" y="117" width="0.4150%" height="15" fill="rgb(215,142,24)" fg:x="22877" fg:w="299"/><text x="32.0029%" y="127.50"></text></g><g><title>httpmq-rs`ROCKSDB_XXH3p_64bits (10 samples, 0.01%)</title><rect x="32.2192%" y="101" width="0.0139%" height="15" fill="rgb(250,187,7)" fg:x="23213" fg:w="10"/><text x="32.4692%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Lookup (51 samples, 0.07%)</title><rect x="32.1693%" y="117" width="0.0708%" height="15" fill="rgb(228,66,33)" fg:x="23177" fg:w="51"/><text x="32.4193%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (12 samples, 0.02%)</title><rect x="32.2512%" y="117" width="0.0167%" height="15" fill="rgb(234,215,21)" fg:x="23236" fg:w="12"/><text x="32.5012%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (646 samples, 0.90%)</title><rect x="31.3726%" y="149" width="0.8966%" height="15" fill="rgb(222,191,20)" fg:x="22603" fg:w="646"/><text x="31.6226%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry (519 samples, 0.72%)</title><rect x="31.5489%" y="133" width="0.7204%" height="15" fill="rgb(245,79,54)" fg:x="22730" fg:w="519"/><text x="31.7989%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (706 samples, 0.98%)</title><rect x="31.3171%" y="165" width="0.9799%" height="15" fill="rgb(240,10,37)" fg:x="22563" fg:w="706"/><text x="31.5671%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (17 samples, 0.02%)</title><rect x="32.2734%" y="149" width="0.0236%" height="15" fill="rgb(214,192,32)" fg:x="23252" fg:w="17"/><text x="32.5234%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (863 samples, 1.20%)</title><rect x="31.1200%" y="181" width="1.1978%" height="15" fill="rgb(209,36,54)" fg:x="22421" fg:w="863"/><text x="31.3700%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="32.3025%" y="165" width="0.0153%" height="15" fill="rgb(220,10,11)" fg:x="23273" fg:w="11"/><text x="32.5525%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Valid (12 samples, 0.02%)</title><rect x="32.3553%" y="165" width="0.0167%" height="15" fill="rgb(221,106,17)" fg:x="23311" fg:w="12"/><text x="32.6053%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::NextImpl (21 samples, 0.03%)</title><rect x="32.3761%" y="165" width="0.0291%" height="15" fill="rgb(251,142,44)" fg:x="23326" fg:w="21"/><text x="32.6261%" y="175.50"></text></g><g><title>httpmq-rs`bool rocksdb::BlockIter&lt;rocksdb::Slice&gt;::BinarySeek&lt;rocksdb::DecodeKey&gt; (100 samples, 0.14%)</title><rect x="32.4538%" y="149" width="0.1388%" height="15" fill="rgb(238,13,15)" fg:x="23382" fg:w="100"/><text x="32.7038%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::CompareCurrentKey (36 samples, 0.05%)</title><rect x="32.5426%" y="133" width="0.0500%" height="15" fill="rgb(208,107,27)" fg:x="23446" fg:w="36"/><text x="32.7926%" y="143.50"></text></g><g><title>httpmq-rs`bool rocksdb::DataBlockIter::ParseNextDataKey&lt;rocksdb::DecodeEntry&gt; (74 samples, 0.10%)</title><rect x="32.5926%" y="149" width="0.1027%" height="15" fill="rgb(205,136,37)" fg:x="23482" fg:w="74"/><text x="32.8426%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.03%)</title><rect x="32.6634%" y="133" width="0.0319%" height="15" fill="rgb(250,205,27)" fg:x="23533" fg:w="23"/><text x="32.9134%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (29 samples, 0.04%)</title><rect x="32.7231%" y="133" width="0.0403%" height="15" fill="rgb(210,80,43)" fg:x="23576" fg:w="29"/><text x="32.9731%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (18 samples, 0.02%)</title><rect x="32.7384%" y="117" width="0.0250%" height="15" fill="rgb(247,160,36)" fg:x="23587" fg:w="18"/><text x="32.9884%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.01%)</title><rect x="32.7703%" y="133" width="0.0125%" height="15" fill="rgb(234,13,49)" fg:x="23610" fg:w="9"/><text x="33.0203%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::CompareCurrentKey (67 samples, 0.09%)</title><rect x="32.6967%" y="149" width="0.0930%" height="15" fill="rgb(234,122,0)" fg:x="23557" fg:w="67"/><text x="32.9467%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.02%)</title><rect x="32.7966%" y="149" width="0.0180%" height="15" fill="rgb(207,146,38)" fg:x="23629" fg:w="13"/><text x="33.0466%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::SeekImpl (308 samples, 0.43%)</title><rect x="32.4052%" y="165" width="0.4275%" height="15" fill="rgb(207,177,25)" fg:x="23347" fg:w="308"/><text x="32.6552%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="32.8147%" y="149" width="0.0180%" height="15" fill="rgb(211,178,42)" fg:x="23642" fg:w="13"/><text x="33.0647%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::SeekForGet (376 samples, 0.52%)</title><rect x="32.3178%" y="181" width="0.5219%" height="15" fill="rgb(230,69,54)" fg:x="23284" fg:w="376"/><text x="32.5678%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::~DataBlockIter (30 samples, 0.04%)</title><rect x="32.8494%" y="181" width="0.0416%" height="15" fill="rgb(214,135,41)" fg:x="23667" fg:w="30"/><text x="33.0994%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (19 samples, 0.03%)</title><rect x="32.9715%" y="165" width="0.0264%" height="15" fill="rgb(237,67,25)" fg:x="23755" fg:w="19"/><text x="33.2215%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (16 samples, 0.02%)</title><rect x="32.9757%" y="149" width="0.0222%" height="15" fill="rgb(222,189,50)" fg:x="23758" fg:w="16"/><text x="33.2257%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::DelegateCleanupsTo (10 samples, 0.01%)</title><rect x="32.9979%" y="165" width="0.0139%" height="15" fill="rgb(245,148,34)" fg:x="23774" fg:w="10"/><text x="33.2479%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::GetContext::SaveValue (91 samples, 0.13%)</title><rect x="32.8910%" y="181" width="0.1263%" height="15" fill="rgb(222,29,6)" fg:x="23697" fg:w="91"/><text x="33.1410%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::SeekImpl (18 samples, 0.02%)</title><rect x="33.0173%" y="181" width="0.0250%" height="15" fill="rgb(221,189,43)" fg:x="23788" fg:w="18"/><text x="33.2673%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::~IndexBlockIter (11 samples, 0.02%)</title><rect x="33.0493%" y="181" width="0.0153%" height="15" fill="rgb(207,36,27)" fg:x="23811" fg:w="11"/><text x="33.2993%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::ParseInternalKey (14 samples, 0.02%)</title><rect x="33.0645%" y="181" width="0.0194%" height="15" fill="rgb(217,90,24)" fg:x="23822" fg:w="14"/><text x="33.3145%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (27 samples, 0.04%)</title><rect x="33.0840%" y="181" width="0.0375%" height="15" fill="rgb(224,66,35)" fg:x="23836" fg:w="27"/><text x="33.3340%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::Get (3,071 samples, 4.26%)</title><rect x="28.9297%" y="197" width="4.2625%" height="15" fill="rgb(221,13,50)" fg:x="20843" fg:w="3071"/><text x="29.1797%" y="207.50">httpm..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (46 samples, 0.06%)</title><rect x="33.1284%" y="181" width="0.0638%" height="15" fill="rgb(236,68,49)" fg:x="23868" fg:w="46"/><text x="33.3784%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::NewRangeTombstoneIterator (10 samples, 0.01%)</title><rect x="33.1922%" y="197" width="0.0139%" height="15" fill="rgb(229,146,28)" fg:x="23914" fg:w="10"/><text x="33.4422%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (14 samples, 0.02%)</title><rect x="33.2089%" y="197" width="0.0194%" height="15" fill="rgb(225,31,38)" fg:x="23926" fg:w="14"/><text x="33.4589%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Seek (17 samples, 0.02%)</title><rect x="33.2283%" y="197" width="0.0236%" height="15" fill="rgb(250,208,3)" fg:x="23940" fg:w="17"/><text x="33.4783%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::SeekForGet (13 samples, 0.02%)</title><rect x="33.2616%" y="197" width="0.0180%" height="15" fill="rgb(246,54,23)" fg:x="23964" fg:w="13"/><text x="33.5116%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::~DataBlockIter (8 samples, 0.01%)</title><rect x="33.2797%" y="197" width="0.0111%" height="15" fill="rgb(243,76,11)" fg:x="23977" fg:w="8"/><text x="33.5297%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::GetContext::SaveValue (8 samples, 0.01%)</title><rect x="33.2908%" y="197" width="0.0111%" height="15" fill="rgb(245,21,50)" fg:x="23985" fg:w="8"/><text x="33.5408%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::ParseInternalKey (14 samples, 0.02%)</title><rect x="33.3116%" y="197" width="0.0194%" height="15" fill="rgb(228,9,43)" fg:x="24000" fg:w="14"/><text x="33.5616%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::TableCache::Get (3,306 samples, 4.59%)</title><rect x="28.7576%" y="213" width="4.5887%" height="15" fill="rgb(208,100,47)" fg:x="20719" fg:w="3306"/><text x="29.0076%" y="223.50">httpm..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="33.3310%" y="197" width="0.0153%" height="15" fill="rgb(232,26,8)" fg:x="24014" fg:w="11"/><text x="33.5810%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (3,872 samples, 5.37%)</title><rect x="27.9915%" y="229" width="5.3743%" height="15" fill="rgb(216,166,38)" fg:x="20167" fg:w="3872"/><text x="28.2415%" y="239.50">httpmq-..</text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="33.3505%" y="213" width="0.0153%" height="15" fill="rgb(251,202,51)" fg:x="24028" fg:w="11"/><text x="33.6005%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (58 samples, 0.08%)</title><rect x="33.3976%" y="165" width="0.0805%" height="15" fill="rgb(254,216,34)" fg:x="24062" fg:w="58"/><text x="33.6476%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.02%)</title><rect x="33.4559%" y="149" width="0.0222%" height="15" fill="rgb(251,32,27)" fg:x="24104" fg:w="16"/><text x="33.7059%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (65 samples, 0.09%)</title><rect x="33.3907%" y="197" width="0.0902%" height="15" fill="rgb(208,127,28)" fg:x="24057" fg:w="65"/><text x="33.6407%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (63 samples, 0.09%)</title><rect x="33.3935%" y="181" width="0.0874%" height="15" fill="rgb(224,137,22)" fg:x="24059" fg:w="63"/><text x="33.6435%" y="191.50"></text></g><g><title>httpmq-rs`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::__rehash (82 samples, 0.11%)</title><rect x="33.3699%" y="229" width="0.1138%" height="15" fill="rgb(254,70,32)" fg:x="24042" fg:w="82"/><text x="33.6199%" y="239.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (70 samples, 0.10%)</title><rect x="33.3865%" y="213" width="0.0972%" height="15" fill="rgb(229,75,37)" fg:x="24054" fg:w="70"/><text x="33.6365%" y="223.50"></text></g><g><title>httpmq-rs`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::rehash (50 samples, 0.07%)</title><rect x="33.4837%" y="229" width="0.0694%" height="15" fill="rgb(252,64,23)" fg:x="24124" fg:w="50"/><text x="33.7337%" y="239.50"></text></g><g><title>libc++.1.dylib`std::__1::__next_prime (49 samples, 0.07%)</title><rect x="33.4851%" y="213" width="0.0680%" height="15" fill="rgb(232,162,48)" fg:x="24125" fg:w="49"/><text x="33.7351%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (33 samples, 0.05%)</title><rect x="33.5670%" y="197" width="0.0458%" height="15" fill="rgb(246,160,12)" fg:x="24184" fg:w="33"/><text x="33.8170%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.04%)</title><rect x="33.5698%" y="181" width="0.0430%" height="15" fill="rgb(247,166,0)" fg:x="24186" fg:w="31"/><text x="33.8198%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (31 samples, 0.04%)</title><rect x="33.5698%" y="165" width="0.0430%" height="15" fill="rgb(249,219,21)" fg:x="24186" fg:w="31"/><text x="33.8198%" y="175.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (37 samples, 0.05%)</title><rect x="33.5656%" y="213" width="0.0514%" height="15" fill="rgb(205,209,3)" fg:x="24183" fg:w="37"/><text x="33.8156%" y="223.50"></text></g><g><title>httpmq-rs`std::__1::vector&lt;rocksdb::Status, std::__1::allocator&lt;rocksdb::Status&gt; &gt;::vector (47 samples, 0.07%)</title><rect x="33.5531%" y="229" width="0.0652%" height="15" fill="rgb(243,44,1)" fg:x="24174" fg:w="47"/><text x="33.8031%" y="239.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (20 samples, 0.03%)</title><rect x="33.6183%" y="229" width="0.0278%" height="15" fill="rgb(206,159,16)" fg:x="24221" fg:w="20"/><text x="33.8683%" y="239.50"></text></g><g><title>libc+ (37 samples, 0.05%)</title><rect x="33.6461%" y="229" width="0.0514%" height="15" fill="rgb(244,77,30)" fg:x="24241" fg:w="37"/><text x="33.8961%" y="239.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external (27 samples, 0.04%)</title><rect x="33.6988%" y="229" width="0.0375%" height="15" fill="rgb(218,69,12)" fg:x="24279" fg:w="27"/><text x="33.9488%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.02%)</title><rect x="33.7197%" y="213" width="0.0167%" height="15" fill="rgb(212,87,7)" fg:x="24294" fg:w="12"/><text x="33.9697%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (47 samples, 0.07%)</title><rect x="33.7433%" y="213" width="0.0652%" height="15" fill="rgb(245,114,25)" fg:x="24311" fg:w="47"/><text x="33.9933%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (40 samples, 0.06%)</title><rect x="33.7530%" y="197" width="0.0555%" height="15" fill="rgb(210,61,42)" fg:x="24318" fg:w="40"/><text x="34.0030%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (39 samples, 0.05%)</title><rect x="33.7544%" y="181" width="0.0541%" height="15" fill="rgb(211,52,33)" fg:x="24319" fg:w="39"/><text x="34.0044%" y="191.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (53 samples, 0.07%)</title><rect x="33.7363%" y="229" width="0.0736%" height="15" fill="rgb(234,58,33)" fg:x="24306" fg:w="53"/><text x="33.9863%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (81 samples, 0.11%)</title><rect x="33.8099%" y="229" width="0.1124%" height="15" fill="rgb(220,115,36)" fg:x="24359" fg:w="81"/><text x="34.0599%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (31 samples, 0.04%)</title><rect x="33.9473%" y="213" width="0.0430%" height="15" fill="rgb(243,153,54)" fg:x="24458" fg:w="31"/><text x="34.1973%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (31 samples, 0.04%)</title><rect x="33.9473%" y="197" width="0.0430%" height="15" fill="rgb(251,47,18)" fg:x="24458" fg:w="31"/><text x="34.1973%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (49 samples, 0.07%)</title><rect x="33.9237%" y="229" width="0.0680%" height="15" fill="rgb(242,102,42)" fg:x="24441" fg:w="49"/><text x="34.1737%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.02%)</title><rect x="34.0944%" y="197" width="0.0236%" height="15" fill="rgb(234,31,38)" fg:x="24564" fg:w="17"/><text x="34.3444%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (92 samples, 0.13%)</title><rect x="33.9917%" y="229" width="0.1277%" height="15" fill="rgb(221,117,51)" fg:x="24490" fg:w="92"/><text x="34.2417%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (47 samples, 0.07%)</title><rect x="34.0542%" y="213" width="0.0652%" height="15" fill="rgb(212,20,18)" fg:x="24535" fg:w="47"/><text x="34.3042%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.02%)</title><rect x="34.1194%" y="229" width="0.0194%" height="15" fill="rgb(245,133,36)" fg:x="24582" fg:w="14"/><text x="34.3694%" y="239.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (38 samples, 0.05%)</title><rect x="34.1388%" y="229" width="0.0527%" height="15" fill="rgb(212,6,19)" fg:x="24596" fg:w="38"/><text x="34.3888%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;*, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (7,106 samples, 9.86%)</title><rect x="24.3591%" y="245" width="9.8630%" height="15" fill="rgb(218,1,36)" fg:x="17550" fg:w="7106"/><text x="24.6091%" y="255.50">httpmq-rs`rock..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (22 samples, 0.03%)</title><rect x="34.1916%" y="229" width="0.0305%" height="15" fill="rgb(246,84,54)" fg:x="24634" fg:w="22"/><text x="34.4416%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::LogFileImpl::LogNumber (51 samples, 0.07%)</title><rect x="34.2221%" y="245" width="0.0708%" height="15" fill="rgb(242,110,6)" fg:x="24656" fg:w="51"/><text x="34.4721%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::LookupKey::LookupKey (22 samples, 0.03%)</title><rect x="34.2929%" y="245" width="0.0305%" height="15" fill="rgb(214,47,5)" fg:x="24707" fg:w="22"/><text x="34.5429%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (15 samples, 0.02%)</title><rect x="34.3234%" y="245" width="0.0208%" height="15" fill="rgb(218,159,25)" fg:x="24729" fg:w="15"/><text x="34.5734%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (18 samples, 0.02%)</title><rect x="34.3442%" y="245" width="0.0250%" height="15" fill="rgb(215,211,28)" fg:x="24744" fg:w="18"/><text x="34.5942%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (27 samples, 0.04%)</title><rect x="34.3692%" y="245" width="0.0375%" height="15" fill="rgb(238,59,32)" fg:x="24762" fg:w="27"/><text x="34.6192%" y="255.50"></text></g><g><title>httpmq-rs`std::__1::__function::__func&lt;rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;*, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;*)::$_0, std::__1::allocator&lt;rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string (16 samples, 0.02%)</title><rect x="34.4067%" y="245" width="0.0222%" height="15" fill="rgb(226,82,3)" fg:x="24789" fg:w="16"/><text x="34.6567%" y="255.50"></text></g><g><title>httpmq-rs`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::rehash (19 samples, 0.03%)</title><rect x="34.4289%" y="245" width="0.0264%" height="15" fill="rgb(240,164,32)" fg:x="24805" fg:w="19"/><text x="34.6789%" y="255.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (9 samples, 0.01%)</title><rect x="34.4567%" y="245" width="0.0125%" height="15" fill="rgb(232,46,7)" fg:x="24825" fg:w="9"/><text x="34.7067%" y="255.50"></text></g><g><title>libc+ (43 samples, 0.06%)</title><rect x="34.4692%" y="245" width="0.0597%" height="15" fill="rgb(229,129,53)" fg:x="24834" fg:w="43"/><text x="34.7192%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (18 samples, 0.02%)</title><rect x="34.5427%" y="245" width="0.0250%" height="15" fill="rgb(234,188,29)" fg:x="24887" fg:w="18"/><text x="34.7927%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.02%)</title><rect x="34.5691%" y="245" width="0.0236%" height="15" fill="rgb(246,141,4)" fg:x="24906" fg:w="17"/><text x="34.8191%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (7,437 samples, 10.32%)</title><rect x="24.2758%" y="261" width="10.3224%" height="15" fill="rgb(229,23,39)" fg:x="17490" fg:w="7437"/><text x="24.5258%" y="271.50">httpmq-rs`rocks..</text></g><g><title>libc++abi.dylib`operator new(unsigned long) (59 samples, 0.08%)</title><rect x="34.6010%" y="261" width="0.0819%" height="15" fill="rgb(206,12,3)" fg:x="24929" fg:w="59"/><text x="34.8510%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (58 samples, 0.08%)</title><rect x="34.6024%" y="245" width="0.0805%" height="15" fill="rgb(252,226,20)" fg:x="24930" fg:w="58"/><text x="34.8524%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (48 samples, 0.07%)</title><rect x="34.6163%" y="229" width="0.0666%" height="15" fill="rgb(216,123,35)" fg:x="24940" fg:w="48"/><text x="34.8663%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (46 samples, 0.06%)</title><rect x="34.6191%" y="213" width="0.0638%" height="15" fill="rgb(212,68,40)" fg:x="24942" fg:w="46"/><text x="34.8691%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.02%)</title><rect x="34.6621%" y="197" width="0.0208%" height="15" fill="rgb(254,125,32)" fg:x="24973" fg:w="15"/><text x="34.9121%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.02%)</title><rect x="34.6857%" y="261" width="0.0236%" height="15" fill="rgb(253,97,22)" fg:x="24990" fg:w="17"/><text x="34.9357%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.02%)</title><rect x="34.6940%" y="245" width="0.0153%" height="15" fill="rgb(241,101,14)" fg:x="24996" fg:w="11"/><text x="34.9440%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (11 samples, 0.02%)</title><rect x="34.6940%" y="229" width="0.0153%" height="15" fill="rgb(238,103,29)" fg:x="24996" fg:w="11"/><text x="34.9440%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.03%)</title><rect x="34.7717%" y="229" width="0.0305%" height="15" fill="rgb(233,195,47)" fg:x="25052" fg:w="22"/><text x="35.0217%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (76 samples, 0.11%)</title><rect x="34.7093%" y="261" width="0.1055%" height="15" fill="rgb(246,218,30)" fg:x="25007" fg:w="76"/><text x="34.9593%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (55 samples, 0.08%)</title><rect x="34.7384%" y="245" width="0.0763%" height="15" fill="rgb(219,145,47)" fg:x="25028" fg:w="55"/><text x="34.9884%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (9 samples, 0.01%)</title><rect x="34.8023%" y="229" width="0.0125%" height="15" fill="rgb(243,12,26)" fg:x="25074" fg:w="9"/><text x="35.0523%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::DB::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (7,622 samples, 10.58%)</title><rect x="24.2370%" y="277" width="10.5792%" height="15" fill="rgb(214,87,16)" fg:x="17462" fg:w="7622"/><text x="24.4870%" y="287.50">httpmq-rs`rocks..</text></g><g><title>httpmq-rs`rocksdb::DBImpl::DefaultColumnFamily (34 samples, 0.05%)</title><rect x="34.8162%" y="277" width="0.0472%" height="15" fill="rgb(208,99,42)" fg:x="25084" fg:w="34"/><text x="35.0662%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (14 samples, 0.02%)</title><rect x="34.8634%" y="277" width="0.0194%" height="15" fill="rgb(253,99,2)" fg:x="25118" fg:w="14"/><text x="35.1134%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.03%)</title><rect x="34.8911%" y="229" width="0.0347%" height="15" fill="rgb(220,168,23)" fg:x="25138" fg:w="25"/><text x="35.1411%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (23 samples, 0.03%)</title><rect x="34.8939%" y="213" width="0.0319%" height="15" fill="rgb(242,38,24)" fg:x="25140" fg:w="23"/><text x="35.1439%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (30 samples, 0.04%)</title><rect x="34.8856%" y="245" width="0.0416%" height="15" fill="rgb(225,182,9)" fg:x="25134" fg:w="30"/><text x="35.1356%" y="255.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (33 samples, 0.05%)</title><rect x="34.8856%" y="261" width="0.0458%" height="15" fill="rgb(243,178,37)" fg:x="25134" fg:w="33"/><text x="35.1356%" y="271.50"></text></g><g><title>httpmq-rs`std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::vector (77 samples, 0.11%)</title><rect x="34.8828%" y="277" width="0.1069%" height="15" fill="rgb(232,139,19)" fg:x="25132" fg:w="77"/><text x="35.1328%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (40 samples, 0.06%)</title><rect x="34.9341%" y="261" width="0.0555%" height="15" fill="rgb(225,201,24)" fg:x="25169" fg:w="40"/><text x="35.1841%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (35 samples, 0.05%)</title><rect x="35.0146%" y="261" width="0.0486%" height="15" fill="rgb(221,47,46)" fg:x="25227" fg:w="35"/><text x="35.2646%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (35 samples, 0.05%)</title><rect x="35.0146%" y="245" width="0.0486%" height="15" fill="rgb(249,23,13)" fg:x="25227" fg:w="35"/><text x="35.2646%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.04%)</title><rect x="35.0188%" y="229" width="0.0444%" height="15" fill="rgb(219,9,5)" fg:x="25230" fg:w="32"/><text x="35.2688%" y="239.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (47 samples, 0.07%)</title><rect x="35.0008%" y="277" width="0.0652%" height="15" fill="rgb(254,171,16)" fg:x="25217" fg:w="47"/><text x="35.2508%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (43 samples, 0.06%)</title><rect x="35.2034%" y="229" width="0.0597%" height="15" fill="rgb(230,171,20)" fg:x="25363" fg:w="43"/><text x="35.4534%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (123 samples, 0.17%)</title><rect x="35.0938%" y="245" width="0.1707%" height="15" fill="rgb(210,71,41)" fg:x="25284" fg:w="123"/><text x="35.3438%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (127 samples, 0.18%)</title><rect x="35.0896%" y="261" width="0.1763%" height="15" fill="rgb(206,173,20)" fg:x="25281" fg:w="127"/><text x="35.3396%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (147 samples, 0.20%)</title><rect x="35.0688%" y="277" width="0.2040%" height="15" fill="rgb(233,88,34)" fg:x="25266" fg:w="147"/><text x="35.3188%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (50 samples, 0.07%)</title><rect x="35.2784%" y="277" width="0.0694%" height="15" fill="rgb(223,209,46)" fg:x="25417" fg:w="50"/><text x="35.5284%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (30 samples, 0.04%)</title><rect x="35.3061%" y="261" width="0.0416%" height="15" fill="rgb(250,43,18)" fg:x="25437" fg:w="30"/><text x="35.5561%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (26 samples, 0.04%)</title><rect x="35.3117%" y="245" width="0.0361%" height="15" fill="rgb(208,13,10)" fg:x="25441" fg:w="26"/><text x="35.5617%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (57 samples, 0.08%)</title><rect x="35.4699%" y="245" width="0.0791%" height="15" fill="rgb(212,200,36)" fg:x="25555" fg:w="57"/><text x="35.7199%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (147 samples, 0.20%)</title><rect x="35.3478%" y="277" width="0.2040%" height="15" fill="rgb(225,90,30)" fg:x="25467" fg:w="147"/><text x="35.5978%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (99 samples, 0.14%)</title><rect x="35.4144%" y="261" width="0.1374%" height="15" fill="rgb(236,182,39)" fg:x="25515" fg:w="99"/><text x="35.6644%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb_multi_get (8,256 samples, 11.46%)</title><rect x="24.1204%" y="293" width="11.4592%" height="15" fill="rgb(212,144,35)" fg:x="17378" fg:w="8256"/><text x="24.3704%" y="303.50">httpmq-rs`rocksdb..</text></g><g><title>httpmq-rs`rocksdb_readoptions_create (15 samples, 0.02%)</title><rect x="35.5796%" y="293" width="0.0208%" height="15" fill="rgb(228,63,44)" fg:x="25634" fg:w="15"/><text x="35.8296%" y="303.50"></text></g><g><title>httpmq-rs`std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::vector (18 samples, 0.02%)</title><rect x="35.6031%" y="293" width="0.0250%" height="15" fill="rgb(228,109,6)" fg:x="25651" fg:w="18"/><text x="35.8531%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_calloc (8 samples, 0.01%)</title><rect x="35.6670%" y="277" width="0.0111%" height="15" fill="rgb(238,117,24)" fg:x="25697" fg:w="8"/><text x="35.9170%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (11 samples, 0.02%)</title><rect x="35.6823%" y="261" width="0.0153%" height="15" fill="rgb(242,26,26)" fg:x="25708" fg:w="11"/><text x="35.9323%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (23 samples, 0.03%)</title><rect x="35.8127%" y="245" width="0.0319%" height="15" fill="rgb(221,92,48)" fg:x="25802" fg:w="23"/><text x="36.0627%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (21 samples, 0.03%)</title><rect x="35.8460%" y="245" width="0.0291%" height="15" fill="rgb(209,209,32)" fg:x="25826" fg:w="21"/><text x="36.0960%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (149 samples, 0.21%)</title><rect x="35.6975%" y="261" width="0.2068%" height="15" fill="rgb(221,70,22)" fg:x="25719" fg:w="149"/><text x="35.9475%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (14 samples, 0.02%)</title><rect x="35.8849%" y="245" width="0.0194%" height="15" fill="rgb(248,145,5)" fg:x="25854" fg:w="14"/><text x="36.1349%" y="255.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memset (14 samples, 0.02%)</title><rect x="35.9043%" y="261" width="0.0194%" height="15" fill="rgb(226,116,26)" fg:x="25868" fg:w="14"/><text x="36.1543%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (192 samples, 0.27%)</title><rect x="35.6781%" y="277" width="0.2665%" height="15" fill="rgb(244,5,17)" fg:x="25705" fg:w="192"/><text x="35.9281%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (14 samples, 0.02%)</title><rect x="35.9252%" y="261" width="0.0194%" height="15" fill="rgb(252,159,33)" fg:x="25883" fg:w="14"/><text x="36.1752%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (213 samples, 0.30%)</title><rect x="35.6503%" y="293" width="0.2956%" height="15" fill="rgb(206,71,0)" fg:x="25685" fg:w="213"/><text x="35.9003%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.01%)</title><rect x="36.0154%" y="245" width="0.0111%" height="15" fill="rgb(233,118,54)" fg:x="25948" fg:w="8"/><text x="36.2654%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (48 samples, 0.07%)</title><rect x="35.9640%" y="277" width="0.0666%" height="15" fill="rgb(234,83,48)" fg:x="25911" fg:w="48"/><text x="36.2140%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (45 samples, 0.06%)</title><rect x="35.9682%" y="261" width="0.0625%" height="15" fill="rgb(228,3,54)" fg:x="25914" fg:w="45"/><text x="36.2182%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (62 samples, 0.09%)</title><rect x="35.9460%" y="293" width="0.0861%" height="15" fill="rgb(226,155,13)" fg:x="25898" fg:w="62"/><text x="36.1960%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (12 samples, 0.02%)</title><rect x="36.0320%" y="293" width="0.0167%" height="15" fill="rgb(241,28,37)" fg:x="25960" fg:w="12"/><text x="36.2820%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (50 samples, 0.07%)</title><rect x="36.1139%" y="277" width="0.0694%" height="15" fill="rgb(233,93,10)" fg:x="26019" fg:w="50"/><text x="36.3639%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (47 samples, 0.07%)</title><rect x="36.1181%" y="261" width="0.0652%" height="15" fill="rgb(225,113,19)" fg:x="26022" fg:w="47"/><text x="36.3681%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (94 samples, 0.13%)</title><rect x="36.0556%" y="293" width="0.1305%" height="15" fill="rgb(241,2,18)" fg:x="25977" fg:w="94"/><text x="36.3056%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (11 samples, 0.02%)</title><rect x="36.3235%" y="277" width="0.0153%" height="15" fill="rgb(228,207,21)" fg:x="26170" fg:w="11"/><text x="36.5735%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (82 samples, 0.11%)</title><rect x="36.4568%" y="261" width="0.1138%" height="15" fill="rgb(213,211,35)" fg:x="26266" fg:w="82"/><text x="36.7068%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (175 samples, 0.24%)</title><rect x="36.3402%" y="277" width="0.2429%" height="15" fill="rgb(209,83,10)" fg:x="26182" fg:w="175"/><text x="36.5902%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (9 samples, 0.01%)</title><rect x="36.5706%" y="261" width="0.0125%" height="15" fill="rgb(209,164,1)" fg:x="26348" fg:w="9"/><text x="36.8206%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (289 samples, 0.40%)</title><rect x="36.1861%" y="293" width="0.4011%" height="15" fill="rgb(213,184,43)" fg:x="26071" fg:w="289"/><text x="36.4361%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (16 samples, 0.02%)</title><rect x="36.5872%" y="293" width="0.0222%" height="15" fill="rgb(231,61,34)" fg:x="26360" fg:w="16"/><text x="36.8372%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_calloc (11 samples, 0.02%)</title><rect x="36.6094%" y="293" width="0.0153%" height="15" fill="rgb(235,75,3)" fg:x="26376" fg:w="11"/><text x="36.8594%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="36.6316%" y="293" width="0.0111%" height="15" fill="rgb(220,106,47)" fg:x="26392" fg:w="8"/><text x="36.8816%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::multi_get (10,367 samples, 14.39%)</title><rect x="22.2646%" y="309" width="14.3892%" height="15" fill="rgb(210,196,33)" fg:x="16041" fg:w="10367"/><text x="22.5146%" y="319.50">httpmq-rs`rocksdb::db:..</text></g><g><title>httpmq-rs`rocksdb::db::convert_values (20 samples, 0.03%)</title><rect x="36.6539%" y="309" width="0.0278%" height="15" fill="rgb(229,154,42)" fg:x="26408" fg:w="20"/><text x="36.9039%" y="319.50"></text></g><g><title>httpmq-rs`rocksdb_multi_get (9 samples, 0.01%)</title><rect x="36.6816%" y="309" width="0.0125%" height="15" fill="rgb(228,114,26)" fg:x="26428" fg:w="9"/><text x="36.9316%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (8 samples, 0.01%)</title><rect x="36.7080%" y="309" width="0.0111%" height="15" fill="rgb(208,144,1)" fg:x="26447" fg:w="8"/><text x="36.9580%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (87 samples, 0.12%)</title><rect x="36.7427%" y="277" width="0.1208%" height="15" fill="rgb(239,112,37)" fg:x="26472" fg:w="87"/><text x="36.9927%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (37 samples, 0.05%)</title><rect x="36.8121%" y="261" width="0.0514%" height="15" fill="rgb(210,96,50)" fg:x="26522" fg:w="37"/><text x="37.0621%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.01%)</title><rect x="36.8523%" y="245" width="0.0111%" height="15" fill="rgb(222,178,2)" fg:x="26551" fg:w="8"/><text x="37.1023%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (105 samples, 0.15%)</title><rect x="36.7191%" y="309" width="0.1457%" height="15" fill="rgb(226,74,18)" fg:x="26455" fg:w="105"/><text x="36.9691%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (91 samples, 0.13%)</title><rect x="36.7385%" y="293" width="0.1263%" height="15" fill="rgb(225,67,54)" fg:x="26469" fg:w="91"/><text x="36.9885%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`calloc (18 samples, 0.02%)</title><rect x="36.8648%" y="309" width="0.0250%" height="15" fill="rgb(251,92,32)" fg:x="26560" fg:w="18"/><text x="37.1148%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (8 samples, 0.01%)</title><rect x="36.8898%" y="309" width="0.0111%" height="15" fill="rgb(228,149,22)" fg:x="26578" fg:w="8"/><text x="37.1398%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (77 samples, 0.11%)</title><rect x="36.9023%" y="309" width="0.1069%" height="15" fill="rgb(243,54,13)" fg:x="26587" fg:w="77"/><text x="37.1523%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (41 samples, 0.06%)</title><rect x="36.9523%" y="293" width="0.0569%" height="15" fill="rgb(243,180,28)" fg:x="26623" fg:w="41"/><text x="37.2023%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (37 samples, 0.05%)</title><rect x="36.9578%" y="277" width="0.0514%" height="15" fill="rgb(208,167,24)" fg:x="26627" fg:w="37"/><text x="37.2078%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (56 samples, 0.08%)</title><rect x="37.1771%" y="277" width="0.0777%" height="15" fill="rgb(245,73,45)" fg:x="26785" fg:w="56"/><text x="37.4271%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (188 samples, 0.26%)</title><rect x="37.0092%" y="309" width="0.2609%" height="15" fill="rgb(237,203,48)" fg:x="26664" fg:w="188"/><text x="37.2592%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (118 samples, 0.16%)</title><rect x="37.1063%" y="293" width="0.1638%" height="15" fill="rgb(211,197,16)" fg:x="26734" fg:w="118"/><text x="37.3563%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (11 samples, 0.02%)</title><rect x="37.2548%" y="277" width="0.0153%" height="15" fill="rgb(243,99,51)" fg:x="26841" fg:w="11"/><text x="37.5048%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (9 samples, 0.01%)</title><rect x="37.2701%" y="309" width="0.0125%" height="15" fill="rgb(215,123,29)" fg:x="26852" fg:w="9"/><text x="37.5201%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (9 samples, 0.01%)</title><rect x="37.2826%" y="309" width="0.0125%" height="15" fill="rgb(239,186,37)" fg:x="26861" fg:w="9"/><text x="37.5326%" y="319.50"></text></g><g><title>httpmq-rs`httpmq_rs::service::httpmq_read_metadata (11,463 samples, 15.91%)</title><rect x="21.3860%" y="325" width="15.9104%" height="15" fill="rgb(252,136,39)" fg:x="15408" fg:w="11463"/><text x="21.6360%" y="335.50">httpmq-rs`httpmq_rs::ser..</text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::multi_get (10 samples, 0.01%)</title><rect x="37.2965%" y="325" width="0.0139%" height="15" fill="rgb(223,213,32)" fg:x="26871" fg:w="10"/><text x="37.5465%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.03%)</title><rect x="37.3687%" y="261" width="0.0347%" height="15" fill="rgb(233,115,5)" fg:x="26923" fg:w="25"/><text x="37.6187%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.03%)</title><rect x="37.3687%" y="245" width="0.0347%" height="15" fill="rgb(207,226,44)" fg:x="26923" fg:w="25"/><text x="37.6187%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.03%)</title><rect x="37.3701%" y="229" width="0.0333%" height="15" fill="rgb(208,126,0)" fg:x="26924" fg:w="24"/><text x="37.6201%" y="239.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (29 samples, 0.04%)</title><rect x="37.3659%" y="277" width="0.0403%" height="15" fill="rgb(244,66,21)" fg:x="26921" fg:w="29"/><text x="37.6159%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb_writeoptions_create (35 samples, 0.05%)</title><rect x="37.3617%" y="293" width="0.0486%" height="15" fill="rgb(222,97,12)" fg:x="26918" fg:w="35"/><text x="37.6117%" y="303.50"></text></g><g><title>httpmq-rs`&lt;rocksdb::db_options::WriteOptions as core::default::Default&gt;::default (45 samples, 0.06%)</title><rect x="37.3617%" y="309" width="0.0625%" height="15" fill="rgb(219,213,19)" fg:x="26918" fg:w="45"/><text x="37.6117%" y="319.50"></text></g><g><title>libc+ (10 samples, 0.01%)</title><rect x="37.4103%" y="293" width="0.0139%" height="15" fill="rgb(252,169,30)" fg:x="26953" fg:w="10"/><text x="37.6603%" y="303.50"></text></g><g><title>httpmq-rs`SaveError(char**, rocksdb::Status const&amp;) (9 samples, 0.01%)</title><rect x="37.4242%" y="309" width="0.0125%" height="15" fill="rgb(206,32,51)" fg:x="26963" fg:w="9"/><text x="37.6742%" y="319.50"></text></g><g><title>httpmq-rs`rocksdb::DB::Put (18 samples, 0.02%)</title><rect x="37.4367%" y="309" width="0.0250%" height="15" fill="rgb(250,172,42)" fg:x="26972" fg:w="18"/><text x="37.6867%" y="319.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyHandleImpl::GetID (19 samples, 0.03%)</title><rect x="37.6143%" y="245" width="0.0264%" height="15" fill="rgb(209,34,43)" fg:x="27100" fg:w="19"/><text x="37.8643%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyHandleImpl::ColumnFamilyHandleImpl (8 samples, 0.01%)</title><rect x="37.6782%" y="229" width="0.0111%" height="15" fill="rgb(223,11,35)" fg:x="27146" fg:w="8"/><text x="37.9282%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MergeBatch (9 samples, 0.01%)</title><rect x="38.4888%" y="213" width="0.0125%" height="15" fill="rgb(251,219,26)" fg:x="27730" fg:w="9"/><text x="38.7388%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::PreprocessWrite (43 samples, 0.06%)</title><rect x="38.5013%" y="213" width="0.0597%" height="15" fill="rgb(231,119,3)" fg:x="27739" fg:w="43"/><text x="38.7513%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.01%)</title><rect x="38.5498%" y="197" width="0.0111%" height="15" fill="rgb(216,97,11)" fg:x="27774" fg:w="8"/><text x="38.7998%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteContext::~WriteContext (19 samples, 0.03%)</title><rect x="38.5609%" y="213" width="0.0264%" height="15" fill="rgb(223,59,9)" fg:x="27782" fg:w="19"/><text x="38.8109%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Append (34 samples, 0.05%)</title><rect x="38.6525%" y="181" width="0.0472%" height="15" fill="rgb(233,93,31)" fg:x="27848" fg:w="34"/><text x="38.9025%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MergeBatch (50 samples, 0.07%)</title><rect x="38.6387%" y="197" width="0.0694%" height="15" fill="rgb(239,81,33)" fg:x="27838" fg:w="50"/><text x="38.8887%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::Flush (10 samples, 0.01%)</title><rect x="38.8094%" y="165" width="0.0139%" height="15" fill="rgb(213,120,34)" fg:x="27961" fg:w="10"/><text x="39.0594%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::use_direct_io (18 samples, 0.02%)</title><rect x="38.8233%" y="165" width="0.0250%" height="15" fill="rgb(243,49,53)" fg:x="27971" fg:w="18"/><text x="39.0733%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::GetPerfLevel (9 samples, 0.01%)</title><rect x="38.9565%" y="149" width="0.0125%" height="15" fill="rgb(247,216,33)" fg:x="28067" fg:w="9"/><text x="39.2065%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::Append (12 samples, 0.02%)</title><rect x="38.9690%" y="149" width="0.0167%" height="15" fill="rgb(226,26,14)" fg:x="28076" fg:w="12"/><text x="39.2190%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::GetFileSize (14 samples, 0.02%)</title><rect x="38.9857%" y="149" width="0.0194%" height="15" fill="rgb(215,49,53)" fg:x="28088" fg:w="14"/><text x="39.2357%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::Append (36 samples, 0.05%)</title><rect x="39.0648%" y="133" width="0.0500%" height="15" fill="rgb(245,162,40)" fg:x="28145" fg:w="36"/><text x="39.3148%" y="143.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (19 samples, 0.03%)</title><rect x="39.1217%" y="133" width="0.0264%" height="15" fill="rgb(229,68,17)" fg:x="28186" fg:w="19"/><text x="39.3717%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::WriteBuffered (4,050 samples, 5.62%)</title><rect x="39.0120%" y="149" width="5.6213%" height="15" fill="rgb(213,182,10)" fg:x="28107" fg:w="4050"/><text x="39.2620%" y="159.50">httpmq-..</text></g><g><title>libsystem_kernel.dylib`write (3,952 samples, 5.49%)</title><rect x="39.1481%" y="133" width="5.4853%" height="15" fill="rgb(245,125,30)" fg:x="28205" fg:w="3952"/><text x="39.3981%" y="143.50">libsyst..</text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Flush (4,179 samples, 5.80%)</title><rect x="38.8483%" y="165" width="5.8004%" height="15" fill="rgb(232,202,2)" fg:x="27989" fg:w="4179"/><text x="39.0983%" y="175.50">httpmq-..</text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="44.6334%" y="149" width="0.0153%" height="15" fill="rgb(237,140,51)" fg:x="32157" fg:w="11"/><text x="44.8834%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::crc32c::Extend (9 samples, 0.01%)</title><rect x="44.6570%" y="165" width="0.0125%" height="15" fill="rgb(236,157,25)" fg:x="32174" fg:w="9"/><text x="44.9070%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::FSWritableFile::PrepareWrite (9 samples, 0.01%)</title><rect x="44.6917%" y="149" width="0.0125%" height="15" fill="rgb(219,209,0)" fg:x="32199" fg:w="9"/><text x="44.9417%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::use_direct_io (10 samples, 0.01%)</title><rect x="44.7042%" y="149" width="0.0139%" height="15" fill="rgb(240,116,54)" fg:x="32208" fg:w="10"/><text x="44.9542%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::FSWritableFile::PrepareWrite (10 samples, 0.01%)</title><rect x="44.7500%" y="133" width="0.0139%" height="15" fill="rgb(216,10,36)" fg:x="32241" fg:w="10"/><text x="45.0000%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Append (68 samples, 0.09%)</title><rect x="44.7180%" y="149" width="0.0944%" height="15" fill="rgb(222,72,44)" fg:x="32218" fg:w="68"/><text x="44.9680%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (30 samples, 0.04%)</title><rect x="44.7708%" y="133" width="0.0416%" height="15" fill="rgb(232,159,9)" fg:x="32256" fg:w="30"/><text x="45.0208%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::crc32c::Extend (79 samples, 0.11%)</title><rect x="44.8124%" y="149" width="0.1097%" height="15" fill="rgb(210,39,32)" fg:x="32286" fg:w="79"/><text x="45.0624%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::log::Writer::AddRecord (4,444 samples, 6.17%)</title><rect x="38.7608%" y="181" width="6.1682%" height="15" fill="rgb(216,194,45)" fg:x="27926" fg:w="4444"/><text x="39.0108%" y="191.50">httpmq-r..</text></g><g><title>httpmq-rs`rocksdb::log::Writer::EmitPhysicalRecord (187 samples, 0.26%)</title><rect x="44.6695%" y="165" width="0.2596%" height="15" fill="rgb(218,18,35)" fg:x="32183" fg:w="187"/><text x="44.9195%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteToWAL (4,487 samples, 6.23%)</title><rect x="38.7081%" y="197" width="6.2279%" height="15" fill="rgb(207,83,51)" fg:x="27888" fg:w="4487"/><text x="38.9581%" y="207.50">httpmq-r..</text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Clear (21 samples, 0.03%)</title><rect x="44.9359%" y="197" width="0.0291%" height="15" fill="rgb(225,63,43)" fg:x="32375" fg:w="21"/><text x="45.1859%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::resize (17 samples, 0.02%)</title><rect x="44.9415%" y="181" width="0.0236%" height="15" fill="rgb(207,57,36)" fg:x="32379" fg:w="17"/><text x="45.1915%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::log::Writer::AddRecord (12 samples, 0.02%)</title><rect x="44.9679%" y="197" width="0.0167%" height="15" fill="rgb(216,99,33)" fg:x="32398" fg:w="12"/><text x="45.2179%" y="207.50"></text></g><g><title>libc+ (9 samples, 0.01%)</title><rect x="44.9845%" y="197" width="0.0125%" height="15" fill="rgb(225,42,16)" fg:x="32410" fg:w="9"/><text x="45.2345%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteToWAL (4,619 samples, 6.41%)</title><rect x="38.5873%" y="213" width="6.4111%" height="15" fill="rgb(220,201,45)" fg:x="27801" fg:w="4619"/><text x="38.8373%" y="223.50">httpmq-r..</text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Lock (17 samples, 0.02%)</title><rect x="45.0123%" y="197" width="0.0236%" height="15" fill="rgb(225,33,4)" fg:x="32430" fg:w="17"/><text x="45.2623%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (17 samples, 0.02%)</title><rect x="45.0123%" y="181" width="0.0236%" height="15" fill="rgb(224,33,50)" fg:x="32430" fg:w="17"/><text x="45.2623%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (17 samples, 0.02%)</title><rect x="45.0400%" y="197" width="0.0236%" height="15" fill="rgb(246,198,51)" fg:x="32450" fg:w="17"/><text x="45.2900%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::InstrumentedMutex::Lock (46 samples, 0.06%)</title><rect x="45.0081%" y="213" width="0.0638%" height="15" fill="rgb(205,22,4)" fg:x="32427" fg:w="46"/><text x="45.2581%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::~MemTableInserter (10 samples, 0.01%)</title><rect x="45.0734%" y="213" width="0.0139%" height="15" fill="rgb(206,3,8)" fg:x="32474" fg:w="10"/><text x="45.3234%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::SuperVersionContext::Clean (12 samples, 0.02%)</title><rect x="45.0872%" y="213" width="0.0167%" height="15" fill="rgb(251,23,15)" fg:x="32484" fg:w="12"/><text x="45.3372%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::TrimHistoryScheduler::Empty (9 samples, 0.01%)</title><rect x="45.1039%" y="213" width="0.0125%" height="15" fill="rgb(252,88,28)" fg:x="32496" fg:w="9"/><text x="45.3539%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Count (18 samples, 0.02%)</title><rect x="45.1192%" y="213" width="0.0250%" height="15" fill="rgb(212,127,14)" fg:x="32507" fg:w="18"/><text x="45.3692%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::ApproximateMemoryUsage (19 samples, 0.03%)</title><rect x="45.5703%" y="197" width="0.0264%" height="15" fill="rgb(247,145,37)" fg:x="32832" fg:w="19"/><text x="45.8203%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::UpdateFlushState (23 samples, 0.03%)</title><rect x="45.5966%" y="197" width="0.0319%" height="15" fill="rgb(209,117,53)" fg:x="32851" fg:w="23"/><text x="45.8466%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCF (28 samples, 0.04%)</title><rect x="45.6285%" y="197" width="0.0389%" height="15" fill="rgb(212,90,42)" fg:x="32874" fg:w="28"/><text x="45.8785%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.02%)</title><rect x="45.6966%" y="165" width="0.0250%" height="15" fill="rgb(218,164,37)" fg:x="32923" fg:w="18"/><text x="45.9466%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.02%)</title><rect x="45.6979%" y="149" width="0.0236%" height="15" fill="rgb(246,65,34)" fg:x="32924" fg:w="17"/><text x="45.9479%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.04%)</title><rect x="45.6813%" y="181" width="0.0416%" height="15" fill="rgb(231,100,33)" fg:x="32912" fg:w="30"/><text x="45.9313%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.02%)</title><rect x="45.7743%" y="149" width="0.0208%" height="15" fill="rgb(228,126,14)" fg:x="32979" fg:w="15"/><text x="46.0243%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (55 samples, 0.08%)</title><rect x="45.7229%" y="181" width="0.0763%" height="15" fill="rgb(215,173,21)" fg:x="32942" fg:w="55"/><text x="45.9729%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (40 samples, 0.06%)</title><rect x="45.7438%" y="165" width="0.0555%" height="15" fill="rgb(210,6,40)" fg:x="32957" fg:w="40"/><text x="45.9938%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="45.7993%" y="181" width="0.0111%" height="15" fill="rgb(212,48,18)" fg:x="32997" fg:w="8"/><text x="46.0493%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::~MemTableInserter (106 samples, 0.15%)</title><rect x="45.6674%" y="197" width="0.1471%" height="15" fill="rgb(230,214,11)" fg:x="32902" fg:w="106"/><text x="45.9174%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Handler::Continue (31 samples, 0.04%)</title><rect x="45.8215%" y="197" width="0.0430%" height="15" fill="rgb(254,105,39)" fg:x="33013" fg:w="31"/><text x="46.0715%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOTS (12 samples, 0.02%)</title><rect x="45.9922%" y="165" width="0.0167%" height="15" fill="rgb(245,158,5)" fg:x="33136" fg:w="12"/><text x="46.2422%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Allocate (33 samples, 0.05%)</title><rect x="46.0630%" y="149" width="0.0458%" height="15" fill="rgb(249,208,11)" fg:x="33187" fg:w="33"/><text x="46.3130%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::ApproximateMemoryUsage (9 samples, 0.01%)</title><rect x="46.1088%" y="149" width="0.0125%" height="15" fill="rgb(210,39,28)" fg:x="33220" fg:w="9"/><text x="46.3588%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::InsertKeyConcurrently (9 samples, 0.01%)</title><rect x="46.1241%" y="149" width="0.0125%" height="15" fill="rgb(211,56,53)" fg:x="33231" fg:w="9"/><text x="46.3741%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyMemTablesImpl::Seek (14 samples, 0.02%)</title><rect x="46.1463%" y="149" width="0.0194%" height="15" fill="rgb(226,201,30)" fg:x="33247" fg:w="14"/><text x="46.3963%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::HistogramImpl::max (22 samples, 0.03%)</title><rect x="46.1671%" y="149" width="0.0305%" height="15" fill="rgb(239,101,34)" fg:x="33262" fg:w="22"/><text x="46.4171%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (26 samples, 0.04%)</title><rect x="46.4752%" y="101" width="0.0361%" height="15" fill="rgb(226,209,5)" fg:x="33484" fg:w="26"/><text x="46.7252%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (21 samples, 0.03%)</title><rect x="46.4822%" y="85" width="0.0291%" height="15" fill="rgb(250,105,47)" fg:x="33489" fg:w="21"/><text x="46.7322%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (76 samples, 0.11%)</title><rect x="46.4225%" y="117" width="0.1055%" height="15" fill="rgb(230,72,3)" fg:x="33446" fg:w="76"/><text x="46.6725%" y="127.50"></text></g><g><title>httpmq-rs`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (151 samples, 0.21%)</title><rect x="46.3295%" y="133" width="0.2096%" height="15" fill="rgb(232,218,39)" fg:x="33379" fg:w="151"/><text x="46.5795%" y="143.50"></text></g><g><title>httpmq-rs`char* rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::&apos;lambda&apos;()&gt;(unsigned long, bool, rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::&apos;lambda&apos; (68 samples, 0.09%)</title><rect x="46.5876%" y="101" width="0.0944%" height="15" fill="rgb(248,166,6)" fg:x="33565" fg:w="68"/><text x="46.8376%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::ConcurrentArena::AllocateAligned (76 samples, 0.11%)</title><rect x="46.5821%" y="117" width="0.1055%" height="15" fill="rgb(247,89,20)" fg:x="33561" fg:w="76"/><text x="46.8321%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Allocate (114 samples, 0.16%)</title><rect x="46.5460%" y="133" width="0.1582%" height="15" fill="rgb(248,130,54)" fg:x="33535" fg:w="114"/><text x="46.7960%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (48 samples, 0.07%)</title><rect x="46.9638%" y="85" width="0.0666%" height="15" fill="rgb(234,196,4)" fg:x="33836" fg:w="48"/><text x="47.2138%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (34 samples, 0.05%)</title><rect x="46.9832%" y="69" width="0.0472%" height="15" fill="rgb(250,143,31)" fg:x="33850" fg:w="34"/><text x="47.2332%" y="79.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.02%)</title><rect x="47.0360%" y="85" width="0.0208%" height="15" fill="rgb(211,110,34)" fg:x="33888" fg:w="15"/><text x="47.2860%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (102 samples, 0.14%)</title><rect x="46.9263%" y="101" width="0.1416%" height="15" fill="rgb(215,124,48)" fg:x="33809" fg:w="102"/><text x="47.1763%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.01%)</title><rect x="47.0568%" y="85" width="0.0111%" height="15" fill="rgb(216,46,13)" fg:x="33903" fg:w="8"/><text x="47.3068%" y="95.50"></text></g><g><title>httpmq-rs`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList (272 samples, 0.38%)</title><rect x="46.7070%" y="117" width="0.3775%" height="15" fill="rgb(205,184,25)" fg:x="33651" fg:w="272"/><text x="46.9570%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.01%)</title><rect x="47.0721%" y="101" width="0.0125%" height="15" fill="rgb(228,1,10)" fg:x="33914" fg:w="9"/><text x="47.3221%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (8 samples, 0.01%)</title><rect x="47.0845%" y="117" width="0.0111%" height="15" fill="rgb(213,116,27)" fg:x="33923" fg:w="8"/><text x="47.3345%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::InsertKeyConcurrently (297 samples, 0.41%)</title><rect x="46.7042%" y="133" width="0.4122%" height="15" fill="rgb(241,95,50)" fg:x="33649" fg:w="297"/><text x="46.9542%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableRep::KeyComparator::decode_key (15 samples, 0.02%)</title><rect x="47.0956%" y="117" width="0.0208%" height="15" fill="rgb(238,48,32)" fg:x="33931" fg:w="15"/><text x="47.3456%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::ConcurrentArena::AllocateAligned (27 samples, 0.04%)</title><rect x="47.1165%" y="133" width="0.0375%" height="15" fill="rgb(235,113,49)" fg:x="33946" fg:w="27"/><text x="47.3665%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (8 samples, 0.01%)</title><rect x="47.1623%" y="133" width="0.0111%" height="15" fill="rgb(205,127,43)" fg:x="33979" fg:w="8"/><text x="47.4123%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableRep::KeyComparator::decode_key (8 samples, 0.01%)</title><rect x="47.1734%" y="133" width="0.0111%" height="15" fill="rgb(250,162,2)" fg:x="33987" fg:w="8"/><text x="47.4234%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::Random::GetTLSInstance (18 samples, 0.02%)</title><rect x="47.1845%" y="133" width="0.0250%" height="15" fill="rgb(220,13,41)" fg:x="33995" fg:w="18"/><text x="47.4345%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOTS (745 samples, 1.03%)</title><rect x="46.1976%" y="149" width="1.0340%" height="15" fill="rgb(249,221,25)" fg:x="33284" fg:w="745"/><text x="46.4476%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.02%)</title><rect x="47.2095%" y="133" width="0.0222%" height="15" fill="rgb(215,208,19)" fg:x="34013" fg:w="16"/><text x="47.4595%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::CheckMemtableFull (20 samples, 0.03%)</title><rect x="47.2317%" y="149" width="0.0278%" height="15" fill="rgb(236,175,2)" fg:x="34029" fg:w="20"/><text x="47.4817%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::SeekToColumnFamily (19 samples, 0.03%)</title><rect x="47.2594%" y="149" width="0.0264%" height="15" fill="rgb(241,52,2)" fg:x="34049" fg:w="19"/><text x="47.5094%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyMemTablesImpl::Seek (9 samples, 0.01%)</title><rect x="47.2733%" y="133" width="0.0125%" height="15" fill="rgb(248,140,14)" fg:x="34059" fg:w="9"/><text x="47.5233%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (54 samples, 0.07%)</title><rect x="47.3219%" y="101" width="0.0750%" height="15" fill="rgb(253,22,42)" fg:x="34094" fg:w="54"/><text x="47.5719%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (18 samples, 0.02%)</title><rect x="47.3719%" y="85" width="0.0250%" height="15" fill="rgb(234,61,47)" fg:x="34130" fg:w="18"/><text x="47.6219%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (58 samples, 0.08%)</title><rect x="47.3177%" y="117" width="0.0805%" height="15" fill="rgb(208,226,15)" fg:x="34091" fg:w="58"/><text x="47.5677%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (79 samples, 0.11%)</title><rect x="47.2941%" y="133" width="0.1097%" height="15" fill="rgb(217,221,4)" fg:x="34074" fg:w="79"/><text x="47.5441%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (12 samples, 0.02%)</title><rect x="47.4038%" y="133" width="0.0167%" height="15" fill="rgb(212,174,34)" fg:x="34153" fg:w="12"/><text x="47.6538%" y="143.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (99 samples, 0.14%)</title><rect x="47.2941%" y="149" width="0.1374%" height="15" fill="rgb(253,83,4)" fg:x="34074" fg:w="99"/><text x="47.5441%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (11 samples, 0.02%)</title><rect x="47.4385%" y="149" width="0.0153%" height="15" fill="rgb(250,195,49)" fg:x="34178" fg:w="11"/><text x="47.6885%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOTS (1,052 samples, 1.46%)</title><rect x="46.0158%" y="165" width="1.4602%" height="15" fill="rgb(241,192,25)" fg:x="33153" fg:w="1052"/><text x="46.2658%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.02%)</title><rect x="47.4537%" y="149" width="0.0222%" height="15" fill="rgb(208,124,10)" fg:x="34189" fg:w="16"/><text x="47.7037%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::SeekToColumnFamily (16 samples, 0.02%)</title><rect x="47.4760%" y="165" width="0.0222%" height="15" fill="rgb(222,33,0)" fg:x="34205" fg:w="16"/><text x="47.7260%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCF (1,112 samples, 1.54%)</title><rect x="45.9686%" y="181" width="1.5434%" height="15" fill="rgb(234,209,28)" fg:x="33119" fg:w="1112"/><text x="46.2186%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOTS (15 samples, 0.02%)</title><rect x="47.5120%" y="181" width="0.0208%" height="15" fill="rgb(224,11,23)" fg:x="34231" fg:w="15"/><text x="47.7620%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Iterate (1,265 samples, 1.76%)</title><rect x="45.8645%" y="197" width="1.7558%" height="15" fill="rgb(232,99,1)" fg:x="33044" fg:w="1265"/><text x="46.1145%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::ReadRecordFromWriteBatch (63 samples, 0.09%)</title><rect x="47.5329%" y="181" width="0.0874%" height="15" fill="rgb(237,95,45)" fg:x="34246" fg:w="63"/><text x="47.7829%" y="191.50"></text></g><g><title>httpmq-rs`std::__1::__tree&lt;std::__1::pair&lt;int, unsigned long long&gt;, std::__1::less&lt;std::__1::pair&lt;int, unsigned long long&gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;int, unsigned long long&gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::pair (13 samples, 0.02%)</title><rect x="47.6203%" y="197" width="0.0180%" height="15" fill="rgb(208,109,11)" fg:x="34309" fg:w="13"/><text x="47.8703%" y="207.50"></text></g><g><title>libc+ (10 samples, 0.01%)</title><rect x="47.6383%" y="197" width="0.0139%" height="15" fill="rgb(216,190,48)" fg:x="34322" fg:w="10"/><text x="47.8883%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::InsertInto (1,827 samples, 2.54%)</title><rect x="45.1441%" y="213" width="2.5358%" height="15" fill="rgb(251,171,36)" fg:x="32525" fg:w="1827"/><text x="45.3941%" y="223.50">ht..</text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Iterate (8 samples, 0.01%)</title><rect x="47.6800%" y="213" width="0.0111%" height="15" fill="rgb(230,62,22)" fg:x="34352" fg:w="8"/><text x="47.9300%" y="223.50"></text></g><g><title>libc+ (18 samples, 0.02%)</title><rect x="53.6469%" y="197" width="0.0250%" height="15" fill="rgb(225,114,35)" fg:x="38651" fg:w="18"/><text x="53.8969%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_continuous_time (30 samples, 0.04%)</title><rect x="53.7163%" y="149" width="0.0416%" height="15" fill="rgb(215,118,42)" fg:x="38701" fg:w="30"/><text x="53.9663%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`_mach_continuous_time (27 samples, 0.04%)</title><rect x="53.7205%" y="133" width="0.0375%" height="15" fill="rgb(243,119,21)" fg:x="38704" fg:w="27"/><text x="53.9705%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (17 samples, 0.02%)</title><rect x="53.7344%" y="117" width="0.0236%" height="15" fill="rgb(252,177,53)" fg:x="38714" fg:w="17"/><text x="53.9844%" y="127.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (58 samples, 0.08%)</title><rect x="53.6844%" y="165" width="0.0805%" height="15" fill="rgb(237,209,29)" fg:x="38678" fg:w="58"/><text x="53.9344%" y="175.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (80 samples, 0.11%)</title><rect x="53.6719%" y="181" width="0.1110%" height="15" fill="rgb(212,65,23)" fg:x="38669" fg:w="80"/><text x="53.9219%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (10 samples, 0.01%)</title><rect x="53.7691%" y="165" width="0.0139%" height="15" fill="rgb(230,222,46)" fg:x="38739" fg:w="10"/><text x="54.0191%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::chrono::steady_clock::now (87 samples, 0.12%)</title><rect x="53.6719%" y="197" width="0.1208%" height="15" fill="rgb(215,135,32)" fg:x="38669" fg:w="87"/><text x="53.9219%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1,258 samples, 1.75%)</title><rect x="53.8079%" y="181" width="1.7461%" height="15" fill="rgb(246,101,22)" fg:x="38767" fg:w="1258"/><text x="54.0579%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_check_init_slow (10 samples, 0.01%)</title><rect x="55.6123%" y="165" width="0.0139%" height="15" fill="rgb(206,107,13)" fg:x="40067" fg:w="10"/><text x="55.8623%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (17 samples, 0.02%)</title><rect x="55.6262%" y="165" width="0.0236%" height="15" fill="rgb(250,100,44)" fg:x="40077" fg:w="17"/><text x="55.8762%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (29 samples, 0.04%)</title><rect x="55.6498%" y="149" width="0.0403%" height="15" fill="rgb(231,147,38)" fg:x="40094" fg:w="29"/><text x="55.8998%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (33 samples, 0.05%)</title><rect x="55.6498%" y="165" width="0.0458%" height="15" fill="rgb(229,8,40)" fg:x="40094" fg:w="33"/><text x="55.8998%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (24 samples, 0.03%)</title><rect x="55.6956%" y="165" width="0.0333%" height="15" fill="rgb(221,135,30)" fg:x="40127" fg:w="24"/><text x="55.9456%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (138 samples, 0.19%)</title><rect x="55.5679%" y="181" width="0.1915%" height="15" fill="rgb(249,193,18)" fg:x="40035" fg:w="138"/><text x="55.8179%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (22 samples, 0.03%)</title><rect x="55.7289%" y="165" width="0.0305%" height="15" fill="rgb(209,133,39)" fg:x="40151" fg:w="22"/><text x="55.9789%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock (1,428 samples, 1.98%)</title><rect x="53.7927%" y="197" width="1.9820%" height="15" fill="rgb(232,100,14)" fg:x="38756" fg:w="1428"/><text x="54.0427%" y="207.50">l..</text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (8 samples, 0.01%)</title><rect x="55.7636%" y="181" width="0.0111%" height="15" fill="rgb(224,185,1)" fg:x="40176" fg:w="8"/><text x="56.0136%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (23 samples, 0.03%)</title><rect x="55.7844%" y="181" width="0.0319%" height="15" fill="rgb(223,139,8)" fg:x="40191" fg:w="23"/><text x="56.0344%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_check_init_slow (21 samples, 0.03%)</title><rect x="55.7872%" y="165" width="0.0291%" height="15" fill="rgb(232,213,38)" fg:x="40193" fg:w="21"/><text x="56.0372%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (34 samples, 0.05%)</title><rect x="55.7747%" y="197" width="0.0472%" height="15" fill="rgb(207,94,22)" fg:x="40184" fg:w="34"/><text x="56.0247%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.02%)</title><rect x="55.8261%" y="197" width="0.0180%" height="15" fill="rgb(219,183,54)" fg:x="40221" fg:w="13"/><text x="56.0761%" y="207.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (12 samples, 0.02%)</title><rect x="55.8441%" y="197" width="0.0167%" height="15" fill="rgb(216,185,54)" fg:x="40234" fg:w="12"/><text x="56.0941%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (689 samples, 0.96%)</title><rect x="55.8608%" y="197" width="0.9563%" height="15" fill="rgb(254,217,39)" fg:x="40246" fg:w="689"/><text x="56.1108%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (8 samples, 0.01%)</title><rect x="56.8185%" y="197" width="0.0111%" height="15" fill="rgb(240,178,23)" fg:x="40936" fg:w="8"/><text x="57.0685%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`cthread_yield (10 samples, 0.01%)</title><rect x="56.8296%" y="197" width="0.0139%" height="15" fill="rgb(218,11,47)" fg:x="40944" fg:w="10"/><text x="57.0796%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (9 samples, 0.01%)</title><rect x="56.8490%" y="197" width="0.0125%" height="15" fill="rgb(218,51,51)" fg:x="40958" fg:w="9"/><text x="57.0990%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::AwaitState (6,634 samples, 9.21%)</title><rect x="47.6966%" y="213" width="9.2079%" height="15" fill="rgb(238,126,27)" fg:x="34364" fg:w="6634"/><text x="47.9466%" y="223.50">httpmq-rs`roc..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (31 samples, 0.04%)</title><rect x="56.8615%" y="197" width="0.0430%" height="15" fill="rgb(249,202,22)" fg:x="40967" fg:w="31"/><text x="57.1115%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_continuous_time (10 samples, 0.01%)</title><rect x="58.7339%" y="133" width="0.0139%" height="15" fill="rgb(254,195,49)" fg:x="42316" fg:w="10"/><text x="58.9839%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`_mach_continuous_time (9 samples, 0.01%)</title><rect x="58.7353%" y="117" width="0.0125%" height="15" fill="rgb(208,123,14)" fg:x="42317" fg:w="9"/><text x="58.9853%" y="127.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (19 samples, 0.03%)</title><rect x="58.7242%" y="149" width="0.0264%" height="15" fill="rgb(224,200,8)" fg:x="42309" fg:w="19"/><text x="58.9742%" y="159.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (29 samples, 0.04%)</title><rect x="58.7158%" y="165" width="0.0403%" height="15" fill="rgb(217,61,36)" fg:x="42303" fg:w="29"/><text x="58.9658%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::chrono::steady_clock::now (35 samples, 0.05%)</title><rect x="58.7145%" y="181" width="0.0486%" height="15" fill="rgb(206,35,45)" fg:x="42302" fg:w="35"/><text x="58.9645%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (195 samples, 0.27%)</title><rect x="58.7672%" y="181" width="0.2707%" height="15" fill="rgb(217,65,33)" fg:x="42340" fg:w="195"/><text x="59.0172%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::AwaitState (1,519 samples, 2.11%)</title><rect x="56.9323%" y="197" width="2.1083%" height="15" fill="rgb(222,158,48)" fg:x="41018" fg:w="1519"/><text x="57.1823%" y="207.50">h..</text></g><g><title>httpmq-rs`rocksdb::WriteThread::CompleteParallelMemTableWriter (1,550 samples, 2.15%)</title><rect x="56.9045%" y="213" width="2.1514%" height="15" fill="rgb(254,2,54)" fg:x="40998" fg:w="1550"/><text x="57.1545%" y="223.50">h..</text></g><g><title>httpmq-rs`rocksdb::WriteThread::EnterAsBatchGroupLeader (20 samples, 0.03%)</title><rect x="59.0559%" y="213" width="0.0278%" height="15" fill="rgb(250,143,38)" fg:x="42548" fg:w="20"/><text x="59.3059%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (175 samples, 0.24%)</title><rect x="59.1544%" y="165" width="0.2429%" height="15" fill="rgb(248,25,0)" fg:x="42619" fg:w="175"/><text x="59.4044%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::notify_one (185 samples, 0.26%)</title><rect x="59.1531%" y="181" width="0.2568%" height="15" fill="rgb(206,152,27)" fg:x="42618" fg:w="185"/><text x="59.4031%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (9 samples, 0.01%)</title><rect x="59.3973%" y="165" width="0.0125%" height="15" fill="rgb(240,77,30)" fg:x="42794" fg:w="9"/><text x="59.6473%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::unlock (8 samples, 0.01%)</title><rect x="59.4182%" y="181" width="0.0111%" height="15" fill="rgb(231,5,3)" fg:x="42809" fg:w="8"/><text x="59.6682%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::ExitAsBatchGroupLeader (242 samples, 0.34%)</title><rect x="59.1003%" y="197" width="0.3359%" height="15" fill="rgb(207,226,32)" fg:x="42580" fg:w="242"/><text x="59.3503%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::ExitAsBatchGroupFollower (259 samples, 0.36%)</title><rect x="59.0837%" y="213" width="0.3595%" height="15" fill="rgb(222,207,47)" fg:x="42568" fg:w="259"/><text x="59.3337%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (103 samples, 0.14%)</title><rect x="59.5028%" y="181" width="0.1430%" height="15" fill="rgb(229,115,45)" fg:x="42870" fg:w="103"/><text x="59.7528%" y="191.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::notify_one (110 samples, 0.15%)</title><rect x="59.5014%" y="197" width="0.1527%" height="15" fill="rgb(224,191,6)" fg:x="42869" fg:w="110"/><text x="59.7514%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (11 samples, 0.02%)</title><rect x="59.6541%" y="181" width="0.0153%" height="15" fill="rgb(230,227,24)" fg:x="42979" fg:w="11"/><text x="59.9041%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (11 samples, 0.02%)</title><rect x="59.6541%" y="165" width="0.0153%" height="15" fill="rgb(228,80,19)" fg:x="42979" fg:w="11"/><text x="59.9041%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (15 samples, 0.02%)</title><rect x="59.6541%" y="197" width="0.0208%" height="15" fill="rgb(247,229,0)" fg:x="42979" fg:w="15"/><text x="59.9041%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::ExitAsBatchGroupLeader (178 samples, 0.25%)</title><rect x="59.4431%" y="213" width="0.2471%" height="15" fill="rgb(237,194,15)" fg:x="42827" fg:w="178"/><text x="59.6931%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::JoinBatchGroup (45 samples, 0.06%)</title><rect x="59.6902%" y="213" width="0.0625%" height="15" fill="rgb(219,203,20)" fg:x="43005" fg:w="45"/><text x="59.9402%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::__1::atomic (42 samples, 0.06%)</title><rect x="59.6944%" y="197" width="0.0583%" height="15" fill="rgb(234,128,8)" fg:x="43008" fg:w="42"/><text x="59.9444%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (334 samples, 0.46%)</title><rect x="59.7679%" y="181" width="0.4636%" height="15" fill="rgb(248,202,8)" fg:x="43061" fg:w="334"/><text x="60.0179%" y="191.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::notify_one (358 samples, 0.50%)</title><rect x="59.7652%" y="197" width="0.4969%" height="15" fill="rgb(206,104,37)" fg:x="43059" fg:w="358"/><text x="60.0152%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (14 samples, 0.02%)</title><rect x="60.2426%" y="181" width="0.0194%" height="15" fill="rgb(223,8,27)" fg:x="43403" fg:w="14"/><text x="60.4926%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (12 samples, 0.02%)</title><rect x="60.2690%" y="181" width="0.0167%" height="15" fill="rgb(216,217,28)" fg:x="43422" fg:w="12"/><text x="60.5190%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (12 samples, 0.02%)</title><rect x="60.2690%" y="165" width="0.0167%" height="15" fill="rgb(249,199,1)" fg:x="43422" fg:w="12"/><text x="60.5190%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::unlock (14 samples, 0.02%)</title><rect x="60.2690%" y="197" width="0.0194%" height="15" fill="rgb(240,85,17)" fg:x="43422" fg:w="14"/><text x="60.5190%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::LaunchParallelMemTableWriters (392 samples, 0.54%)</title><rect x="59.7527%" y="213" width="0.5441%" height="15" fill="rgb(206,108,45)" fg:x="43050" fg:w="392"/><text x="60.0027%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::__1::atomic (19 samples, 0.03%)</title><rect x="60.2968%" y="213" width="0.0264%" height="15" fill="rgb(245,210,41)" fg:x="43442" fg:w="19"/><text x="60.5468%" y="223.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (52 samples, 0.07%)</title><rect x="60.3523%" y="213" width="0.0722%" height="15" fill="rgb(206,13,37)" fg:x="43482" fg:w="52"/><text x="60.6023%" y="223.50"></text></g><g><title>libc+ (43 samples, 0.06%)</title><rect x="60.4244%" y="213" width="0.0597%" height="15" fill="rgb(250,61,18)" fg:x="43534" fg:w="43"/><text x="60.6744%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock (9 samples, 0.01%)</title><rect x="60.4869%" y="213" width="0.0125%" height="15" fill="rgb(235,172,48)" fg:x="43579" fg:w="9"/><text x="60.7369%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::~condition_variable (13 samples, 0.02%)</title><rect x="60.4994%" y="213" width="0.0180%" height="15" fill="rgb(249,201,17)" fg:x="43588" fg:w="13"/><text x="60.7494%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_destroy (12 samples, 0.02%)</title><rect x="60.5008%" y="197" width="0.0167%" height="15" fill="rgb(219,208,6)" fg:x="43589" fg:w="12"/><text x="60.7508%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::~mutex (13 samples, 0.02%)</title><rect x="60.5216%" y="213" width="0.0180%" height="15" fill="rgb(248,31,23)" fg:x="43604" fg:w="13"/><text x="60.7716%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (13 samples, 0.02%)</title><rect x="60.5216%" y="197" width="0.0180%" height="15" fill="rgb(245,15,42)" fg:x="43604" fg:w="13"/><text x="60.7716%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (69 samples, 0.10%)</title><rect x="60.5396%" y="213" width="0.0958%" height="15" fill="rgb(222,217,39)" fg:x="43617" fg:w="69"/><text x="60.7896%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteImpl (16,542 samples, 22.96%)</title><rect x="37.7004%" y="229" width="22.9600%" height="15" fill="rgb(210,219,27)" fg:x="27162" fg:w="16542"/><text x="37.9504%" y="239.50">httpmq-rs`rocksdb::DBImpl::WriteImpl</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (10 samples, 0.01%)</title><rect x="60.6465%" y="213" width="0.0139%" height="15" fill="rgb(252,166,36)" fg:x="43694" fg:w="10"/><text x="60.8965%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::InstrumentedMutex::Lock (11 samples, 0.02%)</title><rect x="60.6687%" y="229" width="0.0153%" height="15" fill="rgb(245,132,34)" fg:x="43710" fg:w="11"/><text x="60.9187%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::InsertInto (14 samples, 0.02%)</title><rect x="60.7090%" y="229" width="0.0194%" height="15" fill="rgb(236,54,3)" fg:x="43739" fg:w="14"/><text x="60.9590%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::CompleteParallelMemTableWriter (9 samples, 0.01%)</title><rect x="60.7312%" y="229" width="0.0125%" height="15" fill="rgb(241,173,43)" fg:x="43755" fg:w="9"/><text x="60.9812%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::JoinBatchGroup (14 samples, 0.02%)</title><rect x="60.7465%" y="229" width="0.0194%" height="15" fill="rgb(215,190,9)" fg:x="43766" fg:w="14"/><text x="60.9965%" y="239.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (25 samples, 0.03%)</title><rect x="60.7701%" y="229" width="0.0347%" height="15" fill="rgb(242,101,16)" fg:x="43783" fg:w="25"/><text x="61.0201%" y="239.50"></text></g><g><title>libc+ (13 samples, 0.02%)</title><rect x="60.8048%" y="229" width="0.0180%" height="15" fill="rgb(223,190,21)" fg:x="43808" fg:w="13"/><text x="61.0548%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::Write (16,723 samples, 23.21%)</title><rect x="37.6407%" y="245" width="23.2112%" height="15" fill="rgb(215,228,25)" fg:x="27119" fg:w="16723"/><text x="37.8907%" y="255.50">httpmq-rs`rocksdb::DBImpl::Write</text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.02%)</title><rect x="60.8311%" y="229" width="0.0208%" height="15" fill="rgb(225,36,22)" fg:x="43827" fg:w="15"/><text x="61.0811%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::GetColumnFamilyID (10 samples, 0.01%)</title><rect x="60.8575%" y="245" width="0.0139%" height="15" fill="rgb(251,106,46)" fg:x="43846" fg:w="10"/><text x="61.1075%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::EncodeVarint32 (11 samples, 0.02%)</title><rect x="60.8922%" y="229" width="0.0153%" height="15" fill="rgb(208,90,1)" fg:x="43871" fg:w="11"/><text x="61.1422%" y="239.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (28 samples, 0.04%)</title><rect x="60.9671%" y="213" width="0.0389%" height="15" fill="rgb(243,10,4)" fg:x="43925" fg:w="28"/><text x="61.2171%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="60.9880%" y="197" width="0.0180%" height="15" fill="rgb(212,137,27)" fg:x="43940" fg:w="13"/><text x="61.2380%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::push_back (11 samples, 0.02%)</title><rect x="61.0060%" y="213" width="0.0153%" height="15" fill="rgb(231,220,49)" fg:x="43953" fg:w="11"/><text x="61.2560%" y="223.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (10 samples, 0.01%)</title><rect x="61.0213%" y="213" width="0.0139%" height="15" fill="rgb(237,96,20)" fg:x="43964" fg:w="10"/><text x="61.2713%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Put (92 samples, 0.13%)</title><rect x="60.9227%" y="229" width="0.1277%" height="15" fill="rgb(239,229,30)" fg:x="43893" fg:w="92"/><text x="61.1727%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="61.0352%" y="213" width="0.0153%" height="15" fill="rgb(219,65,33)" fg:x="43974" fg:w="11"/><text x="61.2852%" y="223.50"></text></g><g><title>libc+ (41 samples, 0.06%)</title><rect x="61.0504%" y="229" width="0.0569%" height="15" fill="rgb(243,134,7)" fg:x="43985" fg:w="41"/><text x="61.3004%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Put (177 samples, 0.25%)</title><rect x="60.8714%" y="245" width="0.2457%" height="15" fill="rgb(216,177,54)" fg:x="43856" fg:w="177"/><text x="61.1214%" y="255.50"></text></g><g><title>libc+ (51 samples, 0.07%)</title><rect x="61.1295%" y="229" width="0.0708%" height="15" fill="rgb(211,160,20)" fg:x="44042" fg:w="51"/><text x="61.3795%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.06%)</title><rect x="61.2211%" y="197" width="0.0597%" height="15" fill="rgb(239,85,39)" fg:x="44108" fg:w="43"/><text x="61.4711%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (37 samples, 0.05%)</title><rect x="61.2295%" y="181" width="0.0514%" height="15" fill="rgb(232,125,22)" fg:x="44114" fg:w="37"/><text x="61.4795%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (34 samples, 0.05%)</title><rect x="61.2336%" y="165" width="0.0472%" height="15" fill="rgb(244,57,34)" fg:x="44117" fg:w="34"/><text x="61.4836%" y="175.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (44 samples, 0.06%)</title><rect x="61.2211%" y="213" width="0.0611%" height="15" fill="rgb(214,203,32)" fg:x="44108" fg:w="44"/><text x="61.4711%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::reserve (62 samples, 0.09%)</title><rect x="61.2017%" y="229" width="0.0861%" height="15" fill="rgb(207,58,43)" fg:x="44094" fg:w="62"/><text x="61.4517%" y="239.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (27 samples, 0.04%)</title><rect x="61.2961%" y="213" width="0.0375%" height="15" fill="rgb(215,193,15)" fg:x="44162" fg:w="27"/><text x="61.5461%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="61.3183%" y="197" width="0.0153%" height="15" fill="rgb(232,15,44)" fg:x="44178" fg:w="11"/><text x="61.5683%" y="207.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memset (8 samples, 0.01%)</title><rect x="61.3336%" y="213" width="0.0111%" height="15" fill="rgb(212,3,48)" fg:x="44189" fg:w="8"/><text x="61.5836%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::resize (47 samples, 0.07%)</title><rect x="61.2878%" y="229" width="0.0652%" height="15" fill="rgb(218,128,7)" fg:x="44156" fg:w="47"/><text x="61.5378%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::WriteBatch (186 samples, 0.26%)</title><rect x="61.1170%" y="245" width="0.2582%" height="15" fill="rgb(226,216,39)" fg:x="44033" fg:w="186"/><text x="61.3670%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (43 samples, 0.06%)</title><rect x="61.4030%" y="213" width="0.0597%" height="15" fill="rgb(243,47,51)" fg:x="44239" fg:w="43"/><text x="61.6530%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (43 samples, 0.06%)</title><rect x="61.4030%" y="197" width="0.0597%" height="15" fill="rgb(241,183,40)" fg:x="44239" fg:w="43"/><text x="61.6530%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (57 samples, 0.08%)</title><rect x="61.3849%" y="229" width="0.0791%" height="15" fill="rgb(231,217,32)" fg:x="44226" fg:w="57"/><text x="61.6349%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (25 samples, 0.03%)</title><rect x="61.5681%" y="197" width="0.0347%" height="15" fill="rgb(229,61,38)" fg:x="44358" fg:w="25"/><text x="61.8181%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (65 samples, 0.09%)</title><rect x="61.5196%" y="213" width="0.0902%" height="15" fill="rgb(225,210,5)" fg:x="44323" fg:w="65"/><text x="61.7696%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (108 samples, 0.15%)</title><rect x="61.4640%" y="229" width="0.1499%" height="15" fill="rgb(231,79,45)" fg:x="44283" fg:w="108"/><text x="61.7140%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::~WriteBatch (181 samples, 0.25%)</title><rect x="61.3752%" y="245" width="0.2512%" height="15" fill="rgb(224,100,7)" fg:x="44219" fg:w="181"/><text x="61.6252%" y="255.50"></text></g><g><title>libc+ (45 samples, 0.06%)</title><rect x="61.6334%" y="245" width="0.0625%" height="15" fill="rgb(241,198,18)" fg:x="44405" fg:w="45"/><text x="61.8834%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.01%)</title><rect x="61.7111%" y="245" width="0.0111%" height="15" fill="rgb(252,97,53)" fg:x="44461" fg:w="8"/><text x="61.9611%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::DB::Put (17,403 samples, 24.16%)</title><rect x="37.5699%" y="261" width="24.1551%" height="15" fill="rgb(220,88,7)" fg:x="27068" fg:w="17403"/><text x="37.8199%" y="271.50">httpmq-rs`rocksdb::DB::Put</text></g><g><title>httpmq-rs`rocksdb::DBImpl::Write (13 samples, 0.02%)</title><rect x="61.7250%" y="261" width="0.0180%" height="15" fill="rgb(213,176,14)" fg:x="44471" fg:w="13"/><text x="61.9750%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Put (16 samples, 0.02%)</title><rect x="61.7430%" y="261" width="0.0222%" height="15" fill="rgb(246,73,7)" fg:x="44484" fg:w="16"/><text x="61.9930%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::WriteBatch (16 samples, 0.02%)</title><rect x="61.7652%" y="261" width="0.0222%" height="15" fill="rgb(245,64,36)" fg:x="44500" fg:w="16"/><text x="62.0152%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::DB::Put (17,513 samples, 24.31%)</title><rect x="37.5227%" y="293" width="24.3077%" height="15" fill="rgb(245,80,10)" fg:x="27034" fg:w="17513"/><text x="37.7727%" y="303.50">httpmq-rs`rocksdb::DB::Put</text></g><g><title>httpmq-rs`rocksdb::DBImpl::Put (17,490 samples, 24.28%)</title><rect x="37.5547%" y="277" width="24.2758%" height="15" fill="rgb(232,107,50)" fg:x="27057" fg:w="17490"/><text x="37.8047%" y="287.50">httpmq-rs`rocksdb::DBImpl::Put</text></g><g><title>httpmq-rs`rocksdb::WriteBatch::~WriteBatch (31 samples, 0.04%)</title><rect x="61.7874%" y="261" width="0.0430%" height="15" fill="rgb(253,3,0)" fg:x="44516" fg:w="31"/><text x="62.0374%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::DefaultColumnFamily (9 samples, 0.01%)</title><rect x="61.8305%" y="293" width="0.0125%" height="15" fill="rgb(212,99,53)" fg:x="44547" fg:w="9"/><text x="62.0805%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb_put (17,585 samples, 24.41%)</title><rect x="37.4617%" y="309" width="24.4077%" height="15" fill="rgb(249,111,54)" fg:x="26990" fg:w="17585"/><text x="37.7117%" y="319.50">httpmq-rs`rocksdb_put</text></g><g><title>httpmq-rs`rocksdb::DBImpl::Put (19 samples, 0.03%)</title><rect x="61.8430%" y="293" width="0.0264%" height="15" fill="rgb(249,55,30)" fg:x="44556" fg:w="19"/><text x="62.0930%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (13 samples, 0.02%)</title><rect x="61.8721%" y="309" width="0.0180%" height="15" fill="rgb(237,47,42)" fg:x="44577" fg:w="13"/><text x="62.1221%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (34 samples, 0.05%)</title><rect x="61.9096%" y="293" width="0.0472%" height="15" fill="rgb(211,20,18)" fg:x="44604" fg:w="34"/><text x="62.1596%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (32 samples, 0.04%)</title><rect x="61.9124%" y="277" width="0.0444%" height="15" fill="rgb(231,203,46)" fg:x="44606" fg:w="32"/><text x="62.1624%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (49 samples, 0.07%)</title><rect x="61.8902%" y="309" width="0.0680%" height="15" fill="rgb(237,142,3)" fg:x="44590" fg:w="49"/><text x="62.1402%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (13 samples, 0.02%)</title><rect x="62.0303%" y="293" width="0.0180%" height="15" fill="rgb(241,107,1)" fg:x="44691" fg:w="13"/><text x="62.2803%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (45 samples, 0.06%)</title><rect x="62.1331%" y="277" width="0.0625%" height="15" fill="rgb(229,83,13)" fg:x="44765" fg:w="45"/><text x="62.3831%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (109 samples, 0.15%)</title><rect x="62.0484%" y="293" width="0.1513%" height="15" fill="rgb(241,91,40)" fg:x="44704" fg:w="109"/><text x="62.2984%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (175 samples, 0.24%)</title><rect x="61.9582%" y="309" width="0.2429%" height="15" fill="rgb(225,3,45)" fg:x="44639" fg:w="175"/><text x="62.2082%" y="319.50"></text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::put (17,940 samples, 24.90%)</title><rect x="37.3104%" y="325" width="24.9004%" height="15" fill="rgb(244,223,14)" fg:x="26881" fg:w="17940"/><text x="37.5604%" y="335.50">httpmq-rs`rocksdb::db::DBWithThreadMode&lt;..</text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (8 samples, 0.01%)</title><rect x="62.2483%" y="325" width="0.0111%" height="15" fill="rgb(224,124,37)" fg:x="44848" fg:w="8"/><text x="62.4983%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (37 samples, 0.05%)</title><rect x="62.2594%" y="325" width="0.0514%" height="15" fill="rgb(251,171,30)" fg:x="44856" fg:w="37"/><text x="62.5094%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.01%)</title><rect x="62.2968%" y="309" width="0.0139%" height="15" fill="rgb(236,46,54)" fg:x="44883" fg:w="10"/><text x="62.5468%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.01%)</title><rect x="62.2982%" y="293" width="0.0125%" height="15" fill="rgb(245,213,5)" fg:x="44884" fg:w="9"/><text x="62.5482%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (32 samples, 0.04%)</title><rect x="62.3357%" y="309" width="0.0444%" height="15" fill="rgb(230,144,27)" fg:x="44911" fg:w="32"/><text x="62.5857%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.02%)</title><rect x="62.3648%" y="293" width="0.0153%" height="15" fill="rgb(220,86,6)" fg:x="44932" fg:w="11"/><text x="62.6148%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (51 samples, 0.07%)</title><rect x="62.3107%" y="325" width="0.0708%" height="15" fill="rgb(240,20,13)" fg:x="44893" fg:w="51"/><text x="62.5607%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (12 samples, 0.02%)</title><rect x="62.3815%" y="325" width="0.0167%" height="15" fill="rgb(217,89,34)" fg:x="44944" fg:w="12"/><text x="62.6315%" y="335.50"></text></g><g><title>httpmq-rs`httpmq_rs::service::httpmq_now_getpos (29,948 samples, 41.57%)</title><rect x="20.8420%" y="341" width="41.5673%" height="15" fill="rgb(229,13,5)" fg:x="15016" fg:w="29948"/><text x="21.0920%" y="351.50">httpmq-rs`httpmq_rs::service::httpmq_now_getpos</text></g><g><title>httpmq-rs`httpmq_rs::service::kv_maxqueue (10 samples, 0.01%)</title><rect x="62.4120%" y="341" width="0.0139%" height="15" fill="rgb(244,67,35)" fg:x="44966" fg:w="10"/><text x="62.6620%" y="351.50"></text></g><g><title>httpmq-rs`httpmq_rs::service::process (9 samples, 0.01%)</title><rect x="62.4259%" y="341" width="0.0125%" height="15" fill="rgb(221,40,2)" fg:x="44976" fg:w="9"/><text x="62.6759%" y="351.50"></text></g><g><title>httpmq-rs`rocksdb::ReadOptions::ReadOptions (12 samples, 0.02%)</title><rect x="62.4842%" y="309" width="0.0167%" height="15" fill="rgb(237,157,21)" fg:x="45018" fg:w="12"/><text x="62.7342%" y="319.50"></text></g><g><title>httpmq-rs`rocksdb::ReadOptions::ReadOptions (54 samples, 0.07%)</title><rect x="62.5064%" y="293" width="0.0750%" height="15" fill="rgb(222,94,11)" fg:x="45034" fg:w="54"/><text x="62.7564%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (23 samples, 0.03%)</title><rect x="62.6258%" y="229" width="0.0319%" height="15" fill="rgb(249,113,6)" fg:x="45120" fg:w="23"/><text x="62.8758%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (55 samples, 0.08%)</title><rect x="62.5828%" y="277" width="0.0763%" height="15" fill="rgb(238,137,36)" fg:x="45089" fg:w="55"/><text x="62.8328%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (52 samples, 0.07%)</title><rect x="62.5869%" y="261" width="0.0722%" height="15" fill="rgb(210,102,26)" fg:x="45092" fg:w="52"/><text x="62.8369%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (51 samples, 0.07%)</title><rect x="62.5883%" y="245" width="0.0708%" height="15" fill="rgb(218,30,30)" fg:x="45093" fg:w="51"/><text x="62.8383%" y="255.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (58 samples, 0.08%)</title><rect x="62.5814%" y="293" width="0.0805%" height="15" fill="rgb(214,67,26)" fg:x="45088" fg:w="58"/><text x="62.8314%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb_readoptions_create (120 samples, 0.17%)</title><rect x="62.5009%" y="309" width="0.1666%" height="15" fill="rgb(251,9,53)" fg:x="45030" fg:w="120"/><text x="62.7509%" y="319.50"></text></g><g><title>libc+ (9 samples, 0.01%)</title><rect x="62.6674%" y="309" width="0.0125%" height="15" fill="rgb(228,204,25)" fg:x="45150" fg:w="9"/><text x="62.9174%" y="319.50"></text></g><g><title>httpmq-rs`&lt;rocksdb::db_options::ReadOptions as core::default::Default&gt;::default (145 samples, 0.20%)</title><rect x="62.4814%" y="325" width="0.2013%" height="15" fill="rgb(207,153,8)" fg:x="45016" fg:w="145"/><text x="62.7314%" y="335.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::Cleanable (16 samples, 0.02%)</title><rect x="62.6869%" y="325" width="0.0222%" height="15" fill="rgb(242,9,16)" fg:x="45164" fg:w="16"/><text x="62.9369%" y="335.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::DefaultColumnFamily (27 samples, 0.04%)</title><rect x="62.7091%" y="325" width="0.0375%" height="15" fill="rgb(217,211,10)" fg:x="45180" fg:w="27"/><text x="62.9591%" y="335.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (11 samples, 0.02%)</title><rect x="62.8284%" y="309" width="0.0153%" height="15" fill="rgb(219,228,52)" fg:x="45266" fg:w="11"/><text x="63.0784%" y="319.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion (13 samples, 0.02%)</title><rect x="62.8631%" y="277" width="0.0180%" height="15" fill="rgb(231,92,29)" fg:x="45291" fg:w="13"/><text x="63.1131%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion (9 samples, 0.01%)</title><rect x="62.8812%" y="277" width="0.0125%" height="15" fill="rgb(232,8,23)" fg:x="45304" fg:w="9"/><text x="63.1312%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyHandleImpl::GetComparator (19 samples, 0.03%)</title><rect x="62.8937%" y="277" width="0.0264%" height="15" fill="rgb(216,211,34)" fg:x="45313" fg:w="19"/><text x="63.1437%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FilePicker::GetNextFile (10 samples, 0.01%)</title><rect x="63.0436%" y="261" width="0.0139%" height="15" fill="rgb(236,151,0)" fg:x="45421" fg:w="10"/><text x="63.2936%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Instance (10 samples, 0.01%)</title><rect x="63.1060%" y="245" width="0.0139%" height="15" fill="rgb(209,168,3)" fg:x="45466" fg:w="10"/><text x="63.3560%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal (10 samples, 0.01%)</title><rect x="63.1199%" y="245" width="0.0139%" height="15" fill="rgb(208,129,28)" fg:x="45476" fg:w="10"/><text x="63.3699%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::StaticMeta::Swap (45 samples, 0.06%)</title><rect x="63.1338%" y="245" width="0.0625%" height="15" fill="rgb(229,78,22)" fg:x="45486" fg:w="45"/><text x="63.3838%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion (98 samples, 0.14%)</title><rect x="63.0783%" y="261" width="0.1360%" height="15" fill="rgb(228,187,13)" fg:x="45446" fg:w="98"/><text x="63.3283%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Swap (13 samples, 0.02%)</title><rect x="63.1962%" y="245" width="0.0180%" height="15" fill="rgb(240,119,24)" fg:x="45531" fg:w="13"/><text x="63.4462%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Instance (9 samples, 0.01%)</title><rect x="63.2018%" y="229" width="0.0125%" height="15" fill="rgb(209,194,42)" fg:x="45535" fg:w="9"/><text x="63.4518%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::CompareAndSwap (12 samples, 0.02%)</title><rect x="63.2212%" y="245" width="0.0167%" height="15" fill="rgb(247,200,46)" fg:x="45549" fg:w="12"/><text x="63.4712%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Instance (9 samples, 0.01%)</title><rect x="63.2254%" y="229" width="0.0125%" height="15" fill="rgb(218,76,16)" fg:x="45552" fg:w="9"/><text x="63.4754%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap (19 samples, 0.03%)</title><rect x="63.2434%" y="245" width="0.0264%" height="15" fill="rgb(225,21,48)" fg:x="45565" fg:w="19"/><text x="63.4934%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion (43 samples, 0.06%)</title><rect x="63.2143%" y="261" width="0.0597%" height="15" fill="rgb(239,223,50)" fg:x="45544" fg:w="43"/><text x="63.4643%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyHandleImpl::GetComparator (8 samples, 0.01%)</title><rect x="63.2740%" y="261" width="0.0111%" height="15" fill="rgb(244,45,21)" fg:x="45587" fg:w="8"/><text x="63.5240%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::GetPerfLevel (14 samples, 0.02%)</title><rect x="63.2948%" y="261" width="0.0194%" height="15" fill="rgb(232,33,43)" fg:x="45602" fg:w="14"/><text x="63.5448%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::LogFileImpl::LogNumber (14 samples, 0.02%)</title><rect x="63.3142%" y="261" width="0.0194%" height="15" fill="rgb(209,8,3)" fg:x="45616" fg:w="14"/><text x="63.5642%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (10 samples, 0.01%)</title><rect x="63.7667%" y="229" width="0.0139%" height="15" fill="rgb(214,25,53)" fg:x="45942" fg:w="10"/><text x="64.0167%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (77 samples, 0.11%)</title><rect x="63.9124%" y="213" width="0.1069%" height="15" fill="rgb(254,186,54)" fg:x="46047" fg:w="77"/><text x="64.1624%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (43 samples, 0.06%)</title><rect x="63.9596%" y="197" width="0.0597%" height="15" fill="rgb(208,174,49)" fg:x="46081" fg:w="43"/><text x="64.2096%" y="207.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (17 samples, 0.02%)</title><rect x="64.0193%" y="213" width="0.0236%" height="15" fill="rgb(233,191,51)" fg:x="46124" fg:w="17"/><text x="64.2693%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (17 samples, 0.02%)</title><rect x="64.0429%" y="213" width="0.0236%" height="15" fill="rgb(222,134,10)" fg:x="46141" fg:w="17"/><text x="64.2929%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (210 samples, 0.29%)</title><rect x="63.7806%" y="229" width="0.2915%" height="15" fill="rgb(230,226,20)" fg:x="45952" fg:w="210"/><text x="64.0306%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (500 samples, 0.69%)</title><rect x="63.4017%" y="245" width="0.6940%" height="15" fill="rgb(251,111,25)" fg:x="45679" fg:w="500"/><text x="63.6517%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (12 samples, 0.02%)</title><rect x="64.0790%" y="229" width="0.0167%" height="15" fill="rgb(224,40,46)" fg:x="46167" fg:w="12"/><text x="64.3290%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::NewRangeTombstoneIterator (8 samples, 0.01%)</title><rect x="64.1026%" y="245" width="0.0111%" height="15" fill="rgb(236,108,47)" fg:x="46184" fg:w="8"/><text x="64.3526%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableRep::KeyComparator::decode_key (9 samples, 0.01%)</title><rect x="64.1137%" y="245" width="0.0125%" height="15" fill="rgb(234,93,0)" fg:x="46192" fg:w="9"/><text x="64.3637%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (579 samples, 0.80%)</title><rect x="63.3378%" y="261" width="0.8036%" height="15" fill="rgb(224,213,32)" fg:x="45633" fg:w="579"/><text x="63.5878%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.01%)</title><rect x="64.1290%" y="245" width="0.0125%" height="15" fill="rgb(251,11,48)" fg:x="46203" fg:w="9"/><text x="64.3790%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (10 samples, 0.01%)</title><rect x="64.1512%" y="261" width="0.0139%" height="15" fill="rgb(236,173,5)" fg:x="46219" fg:w="10"/><text x="64.4012%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::TableCache::Get (10 samples, 0.01%)</title><rect x="64.1651%" y="261" width="0.0139%" height="15" fill="rgb(230,95,12)" fg:x="46229" fg:w="10"/><text x="64.4151%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::CompareAndSwap (11 samples, 0.02%)</title><rect x="64.1789%" y="261" width="0.0153%" height="15" fill="rgb(232,209,1)" fg:x="46239" fg:w="11"/><text x="64.4289%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Swap (12 samples, 0.02%)</title><rect x="64.1970%" y="261" width="0.0167%" height="15" fill="rgb(232,6,1)" fg:x="46252" fg:w="12"/><text x="64.4470%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (10 samples, 0.01%)</title><rect x="64.3982%" y="245" width="0.0139%" height="15" fill="rgb(210,224,50)" fg:x="46397" fg:w="10"/><text x="64.6482%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (15 samples, 0.02%)</title><rect x="64.4427%" y="229" width="0.0208%" height="15" fill="rgb(228,127,35)" fg:x="46429" fg:w="15"/><text x="64.6927%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FilePicker::GetNextFile (46 samples, 0.06%)</title><rect x="64.4121%" y="245" width="0.0638%" height="15" fill="rgb(245,102,45)" fg:x="46407" fg:w="46"/><text x="64.6621%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FilePicker::PrepareNextLevel (63 samples, 0.09%)</title><rect x="64.4760%" y="245" width="0.0874%" height="15" fill="rgb(214,1,49)" fg:x="46453" fg:w="63"/><text x="64.7260%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FindFileInRange (33 samples, 0.05%)</title><rect x="64.5176%" y="229" width="0.0458%" height="15" fill="rgb(226,163,40)" fg:x="46483" fg:w="33"/><text x="64.7676%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::Get (11 samples, 0.02%)</title><rect x="64.5676%" y="245" width="0.0153%" height="15" fill="rgb(239,212,28)" fg:x="46519" fg:w="11"/><text x="64.8176%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::NewRangeTombstoneIterator (21 samples, 0.03%)</title><rect x="64.5828%" y="245" width="0.0291%" height="15" fill="rgb(220,20,13)" fg:x="46530" fg:w="21"/><text x="64.8328%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::FileIndexer::GetNextLevelIndex (12 samples, 0.02%)</title><rect x="64.6162%" y="245" width="0.0167%" height="15" fill="rgb(210,164,35)" fg:x="46554" fg:w="12"/><text x="64.8662%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (48 samples, 0.07%)</title><rect x="64.6328%" y="245" width="0.0666%" height="15" fill="rgb(248,109,41)" fg:x="46566" fg:w="48"/><text x="64.8828%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (36 samples, 0.05%)</title><rect x="64.6495%" y="229" width="0.0500%" height="15" fill="rgb(238,23,50)" fg:x="46578" fg:w="36"/><text x="64.8995%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::BinarySearchIndexReader::NewIterator (23 samples, 0.03%)</title><rect x="64.7785%" y="229" width="0.0319%" height="15" fill="rgb(211,48,49)" fg:x="46671" fg:w="23"/><text x="65.0285%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::Block::NewIndexIterator (26 samples, 0.04%)</title><rect x="65.0700%" y="197" width="0.0361%" height="15" fill="rgb(223,36,21)" fg:x="46881" fg:w="26"/><text x="65.3200%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::Initialize (10 samples, 0.01%)</title><rect x="65.0922%" y="181" width="0.0139%" height="15" fill="rgb(207,123,46)" fg:x="46897" fg:w="10"/><text x="65.3422%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::BinarySearchIndexReader::NewIterator (55 samples, 0.08%)</title><rect x="65.0437%" y="213" width="0.0763%" height="15" fill="rgb(240,218,32)" fg:x="46862" fg:w="55"/><text x="65.2937%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry (13 samples, 0.02%)</title><rect x="65.1478%" y="213" width="0.0180%" height="15" fill="rgb(252,5,43)" fg:x="46937" fg:w="13"/><text x="65.3978%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Valid (9 samples, 0.01%)</title><rect x="65.1658%" y="213" width="0.0125%" height="15" fill="rgb(252,84,19)" fg:x="46950" fg:w="9"/><text x="65.4158%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Valid (23 samples, 0.03%)</title><rect x="65.1949%" y="197" width="0.0319%" height="15" fill="rgb(243,152,39)" fg:x="46971" fg:w="23"/><text x="65.4449%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::NextImpl (18 samples, 0.02%)</title><rect x="65.2269%" y="197" width="0.0250%" height="15" fill="rgb(234,160,15)" fg:x="46994" fg:w="18"/><text x="65.4769%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (99 samples, 0.14%)</title><rect x="65.9042%" y="149" width="0.1374%" height="15" fill="rgb(237,34,20)" fg:x="47482" fg:w="99"/><text x="66.1542%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (61 samples, 0.08%)</title><rect x="65.9569%" y="133" width="0.0847%" height="15" fill="rgb(229,97,13)" fg:x="47520" fg:w="61"/><text x="66.2069%" y="143.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (8 samples, 0.01%)</title><rect x="66.0416%" y="149" width="0.0111%" height="15" fill="rgb(234,71,50)" fg:x="47581" fg:w="8"/><text x="66.2916%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (19 samples, 0.03%)</title><rect x="66.0527%" y="149" width="0.0264%" height="15" fill="rgb(253,155,4)" fg:x="47589" fg:w="19"/><text x="66.3027%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (214 samples, 0.30%)</title><rect x="65.7932%" y="165" width="0.2970%" height="15" fill="rgb(222,185,37)" fg:x="47402" fg:w="214"/><text x="66.0432%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.01%)</title><rect x="66.0791%" y="149" width="0.0111%" height="15" fill="rgb(251,177,13)" fg:x="47608" fg:w="8"/><text x="66.3291%" y="159.50"></text></g><g><title>httpmq-rs`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::BinarySeek&lt;rocksdb::DecodeKeyV4&gt; (601 samples, 0.83%)</title><rect x="65.2879%" y="181" width="0.8342%" height="15" fill="rgb(250,179,40)" fg:x="47038" fg:w="601"/><text x="65.5379%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (16 samples, 0.02%)</title><rect x="66.0999%" y="165" width="0.0222%" height="15" fill="rgb(242,44,2)" fg:x="47623" fg:w="16"/><text x="66.3499%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (8 samples, 0.01%)</title><rect x="66.1221%" y="181" width="0.0111%" height="15" fill="rgb(216,177,13)" fg:x="47639" fg:w="8"/><text x="66.3721%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::DecodeCurrentValue (9 samples, 0.01%)</title><rect x="66.1332%" y="181" width="0.0125%" height="15" fill="rgb(216,106,43)" fg:x="47647" fg:w="9"/><text x="66.3832%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::DecodeCurrentValue (65 samples, 0.09%)</title><rect x="66.1665%" y="165" width="0.0902%" height="15" fill="rgb(216,183,2)" fg:x="47671" fg:w="65"/><text x="66.4165%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::IndexValue::DecodeFrom (54 samples, 0.07%)</title><rect x="66.1818%" y="149" width="0.0750%" height="15" fill="rgb(249,75,3)" fg:x="47682" fg:w="54"/><text x="66.4318%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::GetVarint64Ptr (19 samples, 0.03%)</title><rect x="66.2304%" y="133" width="0.0264%" height="15" fill="rgb(219,67,39)" fg:x="47717" fg:w="19"/><text x="66.4804%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::ParseNextIndexKey (92 samples, 0.13%)</title><rect x="66.1457%" y="181" width="0.1277%" height="15" fill="rgb(253,228,2)" fg:x="47656" fg:w="92"/><text x="66.3957%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::IndexValue::DecodeFrom (12 samples, 0.02%)</title><rect x="66.2567%" y="165" width="0.0167%" height="15" fill="rgb(235,138,27)" fg:x="47736" fg:w="12"/><text x="66.5067%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::SeekImpl (737 samples, 1.02%)</title><rect x="65.2546%" y="197" width="1.0229%" height="15" fill="rgb(236,97,51)" fg:x="47014" fg:w="737"/><text x="65.5046%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Seek (793 samples, 1.10%)</title><rect x="65.1825%" y="213" width="1.1007%" height="15" fill="rgb(240,80,30)" fg:x="46962" fg:w="793"/><text x="65.4325%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::~Cleanable (12 samples, 0.02%)</title><rect x="66.2984%" y="213" width="0.0167%" height="15" fill="rgb(230,178,19)" fg:x="47766" fg:w="12"/><text x="66.5484%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::Block::NewDataIterator (18 samples, 0.02%)</title><rect x="66.4275%" y="197" width="0.0250%" height="15" fill="rgb(210,190,27)" fg:x="47859" fg:w="18"/><text x="66.6775%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (9 samples, 0.01%)</title><rect x="66.4608%" y="197" width="0.0125%" height="15" fill="rgb(222,107,31)" fg:x="47883" fg:w="9"/><text x="66.7108%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::crc32c::Extend (16 samples, 0.02%)</title><rect x="66.6343%" y="117" width="0.0222%" height="15" fill="rgb(216,127,34)" fg:x="48008" fg:w="16"/><text x="66.8843%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::CheckBlockChecksum (20 samples, 0.03%)</title><rect x="66.6301%" y="149" width="0.0278%" height="15" fill="rgb(234,116,52)" fg:x="48005" fg:w="20"/><text x="66.8801%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::VerifyBlockChecksum(rocksdb::ChecksumType, char const*, unsigned long, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (19 samples, 0.03%)</title><rect x="66.6315%" y="133" width="0.0264%" height="15" fill="rgb(222,124,15)" fg:x="48006" fg:w="19"/><text x="66.8815%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long long, unsigned long, rocksdb::Slice*, char*, std::__1::unique_ptr&lt;char [], std::__1::default_delete (161 samples, 0.22%)</title><rect x="66.6634%" y="149" width="0.2235%" height="15" fill="rgb(231,179,28)" fg:x="48029" fg:w="161"/><text x="66.9134%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`pread (147 samples, 0.20%)</title><rect x="66.6829%" y="133" width="0.2040%" height="15" fill="rgb(226,93,45)" fg:x="48043" fg:w="147"/><text x="66.9329%" y="143.50"></text></g><g><title>httpmq-rs`void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt; (62 samples, 0.09%)</title><rect x="66.9049%" y="53" width="0.0861%" height="15" fill="rgb(215,8,51)" fg:x="48203" fg:w="62"/><text x="67.1549%" y="63.50"></text></g><g><title>httpmq-rs`snappy::RawUncompress (74 samples, 0.10%)</title><rect x="66.8924%" y="85" width="0.1027%" height="15" fill="rgb(223,106,5)" fg:x="48194" fg:w="74"/><text x="67.1424%" y="95.50"></text></g><g><title>httpmq-rs`snappy::RawUncompress (68 samples, 0.09%)</title><rect x="66.9008%" y="69" width="0.0944%" height="15" fill="rgb(250,191,5)" fg:x="48200" fg:w="68"/><text x="67.1508%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.02%)</title><rect x="66.9952%" y="69" width="0.0153%" height="15" fill="rgb(242,132,44)" fg:x="48268" fg:w="11"/><text x="67.2452%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.01%)</title><rect x="66.9965%" y="53" width="0.0139%" height="15" fill="rgb(251,152,29)" fg:x="48269" fg:w="10"/><text x="67.2465%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (10 samples, 0.01%)</title><rect x="66.9965%" y="37" width="0.0139%" height="15" fill="rgb(218,179,5)" fg:x="48269" fg:w="10"/><text x="67.2465%" y="47.50"></text></g><g><title>httpmq-rs`rocksdb::Snappy_Uncompress (87 samples, 0.12%)</title><rect x="66.8911%" y="101" width="0.1208%" height="15" fill="rgb(227,67,19)" fg:x="48193" fg:w="87"/><text x="67.1411%" y="111.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (12 samples, 0.02%)</title><rect x="66.9952%" y="85" width="0.0167%" height="15" fill="rgb(233,119,31)" fg:x="48268" fg:w="12"/><text x="67.2452%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressBlockContentsForCompressionType (95 samples, 0.13%)</title><rect x="66.8883%" y="133" width="0.1319%" height="15" fill="rgb(241,120,22)" fg:x="48191" fg:w="95"/><text x="67.1383%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressData (93 samples, 0.13%)</title><rect x="66.8911%" y="117" width="0.1291%" height="15" fill="rgb(224,102,30)" fg:x="48193" fg:w="93"/><text x="67.1411%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressBlockContents (98 samples, 0.14%)</title><rect x="66.8869%" y="149" width="0.1360%" height="15" fill="rgb(210,164,37)" fg:x="48190" fg:w="98"/><text x="67.1369%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::ReadBlockContents (299 samples, 0.42%)</title><rect x="66.6135%" y="165" width="0.4150%" height="15" fill="rgb(226,191,16)" fg:x="47993" fg:w="299"/><text x="66.8635%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Lookup (13 samples, 0.02%)</title><rect x="67.0507%" y="165" width="0.0180%" height="15" fill="rgb(214,40,45)" fg:x="48308" fg:w="13"/><text x="67.3007%" y="175.50"></text></g><g><title>httpmq-rs`ROCKSDB_XXH3p_64bits (16 samples, 0.02%)</title><rect x="67.1131%" y="149" width="0.0222%" height="15" fill="rgb(244,29,26)" fg:x="48353" fg:w="16"/><text x="67.3631%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::UpdateCacheHitMetrics (35 samples, 0.05%)</title><rect x="67.1353%" y="149" width="0.0486%" height="15" fill="rgb(216,16,5)" fg:x="48369" fg:w="35"/><text x="67.3853%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (72 samples, 0.10%)</title><rect x="67.2839%" y="101" width="0.0999%" height="15" fill="rgb(249,76,35)" fg:x="48476" fg:w="72"/><text x="67.5339%" y="111.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (76 samples, 0.11%)</title><rect x="67.2825%" y="117" width="0.1055%" height="15" fill="rgb(207,11,44)" fg:x="48475" fg:w="76"/><text x="67.5325%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Lock (106 samples, 0.15%)</title><rect x="67.2825%" y="133" width="0.1471%" height="15" fill="rgb(228,190,49)" fg:x="48475" fg:w="106"/><text x="67.5325%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (30 samples, 0.04%)</title><rect x="67.3880%" y="117" width="0.0416%" height="15" fill="rgb(214,173,12)" fg:x="48551" fg:w="30"/><text x="67.6380%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (71 samples, 0.10%)</title><rect x="67.4324%" y="101" width="0.0985%" height="15" fill="rgb(218,26,35)" fg:x="48583" fg:w="71"/><text x="67.6824%" y="111.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (74 samples, 0.10%)</title><rect x="67.4296%" y="117" width="0.1027%" height="15" fill="rgb(220,200,19)" fg:x="48581" fg:w="74"/><text x="67.6796%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Unlock (98 samples, 0.14%)</title><rect x="67.4296%" y="133" width="0.1360%" height="15" fill="rgb(239,95,49)" fg:x="48581" fg:w="98"/><text x="67.6796%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (24 samples, 0.03%)</title><rect x="67.5323%" y="117" width="0.0333%" height="15" fill="rgb(235,85,53)" fg:x="48655" fg:w="24"/><text x="67.7823%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (11 samples, 0.02%)</title><rect x="67.5656%" y="133" width="0.0153%" height="15" fill="rgb(233,133,31)" fg:x="48679" fg:w="11"/><text x="67.8156%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (9 samples, 0.01%)</title><rect x="67.5809%" y="133" width="0.0125%" height="15" fill="rgb(218,25,20)" fg:x="48690" fg:w="9"/><text x="67.8309%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Lookup (281 samples, 0.39%)</title><rect x="67.2061%" y="149" width="0.3900%" height="15" fill="rgb(252,210,38)" fg:x="48420" fg:w="281"/><text x="67.4561%" y="159.50"></text></g><g><title>httpmq-rs`ROCKSDB_XXH3p_64bits (9 samples, 0.01%)</title><rect x="67.6364%" y="133" width="0.0125%" height="15" fill="rgb(242,134,21)" fg:x="48730" fg:w="9"/><text x="67.8864%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Lookup (41 samples, 0.06%)</title><rect x="67.5962%" y="149" width="0.0569%" height="15" fill="rgb(213,28,48)" fg:x="48701" fg:w="41"/><text x="67.8462%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry (427 samples, 0.59%)</title><rect x="67.0687%" y="165" width="0.5927%" height="15" fill="rgb(250,196,2)" fg:x="48321" fg:w="427"/><text x="67.3187%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.02%)</title><rect x="67.7127%" y="117" width="0.0222%" height="15" fill="rgb(227,5,17)" fg:x="48785" fg:w="16"/><text x="67.9627%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="67.7238%" y="101" width="0.0111%" height="15" fill="rgb(221,226,24)" fg:x="48793" fg:w="8"/><text x="67.9738%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*) (50 samples, 0.07%)</title><rect x="67.6711%" y="133" width="0.0694%" height="15" fill="rgb(211,5,48)" fg:x="48755" fg:w="50"/><text x="67.9211%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*) (56 samples, 0.08%)</title><rect x="67.6669%" y="149" width="0.0777%" height="15" fill="rgb(219,150,6)" fg:x="48752" fg:w="56"/><text x="67.9169%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::PutDataBlockToCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::CachableEntry (69 samples, 0.10%)</title><rect x="67.6614%" y="165" width="0.0958%" height="15" fill="rgb(251,46,16)" fg:x="48748" fg:w="69"/><text x="67.9114%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (908 samples, 1.26%)</title><rect x="66.5163%" y="181" width="1.2603%" height="15" fill="rgb(220,204,40)" fg:x="47923" fg:w="908"/><text x="66.7663%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (960 samples, 1.33%)</title><rect x="66.4733%" y="197" width="1.3325%" height="15" fill="rgb(211,85,2)" fg:x="47892" fg:w="960"/><text x="66.7233%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (21 samples, 0.03%)</title><rect x="67.7766%" y="181" width="0.0291%" height="15" fill="rgb(229,17,7)" fg:x="48831" fg:w="21"/><text x="68.0266%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (1,077 samples, 1.49%)</title><rect x="66.3150%" y="213" width="1.4949%" height="15" fill="rgb(239,72,28)" fg:x="47778" fg:w="1077"/><text x="66.5650%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Valid (12 samples, 0.02%)</title><rect x="67.8349%" y="197" width="0.0167%" height="15" fill="rgb(230,47,54)" fg:x="48873" fg:w="12"/><text x="68.0849%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::NextImpl (21 samples, 0.03%)</title><rect x="67.8515%" y="197" width="0.0291%" height="15" fill="rgb(214,50,8)" fg:x="48885" fg:w="21"/><text x="68.1015%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (18 samples, 0.02%)</title><rect x="68.0084%" y="149" width="0.0250%" height="15" fill="rgb(216,198,43)" fg:x="48998" fg:w="18"/><text x="68.2584%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (10 samples, 0.01%)</title><rect x="68.0195%" y="133" width="0.0139%" height="15" fill="rgb(234,20,35)" fg:x="49006" fg:w="10"/><text x="68.2695%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::CompareCurrentKey (29 samples, 0.04%)</title><rect x="67.9973%" y="165" width="0.0403%" height="15" fill="rgb(254,45,19)" fg:x="48990" fg:w="29"/><text x="68.2473%" y="175.50"></text></g><g><title>httpmq-rs`bool rocksdb::BlockIter&lt;rocksdb::Slice&gt;::BinarySeek&lt;rocksdb::DecodeKey&gt; (95 samples, 0.13%)</title><rect x="67.9154%" y="181" width="0.1319%" height="15" fill="rgb(219,14,44)" fg:x="48931" fg:w="95"/><text x="68.1654%" y="191.50"></text></g><g><title>httpmq-rs`bool rocksdb::DataBlockIter::ParseNextDataKey&lt;rocksdb::DecodeEntry&gt; (85 samples, 0.12%)</title><rect x="68.0472%" y="181" width="0.1180%" height="15" fill="rgb(217,220,26)" fg:x="49026" fg:w="85"/><text x="68.2972%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (25 samples, 0.03%)</title><rect x="68.1930%" y="165" width="0.0347%" height="15" fill="rgb(213,158,28)" fg:x="49131" fg:w="25"/><text x="68.4430%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (16 samples, 0.02%)</title><rect x="68.2055%" y="149" width="0.0222%" height="15" fill="rgb(252,51,52)" fg:x="49140" fg:w="16"/><text x="68.4555%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::CompareCurrentKey (55 samples, 0.08%)</title><rect x="68.1680%" y="181" width="0.0763%" height="15" fill="rgb(246,89,16)" fg:x="49113" fg:w="55"/><text x="68.4180%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::GetVarint32PtrFallback (9 samples, 0.01%)</title><rect x="68.2443%" y="181" width="0.0125%" height="15" fill="rgb(216,158,49)" fg:x="49168" fg:w="9"/><text x="68.4943%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (12 samples, 0.02%)</title><rect x="68.2652%" y="181" width="0.0167%" height="15" fill="rgb(236,107,19)" fg:x="49183" fg:w="12"/><text x="68.5152%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::SeekImpl (296 samples, 0.41%)</title><rect x="67.8807%" y="197" width="0.4108%" height="15" fill="rgb(228,185,30)" fg:x="48906" fg:w="296"/><text x="68.1307%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::SeekForGet (354 samples, 0.49%)</title><rect x="67.8099%" y="213" width="0.4913%" height="15" fill="rgb(246,134,8)" fg:x="48855" fg:w="354"/><text x="68.0599%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::SeekImpl (11 samples, 0.02%)</title><rect x="68.3012%" y="213" width="0.0153%" height="15" fill="rgb(214,143,50)" fg:x="49209" fg:w="11"/><text x="68.5512%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::~DataBlockIter (10 samples, 0.01%)</title><rect x="68.3165%" y="213" width="0.0139%" height="15" fill="rgb(228,75,8)" fg:x="49220" fg:w="10"/><text x="68.5665%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (9 samples, 0.01%)</title><rect x="68.3929%" y="197" width="0.0125%" height="15" fill="rgb(207,175,4)" fg:x="49275" fg:w="9"/><text x="68.6429%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.01%)</title><rect x="68.3942%" y="181" width="0.0111%" height="15" fill="rgb(205,108,24)" fg:x="49276" fg:w="8"/><text x="68.6442%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::GetContext::SaveValue (57 samples, 0.08%)</title><rect x="68.3304%" y="213" width="0.0791%" height="15" fill="rgb(244,120,49)" fg:x="49230" fg:w="57"/><text x="68.5804%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::SeekImpl (23 samples, 0.03%)</title><rect x="68.4095%" y="213" width="0.0319%" height="15" fill="rgb(223,47,38)" fg:x="49287" fg:w="23"/><text x="68.6595%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::~IndexBlockIter (16 samples, 0.02%)</title><rect x="68.4428%" y="213" width="0.0222%" height="15" fill="rgb(229,179,11)" fg:x="49311" fg:w="16"/><text x="68.6928%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::ParseInternalKey (10 samples, 0.01%)</title><rect x="68.4650%" y="213" width="0.0139%" height="15" fill="rgb(231,122,1)" fg:x="49327" fg:w="10"/><text x="68.7150%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::Get (2,690 samples, 3.73%)</title><rect x="64.8105%" y="229" width="3.7337%" height="15" fill="rgb(245,119,9)" fg:x="46694" fg:w="2690"/><text x="65.0605%" y="239.50">http..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (40 samples, 0.06%)</title><rect x="68.4886%" y="213" width="0.0555%" height="15" fill="rgb(241,163,25)" fg:x="49344" fg:w="40"/><text x="68.7386%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (9 samples, 0.01%)</title><rect x="68.5483%" y="229" width="0.0125%" height="15" fill="rgb(217,214,3)" fg:x="49387" fg:w="9"/><text x="68.7983%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Seek (10 samples, 0.01%)</title><rect x="68.5608%" y="229" width="0.0139%" height="15" fill="rgb(240,86,28)" fg:x="49396" fg:w="10"/><text x="68.8108%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::GetContext::SaveValue (9 samples, 0.01%)</title><rect x="68.5997%" y="229" width="0.0125%" height="15" fill="rgb(215,47,9)" fg:x="49424" fg:w="9"/><text x="68.8497%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::value (8 samples, 0.01%)</title><rect x="68.6122%" y="229" width="0.0111%" height="15" fill="rgb(252,25,45)" fg:x="49433" fg:w="8"/><text x="68.8622%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::TableCache::Get (2,838 samples, 3.94%)</title><rect x="64.6994%" y="245" width="3.9391%" height="15" fill="rgb(251,164,9)" fg:x="46614" fg:w="2838"/><text x="64.9494%" y="255.50">http..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="68.6274%" y="229" width="0.0111%" height="15" fill="rgb(233,194,0)" fg:x="49444" fg:w="8"/><text x="68.8774%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.01%)</title><rect x="68.6385%" y="245" width="0.0111%" height="15" fill="rgb(249,111,24)" fg:x="49452" fg:w="8"/><text x="68.8885%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (3,202 samples, 4.44%)</title><rect x="64.2136%" y="261" width="4.4443%" height="15" fill="rgb(250,223,3)" fg:x="46264" fg:w="3202"/><text x="64.4636%" y="271.50">httpm..</text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (14 samples, 0.02%)</title><rect x="68.6580%" y="261" width="0.0194%" height="15" fill="rgb(236,178,37)" fg:x="49466" fg:w="14"/><text x="68.9080%" y="271.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (70 samples, 0.10%)</title><rect x="68.6774%" y="261" width="0.0972%" height="15" fill="rgb(241,158,50)" fg:x="49480" fg:w="70"/><text x="68.9274%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::GetImpl (4,224 samples, 5.86%)</title><rect x="62.9200%" y="277" width="5.8628%" height="15" fill="rgb(213,121,41)" fg:x="45332" fg:w="4224"/><text x="63.1700%" y="287.50">httpmq-..</text></g><g><title>httpmq-rs`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (9 samples, 0.01%)</title><rect x="68.7898%" y="277" width="0.0125%" height="15" fill="rgb(240,92,3)" fg:x="49561" fg:w="9"/><text x="69.0398%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (14 samples, 0.02%)</title><rect x="68.8120%" y="277" width="0.0194%" height="15" fill="rgb(205,123,3)" fg:x="49577" fg:w="14"/><text x="69.0620%" y="287.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (10 samples, 0.01%)</title><rect x="68.8315%" y="277" width="0.0139%" height="15" fill="rgb(205,97,47)" fg:x="49591" fg:w="10"/><text x="69.0815%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (4,332 samples, 6.01%)</title><rect x="62.8437%" y="293" width="6.0127%" height="15" fill="rgb(247,152,14)" fg:x="45277" fg:w="4332"/><text x="63.0937%" y="303.50">httpmq-r..</text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.01%)</title><rect x="68.8453%" y="277" width="0.0111%" height="15" fill="rgb(248,195,53)" fg:x="49601" fg:w="8"/><text x="69.0953%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::Get (4,335 samples, 6.02%)</title><rect x="62.8437%" y="309" width="6.0169%" height="15" fill="rgb(226,201,16)" fg:x="45277" fg:w="4335"/><text x="63.0937%" y="319.50">httpmq-r..</text></g><g><title>httpmq-rs`rocksdb_get_pinned (4,461 samples, 6.19%)</title><rect x="62.7576%" y="325" width="6.1918%" height="15" fill="rgb(205,98,0)" fg:x="45215" fg:w="4461"/><text x="63.0076%" y="335.50">httpmq-r..</text></g><g><title>libc++abi.dylib`operator new(unsigned long) (64 samples, 0.09%)</title><rect x="68.8606%" y="309" width="0.0888%" height="15" fill="rgb(214,191,48)" fg:x="49612" fg:w="64"/><text x="69.1106%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (59 samples, 0.08%)</title><rect x="68.8675%" y="293" width="0.0819%" height="15" fill="rgb(237,112,39)" fg:x="49617" fg:w="59"/><text x="69.1175%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (50 samples, 0.07%)</title><rect x="68.8800%" y="277" width="0.0694%" height="15" fill="rgb(247,203,27)" fg:x="49626" fg:w="50"/><text x="69.1300%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (48 samples, 0.07%)</title><rect x="68.8828%" y="261" width="0.0666%" height="15" fill="rgb(235,124,28)" fg:x="49628" fg:w="48"/><text x="69.1328%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.02%)</title><rect x="68.9272%" y="245" width="0.0222%" height="15" fill="rgb(208,207,46)" fg:x="49660" fg:w="16"/><text x="69.1772%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::LRU_Insert (8 samples, 0.01%)</title><rect x="68.9800%" y="277" width="0.0111%" height="15" fill="rgb(234,176,4)" fg:x="49698" fg:w="8"/><text x="69.2300%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (19 samples, 0.03%)</title><rect x="68.9911%" y="261" width="0.0264%" height="15" fill="rgb(230,133,28)" fg:x="49706" fg:w="19"/><text x="69.2411%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (18 samples, 0.02%)</title><rect x="68.9925%" y="245" width="0.0250%" height="15" fill="rgb(211,137,40)" fg:x="49707" fg:w="18"/><text x="69.2425%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Lock (42 samples, 0.06%)</title><rect x="68.9911%" y="277" width="0.0583%" height="15" fill="rgb(254,35,13)" fg:x="49706" fg:w="42"/><text x="69.2411%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (23 samples, 0.03%)</title><rect x="69.0174%" y="261" width="0.0319%" height="15" fill="rgb(225,49,51)" fg:x="49725" fg:w="23"/><text x="69.2674%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Unlock (17 samples, 0.02%)</title><rect x="69.0494%" y="277" width="0.0236%" height="15" fill="rgb(251,10,15)" fg:x="49748" fg:w="17"/><text x="69.2994%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (11 samples, 0.02%)</title><rect x="69.0577%" y="261" width="0.0153%" height="15" fill="rgb(228,207,15)" fg:x="49754" fg:w="11"/><text x="69.3077%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (9 samples, 0.01%)</title><rect x="69.0744%" y="277" width="0.0125%" height="15" fill="rgb(241,99,19)" fg:x="49766" fg:w="9"/><text x="69.3244%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Release (80 samples, 0.11%)</title><rect x="68.9786%" y="293" width="0.1110%" height="15" fill="rgb(207,104,49)" fg:x="49697" fg:w="80"/><text x="69.2286%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCache::GetHash (8 samples, 0.01%)</title><rect x="69.1035%" y="277" width="0.0111%" height="15" fill="rgb(234,99,18)" fg:x="49787" fg:w="8"/><text x="69.3535%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Release (19 samples, 0.03%)</title><rect x="69.0896%" y="293" width="0.0264%" height="15" fill="rgb(213,191,49)" fg:x="49777" fg:w="19"/><text x="69.3396%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::~Cleanable (118 samples, 0.16%)</title><rect x="68.9536%" y="309" width="0.1638%" height="15" fill="rgb(210,226,19)" fg:x="49679" fg:w="118"/><text x="69.2036%" y="319.50"></text></g><g><title>httpmq-rs`rocksdb_pinnableslice_destroy (126 samples, 0.17%)</title><rect x="68.9494%" y="325" width="0.1749%" height="15" fill="rgb(229,97,18)" fg:x="49676" fg:w="126"/><text x="69.1994%" y="335.50"></text></g><g><title>httpmq-rs`rocksdb_readoptions_create (11 samples, 0.02%)</title><rect x="69.1257%" y="325" width="0.0153%" height="15" fill="rgb(211,167,15)" fg:x="49803" fg:w="11"/><text x="69.3757%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (95 samples, 0.13%)</title><rect x="69.1757%" y="293" width="0.1319%" height="15" fill="rgb(210,169,34)" fg:x="49839" fg:w="95"/><text x="69.4257%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (43 samples, 0.06%)</title><rect x="69.2479%" y="277" width="0.0597%" height="15" fill="rgb(241,121,31)" fg:x="49891" fg:w="43"/><text x="69.4979%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.01%)</title><rect x="69.2937%" y="261" width="0.0139%" height="15" fill="rgb(232,40,11)" fg:x="49924" fg:w="10"/><text x="69.5437%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (110 samples, 0.15%)</title><rect x="69.1562%" y="325" width="0.1527%" height="15" fill="rgb(205,86,26)" fg:x="49825" fg:w="110"/><text x="69.4062%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (100 samples, 0.14%)</title><rect x="69.1701%" y="309" width="0.1388%" height="15" fill="rgb(231,126,28)" fg:x="49835" fg:w="100"/><text x="69.4201%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.01%)</title><rect x="69.3089%" y="325" width="0.0111%" height="15" fill="rgb(219,221,18)" fg:x="49935" fg:w="8"/><text x="69.5589%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (27 samples, 0.04%)</title><rect x="69.3492%" y="309" width="0.0375%" height="15" fill="rgb(211,40,0)" fg:x="49964" fg:w="27"/><text x="69.5992%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (25 samples, 0.03%)</title><rect x="69.3520%" y="293" width="0.0347%" height="15" fill="rgb(239,85,43)" fg:x="49966" fg:w="25"/><text x="69.6020%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (50 samples, 0.07%)</title><rect x="69.3200%" y="325" width="0.0694%" height="15" fill="rgb(231,55,21)" fg:x="49943" fg:w="50"/><text x="69.5700%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (39 samples, 0.05%)</title><rect x="69.5504%" y="293" width="0.0541%" height="15" fill="rgb(225,184,43)" fg:x="50109" fg:w="39"/><text x="69.8004%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (108 samples, 0.15%)</title><rect x="69.4672%" y="309" width="0.1499%" height="15" fill="rgb(251,158,41)" fg:x="50049" fg:w="108"/><text x="69.7172%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (9 samples, 0.01%)</title><rect x="69.6046%" y="293" width="0.0125%" height="15" fill="rgb(234,159,37)" fg:x="50148" fg:w="9"/><text x="69.8546%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (165 samples, 0.23%)</title><rect x="69.3894%" y="325" width="0.2290%" height="15" fill="rgb(216,204,22)" fg:x="49993" fg:w="165"/><text x="69.6394%" y="335.50"></text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::get (5,220 samples, 7.25%)</title><rect x="62.4398%" y="341" width="7.2453%" height="15" fill="rgb(214,17,3)" fg:x="44986" fg:w="5220"/><text x="62.6898%" y="351.50">httpmq-rs`..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (46 samples, 0.06%)</title><rect x="69.6212%" y="325" width="0.0638%" height="15" fill="rgb(212,111,17)" fg:x="50160" fg:w="46"/><text x="69.8712%" y="335.50"></text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::put (11 samples, 0.02%)</title><rect x="69.6851%" y="341" width="0.0153%" height="15" fill="rgb(221,157,24)" fg:x="50206" fg:w="11"/><text x="69.9351%" y="351.50"></text></g><g><title>httpmq-rs`rocksdb::db_pinnable_slice::DBPinnableSlice::from_c (8 samples, 0.01%)</title><rect x="69.7003%" y="341" width="0.0111%" height="15" fill="rgb(252,16,13)" fg:x="50217" fg:w="8"/><text x="69.9503%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (11 samples, 0.02%)</title><rect x="69.7392%" y="341" width="0.0153%" height="15" fill="rgb(221,62,2)" fg:x="50245" fg:w="11"/><text x="69.9892%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (46 samples, 0.06%)</title><rect x="69.9474%" y="293" width="0.0638%" height="15" fill="rgb(247,87,22)" fg:x="50395" fg:w="46"/><text x="70.1974%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (185 samples, 0.26%)</title><rect x="69.7559%" y="341" width="0.2568%" height="15" fill="rgb(215,73,9)" fg:x="50257" fg:w="185"/><text x="70.0059%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (159 samples, 0.22%)</title><rect x="69.7919%" y="325" width="0.2207%" height="15" fill="rgb(207,175,33)" fg:x="50283" fg:w="159"/><text x="70.0419%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (154 samples, 0.21%)</title><rect x="69.7989%" y="309" width="0.2137%" height="15" fill="rgb(243,129,54)" fg:x="50288" fg:w="154"/><text x="70.0489%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (8 samples, 0.01%)</title><rect x="70.0126%" y="341" width="0.0111%" height="15" fill="rgb(227,119,45)" fg:x="50442" fg:w="8"/><text x="70.2626%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (75 samples, 0.10%)</title><rect x="70.1015%" y="325" width="0.1041%" height="15" fill="rgb(205,109,36)" fg:x="50506" fg:w="75"/><text x="70.3515%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (70 samples, 0.10%)</title><rect x="70.1084%" y="309" width="0.0972%" height="15" fill="rgb(205,6,39)" fg:x="50511" fg:w="70"/><text x="70.3584%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (134 samples, 0.19%)</title><rect x="70.0279%" y="341" width="0.1860%" height="15" fill="rgb(221,32,16)" fg:x="50453" fg:w="134"/><text x="70.2779%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (12 samples, 0.02%)</title><rect x="70.3680%" y="325" width="0.0167%" height="15" fill="rgb(228,144,50)" fg:x="50698" fg:w="12"/><text x="70.6180%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (63 samples, 0.09%)</title><rect x="70.5220%" y="309" width="0.0874%" height="15" fill="rgb(229,201,53)" fg:x="50809" fg:w="63"/><text x="70.7720%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (190 samples, 0.26%)</title><rect x="70.3902%" y="325" width="0.2637%" height="15" fill="rgb(249,153,27)" fg:x="50714" fg:w="190"/><text x="70.6402%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (32 samples, 0.04%)</title><rect x="70.6095%" y="309" width="0.0444%" height="15" fill="rgb(227,106,25)" fg:x="50872" fg:w="32"/><text x="70.8595%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (318 samples, 0.44%)</title><rect x="70.2139%" y="341" width="0.4414%" height="15" fill="rgb(230,65,29)" fg:x="50587" fg:w="318"/><text x="70.4639%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc (23 samples, 0.03%)</title><rect x="70.6553%" y="341" width="0.0319%" height="15" fill="rgb(221,57,46)" fg:x="50905" fg:w="23"/><text x="70.9053%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (64 samples, 0.09%)</title><rect x="70.7094%" y="341" width="0.0888%" height="15" fill="rgb(229,161,17)" fg:x="50944" fg:w="64"/><text x="70.9594%" y="351.50"></text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39,759 samples, 55.18%)</title><rect x="15.6162%" y="357" width="55.1848%" height="15" fill="rgb(222,213,11)" fg:x="11251" fg:w="39759"/><text x="15.8662%" y="367.50">httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>httpmq-rs`__rdl_dealloc (9 samples, 0.01%)</title><rect x="70.8079%" y="357" width="0.0125%" height="15" fill="rgb(235,35,13)" fg:x="51015" fg:w="9"/><text x="71.0579%" y="367.50"></text></g><g><title>httpmq-rs`core::fmt::num::imp::_&lt;impl core::fmt::Display for i32&gt;::fmt (9 samples, 0.01%)</title><rect x="70.8343%" y="357" width="0.0125%" height="15" fill="rgb(233,158,34)" fg:x="51034" fg:w="9"/><text x="71.0843%" y="367.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum_core::extract::RequestParts&lt;hyper::body::body::Body&gt;&gt; (20 samples, 0.03%)</title><rect x="70.8468%" y="357" width="0.0278%" height="15" fill="rgb(215,151,48)" fg:x="51043" fg:w="20"/><text x="71.0968%" y="367.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;axum::extract::query::Query&lt;httpmq_rs::service::KVSet&gt; as axum_core::extract::FromRequest&lt;hyper::body::body::Body&gt;&gt;::from_request::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="70.8746%" y="357" width="0.0250%" height="15" fill="rgb(229,84,14)" fg:x="51063" fg:w="18"/><text x="71.1246%" y="367.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;httpmq_rs::service::process as axum::handler::Handler&lt;(axum::extract::query::Query&lt;httpmq_rs::service::KVSet&gt;,axum::extract::extension::Extension&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;)&gt;&gt;::call::{{closure}}&gt;&gt; (17 samples, 0.02%)</title><rect x="70.8996%" y="357" width="0.0236%" height="15" fill="rgb(229,68,14)" fg:x="51081" fg:w="17"/><text x="71.1496%" y="367.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;httpmq_rs::service::process::{{closure}}&gt;&gt; (15 samples, 0.02%)</title><rect x="70.9231%" y="357" width="0.0208%" height="15" fill="rgb(243,106,26)" fg:x="51098" fg:w="15"/><text x="71.1731%" y="367.50"></text></g><g><title>httpmq-rs`core::result::Result::Ok (8 samples, 0.01%)</title><rect x="70.9440%" y="357" width="0.0111%" height="15" fill="rgb(206,45,38)" fg:x="51113" fg:w="8"/><text x="71.1940%" y="367.50"></text></g><g><title>httpmq-rs`core::str::converts::from_utf8 (14 samples, 0.02%)</title><rect x="70.9551%" y="357" width="0.0194%" height="15" fill="rgb(226,6,15)" fg:x="51121" fg:w="14"/><text x="71.2051%" y="367.50"></text></g><g><title>httpmq-rs`httpmq_rs::service::process (13 samples, 0.02%)</title><rect x="70.9745%" y="357" width="0.0180%" height="15" fill="rgb(232,22,54)" fg:x="51135" fg:w="13"/><text x="71.2245%" y="367.50"></text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::get (9 samples, 0.01%)</title><rect x="70.9925%" y="357" width="0.0125%" height="15" fill="rgb(229,222,32)" fg:x="51148" fg:w="9"/><text x="71.2425%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (38 samples, 0.05%)</title><rect x="71.0203%" y="357" width="0.0527%" height="15" fill="rgb(228,62,29)" fg:x="51168" fg:w="38"/><text x="71.2703%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.02%)</title><rect x="71.0550%" y="341" width="0.0180%" height="15" fill="rgb(251,103,34)" fg:x="51193" fg:w="13"/><text x="71.3050%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (12 samples, 0.02%)</title><rect x="71.0564%" y="325" width="0.0167%" height="15" fill="rgb(233,12,30)" fg:x="51194" fg:w="12"/><text x="71.3064%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (8 samples, 0.01%)</title><rect x="71.1147%" y="341" width="0.0111%" height="15" fill="rgb(238,52,0)" fg:x="51236" fg:w="8"/><text x="71.3647%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.02%)</title><rect x="71.1674%" y="325" width="0.0153%" height="15" fill="rgb(223,98,5)" fg:x="51274" fg:w="11"/><text x="71.4174%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (53 samples, 0.07%)</title><rect x="71.1258%" y="341" width="0.0736%" height="15" fill="rgb(228,75,37)" fg:x="51244" fg:w="53"/><text x="71.3758%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (12 samples, 0.02%)</title><rect x="71.1827%" y="325" width="0.0167%" height="15" fill="rgb(205,115,49)" fg:x="51285" fg:w="12"/><text x="71.4327%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (92 samples, 0.13%)</title><rect x="71.0730%" y="357" width="0.1277%" height="15" fill="rgb(250,154,43)" fg:x="51206" fg:w="92"/><text x="71.3230%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc (15 samples, 0.02%)</title><rect x="71.2007%" y="357" width="0.0208%" height="15" fill="rgb(226,43,29)" fg:x="51298" fg:w="15"/><text x="71.4507%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (8 samples, 0.01%)</title><rect x="71.2216%" y="357" width="0.0111%" height="15" fill="rgb(249,228,39)" fg:x="51313" fg:w="8"/><text x="71.4716%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.02%)</title><rect x="71.2341%" y="357" width="0.0250%" height="15" fill="rgb(216,79,43)" fg:x="51322" fg:w="18"/><text x="71.4841%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (48 samples, 0.07%)</title><rect x="71.2604%" y="357" width="0.0666%" height="15" fill="rgb(228,95,12)" fg:x="51341" fg:w="48"/><text x="71.5104%" y="367.50"></text></g><g><title>httpmq-rs`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (40,247 samples, 55.86%)</title><rect x="15.4941%" y="373" width="55.8621%" height="15" fill="rgb(249,221,15)" fg:x="11163" fg:w="40247"/><text x="15.7441%" y="383.50">httpmq-rs`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::p..</text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (21 samples, 0.03%)</title><rect x="71.3271%" y="357" width="0.0291%" height="15" fill="rgb(233,34,13)" fg:x="51389" fg:w="21"/><text x="71.5771%" y="367.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;httpmq_rs::service::process as axum::handler::Handler&lt;(axum::extract::query::Query&lt;httpmq_rs::service::KVSet&gt;,axum::extract::extension::Extension&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;)&gt;&gt;::call::{{closure}}&gt;&gt; (11 samples, 0.02%)</title><rect x="71.3562%" y="373" width="0.0153%" height="15" fill="rgb(214,103,39)" fg:x="51410" fg:w="11"/><text x="71.6062%" y="383.50"></text></g><g><title>httpmq-rs`core::result::Result::Ok (13 samples, 0.02%)</title><rect x="71.3715%" y="373" width="0.0180%" height="15" fill="rgb(251,126,39)" fg:x="51421" fg:w="13"/><text x="71.6215%" y="383.50"></text></g><g><title>httpmq-rs`&lt;axum::handler::future::IntoServiceFuture as core::future::future::Future&gt;::poll (40,319 samples, 55.96%)</title><rect x="15.4358%" y="389" width="55.9621%" height="15" fill="rgb(214,216,36)" fg:x="11121" fg:w="40319"/><text x="15.6858%" y="399.50">httpmq-rs`&lt;axum::handler::future::IntoServiceFuture as core::future::future::Future&gt;::poll</text></g><g><title>httpmq-rs`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (20 samples, 0.03%)</title><rect x="71.3978%" y="389" width="0.0278%" height="15" fill="rgb(220,221,8)" fg:x="51440" fg:w="20"/><text x="71.6478%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (11 samples, 0.02%)</title><rect x="71.5228%" y="325" width="0.0153%" height="15" fill="rgb(240,216,3)" fg:x="51530" fg:w="11"/><text x="71.7728%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (62 samples, 0.09%)</title><rect x="71.5380%" y="325" width="0.0861%" height="15" fill="rgb(232,218,17)" fg:x="51541" fg:w="62"/><text x="71.7880%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (124 samples, 0.17%)</title><rect x="71.4534%" y="341" width="0.1721%" height="15" fill="rgb(229,163,45)" fg:x="51480" fg:w="124"/><text x="71.7034%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (140 samples, 0.19%)</title><rect x="71.4339%" y="373" width="0.1943%" height="15" fill="rgb(231,110,42)" fg:x="51466" fg:w="140"/><text x="71.6839%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (134 samples, 0.19%)</title><rect x="71.4423%" y="357" width="0.1860%" height="15" fill="rgb(208,170,48)" fg:x="51472" fg:w="134"/><text x="71.6923%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.01%)</title><rect x="71.6282%" y="373" width="0.0139%" height="15" fill="rgb(239,116,25)" fg:x="51606" fg:w="10"/><text x="71.8782%" y="383.50"></text></g><g><title>httpmq-rs`&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (177 samples, 0.25%)</title><rect x="71.4256%" y="389" width="0.2457%" height="15" fill="rgb(219,200,50)" fg:x="51460" fg:w="177"/><text x="71.6756%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.03%)</title><rect x="71.6421%" y="373" width="0.0291%" height="15" fill="rgb(245,200,0)" fg:x="51616" fg:w="21"/><text x="71.8921%" y="383.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::handler::future::IntoServiceFuture&gt; (28 samples, 0.04%)</title><rect x="71.6921%" y="389" width="0.0389%" height="15" fill="rgb(245,119,33)" fg:x="51652" fg:w="28"/><text x="71.9421%" y="399.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone::BoxCloneService&lt;http::request::Request&lt;hyper::body::body::Body&gt;,http::response::Response&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;,core::convert::Infallible&gt;,http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt; (35 samples, 0.05%)</title><rect x="71.7310%" y="389" width="0.0486%" height="15" fill="rgb(231,125,12)" fg:x="51680" fg:w="35"/><text x="71.9810%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.02%)</title><rect x="71.7892%" y="389" width="0.0167%" height="15" fill="rgb(216,96,41)" fg:x="51722" fg:w="12"/><text x="72.0392%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (30 samples, 0.04%)</title><rect x="71.8462%" y="373" width="0.0416%" height="15" fill="rgb(248,43,45)" fg:x="51763" fg:w="30"/><text x="72.0962%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.02%)</title><rect x="71.8642%" y="357" width="0.0236%" height="15" fill="rgb(217,222,7)" fg:x="51776" fg:w="17"/><text x="72.1142%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (61 samples, 0.08%)</title><rect x="71.8059%" y="389" width="0.0847%" height="15" fill="rgb(233,28,6)" fg:x="51734" fg:w="61"/><text x="72.0559%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.02%)</title><rect x="71.8989%" y="389" width="0.0236%" height="15" fill="rgb(231,218,15)" fg:x="51801" fg:w="17"/><text x="72.1489%" y="399.50"></text></g><g><title>httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (40,757 samples, 56.57%)</title><rect x="15.3539%" y="405" width="56.5700%" height="15" fill="rgb(226,171,48)" fg:x="11062" fg:w="40757"/><text x="15.6039%" y="415.50">httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll</text></g><g><title>httpmq-rs`&lt;tower::timeout::future::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (40,870 samples, 56.73%)</title><rect x="15.2206%" y="421" width="56.7269%" height="15" fill="rgb(235,201,9)" fg:x="10966" fg:w="40870"/><text x="15.4706%" y="431.50">httpmq-rs`&lt;tower::timeout::future::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;&gt; (14 samples, 0.02%)</title><rect x="71.9530%" y="421" width="0.0194%" height="15" fill="rgb(217,80,15)" fg:x="51840" fg:w="14"/><text x="72.2030%" y="431.50"></text></g><g><title>httpmq-rs`&lt;tokio::sync::semaphore::OwnedSemaphorePermit as core::ops::drop::Drop&gt;::drop (25 samples, 0.03%)</title><rect x="72.0072%" y="405" width="0.0347%" height="15" fill="rgb(219,152,8)" fg:x="51879" fg:w="25"/><text x="72.2572%" y="415.50"></text></g><g><title>httpmq-rs`&lt;tokio::time::driver::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (41 samples, 0.06%)</title><rect x="72.0419%" y="405" width="0.0569%" height="15" fill="rgb(243,107,38)" fg:x="51904" fg:w="41"/><text x="72.2919%" y="415.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;&amp;core::option::Option&lt;core::ptr::non_null::NonNull&lt;tokio::runtime::task::core::Header&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="72.0988%" y="405" width="0.0111%" height="15" fill="rgb(231,17,5)" fg:x="51945" fg:w="8"/><text x="72.3488%" y="415.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;&gt; (13 samples, 0.02%)</title><rect x="72.1099%" y="405" width="0.0180%" height="15" fill="rgb(209,25,54)" fg:x="51953" fg:w="13"/><text x="72.3599%" y="415.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;,http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt; (155 samples, 0.22%)</title><rect x="71.9725%" y="421" width="0.2151%" height="15" fill="rgb(219,0,2)" fg:x="51854" fg:w="155"/><text x="72.2225%" y="431.50"></text></g><g><title>httpmq-rs`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (42 samples, 0.06%)</title><rect x="72.1293%" y="405" width="0.0583%" height="15" fill="rgb(246,9,5)" fg:x="51967" fg:w="42"/><text x="72.3793%" y="415.50"></text></g><g><title>httpmq-rs`tokio::sync::semaphore::Semaphore::try_acquire_owned (11 samples, 0.02%)</title><rect x="72.1932%" y="421" width="0.0153%" height="15" fill="rgb(226,159,4)" fg:x="52013" fg:w="11"/><text x="72.4432%" y="431.50"></text></g><g><title>httpmq-rs`tokio::time::driver::sleep::sleep (15 samples, 0.02%)</title><rect x="72.2084%" y="421" width="0.0208%" height="15" fill="rgb(219,175,34)" fg:x="52024" fg:w="15"/><text x="72.4584%" y="431.50"></text></g><g><title>httpmq-rs`tokio_util::sync::poll_semaphore::PollSemaphore::poll_acquire (28 samples, 0.04%)</title><rect x="72.2292%" y="421" width="0.0389%" height="15" fill="rgb(236,10,46)" fg:x="52039" fg:w="28"/><text x="72.4792%" y="431.50"></text></g><g><title>httpmq-rs`tokio::sync::semaphore::Semaphore::try_acquire_owned (19 samples, 0.03%)</title><rect x="72.2417%" y="405" width="0.0264%" height="15" fill="rgb(240,211,16)" fg:x="52048" fg:w="19"/><text x="72.4917%" y="415.50"></text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41,680 samples, 57.85%)</title><rect x="14.5405%" y="437" width="57.8511%" height="15" fill="rgb(205,3,43)" fg:x="10476" fg:w="41680"/><text x="14.7905%" y="447.50">httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (89 samples, 0.12%)</title><rect x="72.2681%" y="421" width="0.1235%" height="15" fill="rgb(245,7,22)" fg:x="52067" fg:w="89"/><text x="72.5181%" y="431.50"></text></g><g><title>httpmq-rs`&lt;tower::timeout::Timeout&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (13 samples, 0.02%)</title><rect x="72.3916%" y="437" width="0.0180%" height="15" fill="rgb(239,132,32)" fg:x="52156" fg:w="13"/><text x="72.6416%" y="447.50"></text></g><g><title>httpmq-rs`&lt;tower::timeout::future::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (20 samples, 0.03%)</title><rect x="72.4097%" y="437" width="0.0278%" height="15" fill="rgb(228,202,34)" fg:x="52169" fg:w="20"/><text x="72.6597%" y="447.50"></text></g><g><title>httpmq-rs`tokio_util::sync::poll_semaphore::PollSemaphore::poll_acquire (10 samples, 0.01%)</title><rect x="72.4499%" y="437" width="0.0139%" height="15" fill="rgb(254,200,22)" fg:x="52198" fg:w="10"/><text x="72.6999%" y="447.50"></text></g><g><title>httpmq-rs`&lt;axum::error_handling::future::HandleErrorFuture as core::future::future::Future&gt;::poll (41,793 samples, 58.01%)</title><rect x="14.5183%" y="453" width="58.0080%" height="15" fill="rgb(219,10,39)" fg:x="10460" fg:w="41793"/><text x="14.7683%" y="463.50">httpmq-rs`&lt;axum::error_handling::future::HandleErrorFuture as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (45 samples, 0.06%)</title><rect x="72.4638%" y="437" width="0.0625%" height="15" fill="rgb(226,210,39)" fg:x="52208" fg:w="45"/><text x="72.7138%" y="447.50"></text></g><g><title>httpmq-rs`&lt;tower_http::map_response_body::ResponseFuture&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (41,862 samples, 58.10%)</title><rect x="14.4600%" y="469" width="58.1037%" height="15" fill="rgb(208,219,16)" fg:x="10418" fg:w="41862"/><text x="14.7100%" y="479.50">httpmq-rs`&lt;tower_http::map_response_body::ResponseFuture&lt;Fut,F&gt; as core::future::future::Future&gt;..</text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.04%)</title><rect x="72.5263%" y="453" width="0.0375%" height="15" fill="rgb(216,158,51)" fg:x="52253" fg:w="27"/><text x="72.7763%" y="463.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place$LT$tower..util..map_future..MapFuture$LT$tower_http..map_response_body..MapResponseBody$LT$tower_http..map_response_body..MapResponseBody$LT$axum..error_handling..HandleError$LT$tower..load_shed..LoadShed$LT$tower..limit..concurrency..service..ConcurrencyLimit$LT$tower..timeout..Timeout$LT$tower_http..add_extension..AddExtension$LT$axum..routing..route..Route$C$alloc..sync..Arc$LT$std..sync..rwlock..RwLock$LT$httpmq_rs..service..State$GT$$GT$$GT$$GT$$GT$$GT$$C$httpmq_rs..service..handle_error$C$$LP$$RP$$GT$$C$axum_core..body..boxed$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_core..error..Error$GT$$GT$$GT$$C$axum_core..body..boxed$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_core..error..Error$GT$$GT$$GT$$C$tower..util..boxed_clone..BoxCloneService$LT$http..request..Request$LT$hyper..body..body..Body$GT$$C$http..response..Response$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_corn (12 samples, 0.02%)</title><rect x="72.5665%" y="469" width="0.0167%" height="15" fill="rgb(233,14,44)" fg:x="52282" fg:w="12"/><text x="72.8165%" y="479.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::error_handling::HandleError&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;,httpmq_rs::service::handle_error,()&gt;&gt; (14 samples, 0.02%)</title><rect x="72.6151%" y="453" width="0.0194%" height="15" fill="rgb(237,97,39)" fg:x="52317" fg:w="14"/><text x="72.8651%" y="463.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;axum::error_handling::HandleError&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;,httpmq_rs::service::handle_error,()&gt; as tower_service::Service&lt;http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt;::call::{{closure}}&gt;&gt; (20 samples, 0.03%)</title><rect x="72.6345%" y="453" width="0.0278%" height="15" fill="rgb(218,198,43)" fg:x="52331" fg:w="20"/><text x="72.8845%" y="463.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower_http::map_response_body::ResponseFuture&lt;tower_http::map_response_body::ResponseFuture&lt;axum::error_handling::future::HandleErrorFuture,axum_core::body::boxed&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;&gt;,axum_core::body::boxed&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;&gt;&gt; (11 samples, 0.02%)</title><rect x="72.6623%" y="453" width="0.0153%" height="15" fill="rgb(231,104,20)" fg:x="52351" fg:w="11"/><text x="72.9123%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_size (45 samples, 0.06%)</title><rect x="72.7012%" y="437" width="0.0625%" height="15" fill="rgb(254,36,13)" fg:x="52379" fg:w="45"/><text x="72.9512%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (29 samples, 0.04%)</title><rect x="72.7636%" y="437" width="0.0403%" height="15" fill="rgb(248,14,50)" fg:x="52424" fg:w="29"/><text x="73.0136%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (27 samples, 0.04%)</title><rect x="72.7664%" y="421" width="0.0375%" height="15" fill="rgb(217,107,29)" fg:x="52426" fg:w="27"/><text x="73.0164%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (90 samples, 0.12%)</title><rect x="72.6831%" y="453" width="0.1249%" height="15" fill="rgb(251,169,33)" fg:x="52366" fg:w="90"/><text x="72.9331%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (14 samples, 0.02%)</title><rect x="72.8635%" y="437" width="0.0194%" height="15" fill="rgb(217,108,32)" fg:x="52496" fg:w="14"/><text x="73.1135%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_small (56 samples, 0.08%)</title><rect x="72.8080%" y="453" width="0.0777%" height="15" fill="rgb(219,66,42)" fg:x="52456" fg:w="56"/><text x="73.0580%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (16 samples, 0.02%)</title><rect x="72.8858%" y="453" width="0.0222%" height="15" fill="rgb(206,180,7)" fg:x="52512" fg:w="16"/><text x="73.1358%" y="463.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone::BoxCloneService&lt;http::request::Request&lt;hyper::body::body::Body&gt;,http::response::Response&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;,core::convert::Infallible&gt;,http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt; (237 samples, 0.33%)</title><rect x="72.5846%" y="469" width="0.3290%" height="15" fill="rgb(208,226,31)" fg:x="52295" fg:w="237"/><text x="72.8346%" y="479.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower_http::map_response_body::ResponseFuture&lt;tower_http::map_response_body::ResponseFuture&lt;axum::error_handling::future::HandleErrorFuture,axum_core::body::boxed&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;&gt;,axum_core::body::boxed&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;&gt;&gt; (25 samples, 0.03%)</title><rect x="72.9135%" y="469" width="0.0347%" height="15" fill="rgb(218,26,49)" fg:x="52532" fg:w="25"/><text x="73.1635%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.04%)</title><rect x="72.9593%" y="469" width="0.0416%" height="15" fill="rgb(233,197,48)" fg:x="52565" fg:w="30"/><text x="73.2093%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.02%)</title><rect x="72.9829%" y="453" width="0.0180%" height="15" fill="rgb(252,181,51)" fg:x="52582" fg:w="13"/><text x="73.2329%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (13 samples, 0.02%)</title><rect x="72.9829%" y="437" width="0.0180%" height="15" fill="rgb(253,90,19)" fg:x="52582" fg:w="13"/><text x="73.2329%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.02%)</title><rect x="73.0620%" y="437" width="0.0153%" height="15" fill="rgb(215,171,30)" fg:x="52639" fg:w="11"/><text x="73.3120%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (32 samples, 0.04%)</title><rect x="73.0343%" y="453" width="0.0444%" height="15" fill="rgb(214,222,9)" fg:x="52619" fg:w="32"/><text x="73.2843%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (57 samples, 0.08%)</title><rect x="73.0010%" y="469" width="0.0791%" height="15" fill="rgb(223,3,22)" fg:x="52595" fg:w="57"/><text x="73.2510%" y="479.50"></text></g><g><title>httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (42,726 samples, 59.30%)</title><rect x="13.8437%" y="485" width="59.3030%" height="15" fill="rgb(225,196,46)" fg:x="9974" fg:w="42726"/><text x="14.0937%" y="495.50">httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (40 samples, 0.06%)</title><rect x="73.0912%" y="469" width="0.0555%" height="15" fill="rgb(209,110,37)" fg:x="52660" fg:w="40"/><text x="73.3412%" y="479.50"></text></g><g><title>httpmq-rs`&lt;tower_http::map_response_body::ResponseFuture&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (16 samples, 0.02%)</title><rect x="73.1467%" y="485" width="0.0222%" height="15" fill="rgb(249,89,12)" fg:x="52700" fg:w="16"/><text x="73.3967%" y="495.50"></text></g><g><title>httpmq-rs`&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (42,813 samples, 59.42%)</title><rect x="13.7743%" y="501" width="59.4237%" height="15" fill="rgb(226,27,33)" fg:x="9924" fg:w="42813"/><text x="14.0243%" y="511.50">httpmq-rs`&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="73.1828%" y="485" width="0.0153%" height="15" fill="rgb(213,82,22)" fg:x="52726" fg:w="11"/><text x="73.4328%" y="495.50"></text></g><g><title>httpmq-rs`&lt;T as tower::util::boxed_clone::CloneService&lt;R&gt;&gt;::clone_box (33 samples, 0.05%)</title><rect x="73.5117%" y="469" width="0.0458%" height="15" fill="rgb(248,140,0)" fg:x="52963" fg:w="33"/><text x="73.7617%" y="479.50"></text></g><g><title>httpmq-rs`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.03%)</title><rect x="73.5575%" y="469" width="0.0319%" height="15" fill="rgb(228,106,3)" fg:x="52996" fg:w="23"/><text x="73.8075%" y="479.50"></text></g><g><title>httpmq-rs`&lt;tokio_util::sync::poll_semaphore::PollSemaphore as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="73.7741%" y="437" width="0.0278%" height="15" fill="rgb(209,23,37)" fg:x="53152" fg:w="20"/><text x="74.0241%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (12 samples, 0.02%)</title><rect x="73.9045%" y="389" width="0.0167%" height="15" fill="rgb(241,93,50)" fg:x="53246" fg:w="12"/><text x="74.1545%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (44 samples, 0.06%)</title><rect x="73.9212%" y="389" width="0.0611%" height="15" fill="rgb(253,46,43)" fg:x="53258" fg:w="44"/><text x="74.1712%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.02%)</title><rect x="73.9628%" y="373" width="0.0194%" height="15" fill="rgb(226,206,43)" fg:x="53288" fg:w="14"/><text x="74.2128%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (118 samples, 0.16%)</title><rect x="73.8199%" y="405" width="0.1638%" height="15" fill="rgb(217,54,7)" fg:x="53185" fg:w="118"/><text x="74.0699%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (127 samples, 0.18%)</title><rect x="73.8102%" y="421" width="0.1763%" height="15" fill="rgb(223,5,52)" fg:x="53178" fg:w="127"/><text x="74.0602%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (135 samples, 0.19%)</title><rect x="73.8018%" y="437" width="0.1874%" height="15" fill="rgb(206,52,46)" fg:x="53172" fg:w="135"/><text x="74.0518%" y="447.50"></text></g><g><title>httpmq-rs`&lt;T as tower::util::boxed_clone::CloneService&lt;R&gt;&gt;::clone_box (265 samples, 0.37%)</title><rect x="73.6283%" y="453" width="0.3678%" height="15" fill="rgb(253,136,11)" fg:x="53047" fg:w="265"/><text x="73.8783%" y="463.50"></text></g><g><title>httpmq-rs`&lt;axum::routing::method_routing::MethodRouter&lt;B,E&gt; as core::clone::Clone&gt;::clone (294 samples, 0.41%)</title><rect x="73.5895%" y="469" width="0.4081%" height="15" fill="rgb(208,106,33)" fg:x="53019" fg:w="294"/><text x="73.8395%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (28 samples, 0.04%)</title><rect x="74.0947%" y="389" width="0.0389%" height="15" fill="rgb(206,54,4)" fg:x="53383" fg:w="28"/><text x="74.3447%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.01%)</title><rect x="74.1197%" y="373" width="0.0139%" height="15" fill="rgb(213,3,15)" fg:x="53401" fg:w="10"/><text x="74.3697%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (59 samples, 0.08%)</title><rect x="74.0530%" y="405" width="0.0819%" height="15" fill="rgb(252,211,39)" fg:x="53353" fg:w="59"/><text x="74.3030%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (62 samples, 0.09%)</title><rect x="74.0503%" y="437" width="0.0861%" height="15" fill="rgb(223,6,36)" fg:x="53351" fg:w="62"/><text x="74.3003%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (61 samples, 0.08%)</title><rect x="74.0517%" y="421" width="0.0847%" height="15" fill="rgb(252,169,45)" fg:x="53352" fg:w="61"/><text x="74.3017%" y="431.50"></text></g><g><title>httpmq-rs`&lt;T as tower::util::boxed_clone::CloneService&lt;R&gt;&gt;::clone_box (84 samples, 0.12%)</title><rect x="74.0211%" y="453" width="0.1166%" height="15" fill="rgb(212,48,26)" fg:x="53330" fg:w="84"/><text x="74.2711%" y="463.50"></text></g><g><title>httpmq-rs`&lt;axum::routing::method_routing::MethodRouter&lt;B,E&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (113 samples, 0.16%)</title><rect x="73.9975%" y="469" width="0.1568%" height="15" fill="rgb(251,102,48)" fg:x="53313" fg:w="113"/><text x="74.2475%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="74.1433%" y="453" width="0.0111%" height="15" fill="rgb(243,208,16)" fg:x="53418" fg:w="8"/><text x="74.3933%" y="463.50"></text></g><g><title>httpmq-rs`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.01%)</title><rect x="74.1683%" y="469" width="0.0139%" height="15" fill="rgb(219,96,24)" fg:x="53436" fg:w="10"/><text x="74.4183%" y="479.50"></text></g><g><title>httpmq-rs`__rdl_alloc (8 samples, 0.01%)</title><rect x="74.1821%" y="469" width="0.0111%" height="15" fill="rgb(219,33,29)" fg:x="53446" fg:w="8"/><text x="74.4321%" y="479.50"></text></g><g><title>httpmq-rs`alloc::vec::source_iter_marker::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (12 samples, 0.02%)</title><rect x="74.2057%" y="469" width="0.0167%" height="15" fill="rgb(223,176,5)" fg:x="53463" fg:w="12"/><text x="74.4557%" y="479.50"></text></g><g><title>httpmq-rs`matchit::params::Params::new (15 samples, 0.02%)</title><rect x="74.2238%" y="453" width="0.0208%" height="15" fill="rgb(228,140,14)" fg:x="53476" fg:w="15"/><text x="74.4738%" y="463.50"></text></g><g><title>httpmq-rs`matchit::tree::Node&lt;T&gt;::at (76 samples, 0.11%)</title><rect x="74.2446%" y="453" width="0.1055%" height="15" fill="rgb(217,179,31)" fg:x="53491" fg:w="76"/><text x="74.4946%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (23 samples, 0.03%)</title><rect x="74.3182%" y="437" width="0.0319%" height="15" fill="rgb(230,9,30)" fg:x="53544" fg:w="23"/><text x="74.5682%" y="447.50"></text></g><g><title>httpmq-rs`axum::routing::Node::at (96 samples, 0.13%)</title><rect x="74.2224%" y="469" width="0.1332%" height="15" fill="rgb(230,136,20)" fg:x="53475" fg:w="96"/><text x="74.4724%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (64 samples, 0.09%)</title><rect x="74.3778%" y="437" width="0.0888%" height="15" fill="rgb(215,210,22)" fg:x="53587" fg:w="64"/><text x="74.6278%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (53 samples, 0.07%)</title><rect x="74.3931%" y="421" width="0.0736%" height="15" fill="rgb(218,43,5)" fg:x="53598" fg:w="53"/><text x="74.6431%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (49 samples, 0.07%)</title><rect x="74.3987%" y="405" width="0.0680%" height="15" fill="rgb(216,11,5)" fg:x="53602" fg:w="49"/><text x="74.6487%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.01%)</title><rect x="74.4542%" y="389" width="0.0125%" height="15" fill="rgb(209,82,29)" fg:x="53642" fg:w="9"/><text x="74.7042%" y="399.50"></text></g><g><title>httpmq-rs`bytes::bytes::shallow_clone_vec (78 samples, 0.11%)</title><rect x="74.3667%" y="453" width="0.1083%" height="15" fill="rgb(244,115,12)" fg:x="53579" fg:w="78"/><text x="74.6167%" y="463.50"></text></g><g><title>httpmq-rs`bytes::bytes::promotable_even_clone (91 samples, 0.13%)</title><rect x="74.3556%" y="469" width="0.1263%" height="15" fill="rgb(222,82,18)" fg:x="53571" fg:w="91"/><text x="74.6056%" y="479.50"></text></g><g><title>httpmq-rs`bytes::bytes::shallow_clone_vec (20 samples, 0.03%)</title><rect x="74.4819%" y="469" width="0.0278%" height="15" fill="rgb(249,227,8)" fg:x="53662" fg:w="20"/><text x="74.7319%" y="479.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.02%)</title><rect x="74.5291%" y="453" width="0.0194%" height="15" fill="rgb(253,141,45)" fg:x="53696" fg:w="14"/><text x="74.7791%" y="463.50"></text></g><g><title>httpmq-rs`core::iter::adapters::process_results (62 samples, 0.09%)</title><rect x="74.5097%" y="469" width="0.0861%" height="15" fill="rgb(234,184,4)" fg:x="53682" fg:w="62"/><text x="74.7597%" y="479.50"></text></g><g><title>httpmq-rs`alloc::vec::source_iter_marker::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (34 samples, 0.05%)</title><rect x="74.5486%" y="453" width="0.0472%" height="15" fill="rgb(218,194,23)" fg:x="53710" fg:w="34"/><text x="74.7986%" y="463.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.02%)</title><rect x="74.5791%" y="437" width="0.0167%" height="15" fill="rgb(235,66,41)" fg:x="53732" fg:w="12"/><text x="74.8291%" y="447.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place$LT$tower..util..map_future..MapFuture$LT$tower_http..map_response_body..MapResponseBody$LT$tower_http..map_response_body..MapResponseBody$LT$axum..error_handling..HandleError$LT$tower..load_shed..LoadShed$LT$tower..limit..concurrency..service..ConcurrencyLimit$LT$tower..timeout..Timeout$LT$tower_http..add_extension..AddExtension$LT$axum..routing..route..Route$C$alloc..sync..Arc$LT$std..sync..rwlock..RwLock$LT$httpmq_rs..service..State$GT$$GT$$GT$$GT$$GT$$GT$$C$httpmq_rs..service..handle_error$C$$LP$$RP$$GT$$C$axum_core..body..boxed$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_core..error..Error$GT$$GT$$GT$$C$axum_core..body..boxed$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_core..error..Error$GT$$GT$$GT$$C$tower..util..boxed_clone..BoxCloneService$LT$http..request..Request$LT$hyper..body..body..Body$GT$$C$http..response..Response$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_corn (24 samples, 0.03%)</title><rect x="74.5957%" y="469" width="0.0333%" height="15" fill="rgb(245,217,1)" fg:x="53744" fg:w="24"/><text x="74.8457%" y="479.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;&amp;core::option::Option&lt;core::ptr::non_null::NonNull&lt;tokio::runtime::task::core::Header&gt;&gt;&gt; (19 samples, 0.03%)</title><rect x="74.6429%" y="453" width="0.0264%" height="15" fill="rgb(229,91,1)" fg:x="53778" fg:w="19"/><text x="74.8929%" y="463.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::error_handling::HandleError&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;,httpmq_rs::service::handle_error,()&gt;&gt; (23 samples, 0.03%)</title><rect x="74.6693%" y="453" width="0.0319%" height="15" fill="rgb(207,101,30)" fg:x="53797" fg:w="23"/><text x="74.9193%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.02%)</title><rect x="74.7026%" y="453" width="0.0153%" height="15" fill="rgb(223,82,49)" fg:x="53821" fg:w="11"/><text x="74.9526%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (20 samples, 0.03%)</title><rect x="74.7915%" y="421" width="0.0278%" height="15" fill="rgb(218,167,17)" fg:x="53885" fg:w="20"/><text x="75.0415%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (77 samples, 0.11%)</title><rect x="74.7179%" y="453" width="0.1069%" height="15" fill="rgb(208,103,14)" fg:x="53832" fg:w="77"/><text x="74.9679%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (53 samples, 0.07%)</title><rect x="74.7512%" y="437" width="0.0736%" height="15" fill="rgb(238,20,8)" fg:x="53856" fg:w="53"/><text x="75.0012%" y="447.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::routing::method_routing::MethodRouter&gt; (140 samples, 0.19%)</title><rect x="74.6388%" y="469" width="0.1943%" height="15" fill="rgb(218,80,54)" fg:x="53775" fg:w="140"/><text x="74.8888%" y="479.50"></text></g><g><title>httpmq-rs`hashbrown::map::make_hash (49 samples, 0.07%)</title><rect x="74.8331%" y="469" width="0.0680%" height="15" fill="rgb(240,144,17)" fg:x="53915" fg:w="49"/><text x="75.0831%" y="479.50"></text></g><g><title>httpmq-rs`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (18 samples, 0.02%)</title><rect x="74.8761%" y="453" width="0.0250%" height="15" fill="rgb(245,27,50)" fg:x="53946" fg:w="18"/><text x="75.1261%" y="463.50"></text></g><g><title>httpmq-rs`hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 0.02%)</title><rect x="74.9011%" y="469" width="0.0167%" height="15" fill="rgb(251,51,7)" fg:x="53964" fg:w="12"/><text x="75.1511%" y="479.50"></text></g><g><title>httpmq-rs`hashbrown::raw::sse2::Group::static_empty (18 samples, 0.02%)</title><rect x="74.9178%" y="469" width="0.0250%" height="15" fill="rgb(245,217,29)" fg:x="53976" fg:w="18"/><text x="75.1678%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (10 samples, 0.01%)</title><rect x="75.2759%" y="373" width="0.0139%" height="15" fill="rgb(221,176,29)" fg:x="54234" fg:w="10"/><text x="75.5259%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (75 samples, 0.10%)</title><rect x="75.2995%" y="373" width="0.1041%" height="15" fill="rgb(212,180,24)" fg:x="54251" fg:w="75"/><text x="75.5495%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.03%)</title><rect x="75.3730%" y="357" width="0.0305%" height="15" fill="rgb(254,24,2)" fg:x="54304" fg:w="22"/><text x="75.6230%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (157 samples, 0.22%)</title><rect x="75.1870%" y="389" width="0.2179%" height="15" fill="rgb(230,100,2)" fg:x="54170" fg:w="157"/><text x="75.4370%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (175 samples, 0.24%)</title><rect x="75.1634%" y="421" width="0.2429%" height="15" fill="rgb(219,142,25)" fg:x="54153" fg:w="175"/><text x="75.4134%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (163 samples, 0.23%)</title><rect x="75.1801%" y="405" width="0.2262%" height="15" fill="rgb(240,73,43)" fg:x="54165" fg:w="163"/><text x="75.4301%" y="415.50"></text></g><g><title>httpmq-rs`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (254 samples, 0.35%)</title><rect x="75.0885%" y="437" width="0.3525%" height="15" fill="rgb(214,114,15)" fg:x="54099" fg:w="254"/><text x="75.3385%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (17 samples, 0.02%)</title><rect x="75.4174%" y="421" width="0.0236%" height="15" fill="rgb(207,130,4)" fg:x="54336" fg:w="17"/><text x="75.6674%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (23 samples, 0.03%)</title><rect x="75.4702%" y="421" width="0.0319%" height="15" fill="rgb(221,25,40)" fg:x="54374" fg:w="23"/><text x="75.7202%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (21 samples, 0.03%)</title><rect x="75.4730%" y="405" width="0.0291%" height="15" fill="rgb(241,184,7)" fg:x="54376" fg:w="21"/><text x="75.7230%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (52 samples, 0.07%)</title><rect x="75.4424%" y="437" width="0.0722%" height="15" fill="rgb(235,159,4)" fg:x="54354" fg:w="52"/><text x="75.6924%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.01%)</title><rect x="75.5021%" y="421" width="0.0125%" height="15" fill="rgb(214,87,48)" fg:x="54397" fg:w="9"/><text x="75.7521%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (27 samples, 0.04%)</title><rect x="75.5146%" y="437" width="0.0375%" height="15" fill="rgb(246,198,24)" fg:x="54406" fg:w="27"/><text x="75.7646%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.01%)</title><rect x="75.5521%" y="437" width="0.0111%" height="15" fill="rgb(209,66,40)" fg:x="54433" fg:w="8"/><text x="75.8021%" y="447.50"></text></g><g><title>httpmq-rs`hashbrown::raw::RawTable&lt;T,A&gt;::insert (393 samples, 0.55%)</title><rect x="75.0385%" y="453" width="0.5455%" height="15" fill="rgb(233,147,39)" fg:x="54063" fg:w="393"/><text x="75.2885%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (10 samples, 0.01%)</title><rect x="75.5701%" y="437" width="0.0139%" height="15" fill="rgb(231,145,52)" fg:x="54446" fg:w="10"/><text x="75.8201%" y="447.50"></text></g><g><title>httpmq-rs`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.02%)</title><rect x="75.5840%" y="453" width="0.0180%" height="15" fill="rgb(206,20,26)" fg:x="54456" fg:w="13"/><text x="75.8340%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (13 samples, 0.02%)</title><rect x="75.8477%" y="405" width="0.0180%" height="15" fill="rgb(238,220,4)" fg:x="54646" fg:w="13"/><text x="76.0977%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (50 samples, 0.07%)</title><rect x="75.8671%" y="405" width="0.0694%" height="15" fill="rgb(252,195,42)" fg:x="54660" fg:w="50"/><text x="76.1171%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (213 samples, 0.30%)</title><rect x="75.6423%" y="421" width="0.2956%" height="15" fill="rgb(209,10,6)" fg:x="54498" fg:w="213"/><text x="75.8923%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (244 samples, 0.34%)</title><rect x="75.6020%" y="453" width="0.3387%" height="15" fill="rgb(229,3,52)" fg:x="54469" fg:w="244"/><text x="75.8520%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (222 samples, 0.31%)</title><rect x="75.6326%" y="437" width="0.3081%" height="15" fill="rgb(253,49,37)" fg:x="54491" fg:w="222"/><text x="75.8826%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.02%)</title><rect x="75.9574%" y="453" width="0.0153%" height="15" fill="rgb(240,103,49)" fg:x="54725" fg:w="11"/><text x="76.2074%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.02%)</title><rect x="75.9726%" y="453" width="0.0208%" height="15" fill="rgb(250,182,30)" fg:x="54736" fg:w="15"/><text x="76.2226%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (9 samples, 0.01%)</title><rect x="75.9934%" y="453" width="0.0125%" height="15" fill="rgb(248,8,30)" fg:x="54751" fg:w="9"/><text x="76.2434%" y="463.50"></text></g><g><title>httpmq-rs`http::extensions::Extensions::insert (769 samples, 1.07%)</title><rect x="74.9427%" y="469" width="1.0674%" height="15" fill="rgb(237,120,30)" fg:x="53994" fg:w="769"/><text x="75.1927%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.01%)</title><rect x="76.0934%" y="421" width="0.0139%" height="15" fill="rgb(221,146,34)" fg:x="54823" fg:w="10"/><text x="76.3434%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (45 samples, 0.06%)</title><rect x="76.0476%" y="437" width="0.0625%" height="15" fill="rgb(242,55,13)" fg:x="54790" fg:w="45"/><text x="76.2976%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (48 samples, 0.07%)</title><rect x="76.0448%" y="453" width="0.0666%" height="15" fill="rgb(242,112,31)" fg:x="54788" fg:w="48"/><text x="76.2948%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (62 samples, 0.09%)</title><rect x="76.0268%" y="469" width="0.0861%" height="15" fill="rgb(249,192,27)" fg:x="54775" fg:w="62"/><text x="76.2768%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.02%)</title><rect x="76.1461%" y="453" width="0.0222%" height="15" fill="rgb(208,204,44)" fg:x="54861" fg:w="16"/><text x="76.3961%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.02%)</title><rect x="76.1461%" y="437" width="0.0222%" height="15" fill="rgb(208,93,54)" fg:x="54861" fg:w="16"/><text x="76.3961%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.05%)</title><rect x="76.1225%" y="469" width="0.0486%" height="15" fill="rgb(242,1,31)" fg:x="54844" fg:w="35"/><text x="76.3725%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (30 samples, 0.04%)</title><rect x="76.2835%" y="437" width="0.0416%" height="15" fill="rgb(241,83,25)" fg:x="54960" fg:w="30"/><text x="76.5335%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (82 samples, 0.11%)</title><rect x="76.2280%" y="453" width="0.1138%" height="15" fill="rgb(205,169,50)" fg:x="54920" fg:w="82"/><text x="76.4780%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (12 samples, 0.02%)</title><rect x="76.3252%" y="437" width="0.0167%" height="15" fill="rgb(239,186,37)" fg:x="54990" fg:w="12"/><text x="76.5752%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (125 samples, 0.17%)</title><rect x="76.1711%" y="469" width="0.1735%" height="15" fill="rgb(205,221,10)" fg:x="54879" fg:w="125"/><text x="76.4211%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc (18 samples, 0.02%)</title><rect x="76.3446%" y="469" width="0.0250%" height="15" fill="rgb(218,196,15)" fg:x="55004" fg:w="18"/><text x="76.5946%" y="479.50"></text></g><g><title>httpmq-rs`&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (2,296 samples, 3.19%)</title><rect x="73.2855%" y="485" width="3.1868%" height="15" fill="rgb(218,196,35)" fg:x="52800" fg:w="2296"/><text x="73.5355%" y="495.50">htt..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (68 samples, 0.09%)</title><rect x="76.3779%" y="469" width="0.0944%" height="15" fill="rgb(233,63,24)" fg:x="55028" fg:w="68"/><text x="76.6279%" y="479.50"></text></g><g><title>httpmq-rs`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.02%)</title><rect x="76.4723%" y="485" width="0.0194%" height="15" fill="rgb(225,8,4)" fg:x="55096" fg:w="14"/><text x="76.7223%" y="495.50"></text></g><g><title>httpmq-rs`&lt;axum::routing::method_routing::MethodRouter&lt;B,E&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (20 samples, 0.03%)</title><rect x="76.4917%" y="485" width="0.0278%" height="15" fill="rgb(234,105,35)" fg:x="55110" fg:w="20"/><text x="76.7417%" y="495.50"></text></g><g><title>httpmq-rs`axum::routing::Node::at (9 samples, 0.01%)</title><rect x="76.5320%" y="485" width="0.0125%" height="15" fill="rgb(236,21,32)" fg:x="55139" fg:w="9"/><text x="76.7820%" y="495.50"></text></g><g><title>httpmq-rs`bytes::bytes::promotable_even_clone (10 samples, 0.01%)</title><rect x="76.5445%" y="485" width="0.0139%" height="15" fill="rgb(228,109,6)" fg:x="55148" fg:w="10"/><text x="76.7945%" y="495.50"></text></g><g><title>httpmq-rs`bytes::bytes::static_clone (10 samples, 0.01%)</title><rect x="76.5584%" y="485" width="0.0139%" height="15" fill="rgb(229,215,31)" fg:x="55158" fg:w="10"/><text x="76.8084%" y="495.50"></text></g><g><title>httpmq-rs`bytes::bytes::static_drop (18 samples, 0.02%)</title><rect x="76.5722%" y="485" width="0.0250%" height="15" fill="rgb(221,52,54)" fg:x="55168" fg:w="18"/><text x="76.8222%" y="495.50"></text></g><g><title>httpmq-rs`core::iter::adapters::process_results (13 samples, 0.02%)</title><rect x="76.5972%" y="485" width="0.0180%" height="15" fill="rgb(252,129,43)" fg:x="55186" fg:w="13"/><text x="76.8472%" y="495.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::routing::method_routing::MethodRouter&gt; (11 samples, 0.02%)</title><rect x="76.6153%" y="485" width="0.0153%" height="15" fill="rgb(248,183,27)" fg:x="55199" fg:w="11"/><text x="76.8653%" y="495.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::option::Option&lt;axum::routing::future::RouterFuture&lt;hyper::body::body::Body&gt;&gt;&gt; (14 samples, 0.02%)</title><rect x="76.6305%" y="485" width="0.0194%" height="15" fill="rgb(250,0,22)" fg:x="55210" fg:w="14"/><text x="76.8805%" y="495.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (12 samples, 0.02%)</title><rect x="76.6500%" y="485" width="0.0167%" height="15" fill="rgb(213,166,10)" fg:x="55224" fg:w="12"/><text x="76.9000%" y="495.50"></text></g><g><title>httpmq-rs`hashbrown::map::make_hash (15 samples, 0.02%)</title><rect x="76.6749%" y="485" width="0.0208%" height="15" fill="rgb(207,163,36)" fg:x="55242" fg:w="15"/><text x="76.9249%" y="495.50"></text></g><g><title>httpmq-rs`http::extensions::Extensions::insert (15 samples, 0.02%)</title><rect x="76.6958%" y="485" width="0.0208%" height="15" fill="rgb(208,122,22)" fg:x="55257" fg:w="15"/><text x="76.9458%" y="495.50"></text></g><g><title>httpmq-rs`http::request::Parts::new (17 samples, 0.02%)</title><rect x="76.7166%" y="485" width="0.0236%" height="15" fill="rgb(207,104,49)" fg:x="55272" fg:w="17"/><text x="76.9666%" y="495.50"></text></g><g><title>httpmq-rs`http::uri::Uri::has_path (8 samples, 0.01%)</title><rect x="76.7402%" y="485" width="0.0111%" height="15" fill="rgb(248,211,50)" fg:x="55289" fg:w="8"/><text x="76.9902%" y="495.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (2,617 samples, 3.63%)</title><rect x="73.2230%" y="501" width="3.6324%" height="15" fill="rgb(217,13,45)" fg:x="52755" fg:w="2617"/><text x="73.4730%" y="511.50">http..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (63 samples, 0.09%)</title><rect x="76.7679%" y="485" width="0.0874%" height="15" fill="rgb(211,216,49)" fg:x="55309" fg:w="63"/><text x="77.0179%" y="495.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (19 samples, 0.03%)</title><rect x="76.8554%" y="501" width="0.0264%" height="15" fill="rgb(221,58,53)" fg:x="55372" fg:w="19"/><text x="77.1054%" y="511.50"></text></g><g><title>httpmq-rs`&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (20 samples, 0.03%)</title><rect x="76.8859%" y="485" width="0.0278%" height="15" fill="rgb(220,112,41)" fg:x="55394" fg:w="20"/><text x="77.1359%" y="495.50"></text></g><g><title>httpmq-rs`hyper::common::date::CACHED::__getit (9 samples, 0.01%)</title><rect x="76.9137%" y="485" width="0.0125%" height="15" fill="rgb(236,38,28)" fg:x="55414" fg:w="9"/><text x="77.1637%" y="495.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__commpage_gettimeofday (21 samples, 0.03%)</title><rect x="76.9401%" y="453" width="0.0291%" height="15" fill="rgb(227,195,22)" fg:x="55433" fg:w="21"/><text x="77.1901%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (30 samples, 0.04%)</title><rect x="76.9748%" y="437" width="0.0416%" height="15" fill="rgb(214,55,33)" fg:x="55458" fg:w="30"/><text x="77.2248%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (14 samples, 0.02%)</title><rect x="76.9970%" y="421" width="0.0194%" height="15" fill="rgb(248,80,13)" fg:x="55474" fg:w="14"/><text x="77.2470%" y="431.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (35 samples, 0.05%)</title><rect x="76.9692%" y="453" width="0.0486%" height="15" fill="rgb(238,52,6)" fg:x="55454" fg:w="35"/><text x="77.2192%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday (34 samples, 0.05%)</title><rect x="77.0178%" y="453" width="0.0472%" height="15" fill="rgb(224,198,47)" fg:x="55489" fg:w="34"/><text x="77.2678%" y="463.50"></text></g><g><title>httpmq-rs`std::time::SystemTime::now (99 samples, 0.14%)</title><rect x="76.9373%" y="469" width="0.1374%" height="15" fill="rgb(233,171,20)" fg:x="55431" fg:w="99"/><text x="77.1873%" y="479.50"></text></g><g><title>httpmq-rs`hyper::common::date::CachedDate::check (148 samples, 0.21%)</title><rect x="76.9262%" y="485" width="0.2054%" height="15" fill="rgb(241,30,25)" fg:x="55423" fg:w="148"/><text x="77.1762%" y="495.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (41 samples, 0.06%)</title><rect x="77.0747%" y="469" width="0.0569%" height="15" fill="rgb(207,171,38)" fg:x="55530" fg:w="41"/><text x="77.3247%" y="479.50"></text></g><g><title>httpmq-rs`std::time::SystemTime::now (15 samples, 0.02%)</title><rect x="77.1316%" y="485" width="0.0208%" height="15" fill="rgb(234,70,1)" fg:x="55571" fg:w="15"/><text x="77.3816%" y="495.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (211 samples, 0.29%)</title><rect x="76.8818%" y="501" width="0.2929%" height="15" fill="rgb(232,178,18)" fg:x="55391" fg:w="211"/><text x="77.1318%" y="511.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (16 samples, 0.02%)</title><rect x="77.1524%" y="485" width="0.0222%" height="15" fill="rgb(241,78,40)" fg:x="55586" fg:w="16"/><text x="77.4024%" y="495.50"></text></g><g><title>httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (9 samples, 0.01%)</title><rect x="77.1746%" y="501" width="0.0125%" height="15" fill="rgb(222,35,25)" fg:x="55602" fg:w="9"/><text x="77.4246%" y="511.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::option::Option&lt;axum::routing::future::RouterFuture&lt;hyper::body::body::Body&gt;&gt;&gt; (10 samples, 0.01%)</title><rect x="77.1927%" y="501" width="0.0139%" height="15" fill="rgb(207,92,16)" fg:x="55615" fg:w="10"/><text x="77.4427%" y="511.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (19 samples, 0.03%)</title><rect x="77.2065%" y="501" width="0.0264%" height="15" fill="rgb(216,59,51)" fg:x="55625" fg:w="19"/><text x="77.4565%" y="511.50"></text></g><g><title>httpmq-rs`core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (15 samples, 0.02%)</title><rect x="77.2357%" y="501" width="0.0208%" height="15" fill="rgb(213,80,28)" fg:x="55646" fg:w="15"/><text x="77.4857%" y="511.50"></text></g><g><title>httpmq-rs`http::request::Parts::new (18 samples, 0.02%)</title><rect x="77.2565%" y="501" width="0.0250%" height="15" fill="rgb(220,93,7)" fg:x="55661" fg:w="18"/><text x="77.5065%" y="511.50"></text></g><g><title>httpmq-rs`hyper::common::date::CACHED::__getit (10 samples, 0.01%)</title><rect x="77.2898%" y="501" width="0.0139%" height="15" fill="rgb(225,24,44)" fg:x="55685" fg:w="10"/><text x="77.5398%" y="511.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (10 samples, 0.01%)</title><rect x="77.3481%" y="485" width="0.0139%" height="15" fill="rgb(243,74,40)" fg:x="55727" fg:w="10"/><text x="77.5981%" y="495.50"></text></g><g><title>httpmq-rs`&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (14 samples, 0.02%)</title><rect x="77.3620%" y="485" width="0.0194%" height="15" fill="rgb(228,39,7)" fg:x="55737" fg:w="14"/><text x="77.6120%" y="495.50"></text></g><g><title>httpmq-rs`&lt;http::header::map::Drain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="77.4161%" y="469" width="0.0236%" height="15" fill="rgb(227,79,8)" fg:x="55776" fg:w="17"/><text x="77.6661%" y="479.50"></text></g><g><title>httpmq-rs`&lt;http::header::map::Drain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.05%)</title><rect x="77.7312%" y="453" width="0.0472%" height="15" fill="rgb(236,58,11)" fg:x="56003" fg:w="34"/><text x="77.9812%" y="463.50"></text></g><g><title>httpmq-rs`http::header::name::HeaderName::as_str (13 samples, 0.02%)</title><rect x="77.7784%" y="453" width="0.0180%" height="15" fill="rgb(249,63,35)" fg:x="56037" fg:w="13"/><text x="78.0284%" y="463.50"></text></g><g><title>httpmq-rs`hyper::common::date::CACHED::__getit (26 samples, 0.04%)</title><rect x="77.7964%" y="453" width="0.0361%" height="15" fill="rgb(252,114,16)" fg:x="56050" fg:w="26"/><text x="78.0464%" y="463.50"></text></g><g><title>httpmq-rs`hyper::common::date::CACHED::__getit (9 samples, 0.01%)</title><rect x="77.8436%" y="437" width="0.0125%" height="15" fill="rgb(254,151,24)" fg:x="56084" fg:w="9"/><text x="78.0936%" y="447.50"></text></g><g><title>httpmq-rs`std::thread::local::LocalKey&lt;T&gt;::with (35 samples, 0.05%)</title><rect x="77.8325%" y="453" width="0.0486%" height="15" fill="rgb(253,54,39)" fg:x="56076" fg:w="35"/><text x="78.0825%" y="463.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (18 samples, 0.02%)</title><rect x="77.8561%" y="437" width="0.0250%" height="15" fill="rgb(243,25,45)" fg:x="56093" fg:w="18"/><text x="78.1061%" y="447.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (345 samples, 0.48%)</title><rect x="77.4397%" y="469" width="0.4789%" height="15" fill="rgb(234,134,9)" fg:x="55793" fg:w="345"/><text x="77.6897%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (27 samples, 0.04%)</title><rect x="77.8811%" y="453" width="0.0375%" height="15" fill="rgb(227,166,31)" fg:x="56111" fg:w="27"/><text x="78.1311%" y="463.50"></text></g><g><title>httpmq-rs`bytes::bytes::static_drop (12 samples, 0.02%)</title><rect x="77.9214%" y="469" width="0.0167%" height="15" fill="rgb(245,143,41)" fg:x="56140" fg:w="12"/><text x="78.1714%" y="479.50"></text></g><g><title>httpmq-rs`http::header::name::HeaderName::as_str (19 samples, 0.03%)</title><rect x="77.9380%" y="469" width="0.0264%" height="15" fill="rgb(238,181,32)" fg:x="56152" fg:w="19"/><text x="78.1880%" y="479.50"></text></g><g><title>httpmq-rs`std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.02%)</title><rect x="77.9644%" y="469" width="0.0194%" height="15" fill="rgb(224,113,18)" fg:x="56171" fg:w="14"/><text x="78.2144%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (504 samples, 0.70%)</title><rect x="77.3079%" y="501" width="0.6995%" height="15" fill="rgb(240,229,28)" fg:x="55698" fg:w="504"/><text x="77.5579%" y="511.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::role::encode_headers (451 samples, 0.63%)</title><rect x="77.3814%" y="485" width="0.6260%" height="15" fill="rgb(250,185,3)" fg:x="55751" fg:w="451"/><text x="77.6314%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.02%)</title><rect x="77.9838%" y="469" width="0.0236%" height="15" fill="rgb(212,59,25)" fg:x="56185" fg:w="17"/><text x="78.2338%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (15 samples, 0.02%)</title><rect x="78.0074%" y="501" width="0.0208%" height="15" fill="rgb(221,87,20)" fg:x="56202" fg:w="15"/><text x="78.2574%" y="511.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.02%)</title><rect x="78.0851%" y="485" width="0.0153%" height="15" fill="rgb(213,74,28)" fg:x="56258" fg:w="11"/><text x="78.3351%" y="495.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (12 samples, 0.02%)</title><rect x="78.1004%" y="485" width="0.0167%" height="15" fill="rgb(224,132,34)" fg:x="56269" fg:w="12"/><text x="78.3504%" y="495.50"></text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (16 samples, 0.02%)</title><rect x="78.1198%" y="485" width="0.0222%" height="15" fill="rgb(222,101,24)" fg:x="56283" fg:w="16"/><text x="78.3698%" y="495.50"></text></g><g><title>httpmq-rs`bytes::bytes::promotable_even_drop (9 samples, 0.01%)</title><rect x="78.1462%" y="485" width="0.0125%" height="15" fill="rgb(254,142,4)" fg:x="56302" fg:w="9"/><text x="78.3962%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (26 samples, 0.04%)</title><rect x="78.1587%" y="485" width="0.0361%" height="15" fill="rgb(230,229,49)" fg:x="56311" fg:w="26"/><text x="78.4087%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::KA::status (17 samples, 0.02%)</title><rect x="78.1976%" y="485" width="0.0236%" height="15" fill="rgb(238,70,47)" fg:x="56339" fg:w="17"/><text x="78.4476%" y="495.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (19 samples, 0.03%)</title><rect x="78.5126%" y="469" width="0.0264%" height="15" fill="rgb(231,160,17)" fg:x="56566" fg:w="19"/><text x="78.7626%" y="479.50"></text></g><g><title>httpmq-rs`&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write_vectored (27 samples, 0.04%)</title><rect x="78.6584%" y="421" width="0.0375%" height="15" fill="rgb(218,68,53)" fg:x="56671" fg:w="27"/><text x="78.9084%" y="431.50"></text></g><g><title>httpmq-rs`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (5,066 samples, 7.03%)</title><rect x="78.6389%" y="437" width="7.0315%" height="15" fill="rgb(236,111,10)" fg:x="56657" fg:w="5066"/><text x="78.8889%" y="447.50">httpmq-rs..</text></g><g><title>libsystem_kernel.dylib`writev (5,025 samples, 6.97%)</title><rect x="78.6959%" y="421" width="6.9746%" height="15" fill="rgb(224,34,41)" fg:x="56698" fg:w="5025"/><text x="78.9459%" y="431.50">libsystem..</text></g><g><title>httpmq-rs`&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write_vectored (12 samples, 0.02%)</title><rect x="85.6705%" y="437" width="0.0167%" height="15" fill="rgb(241,118,19)" fg:x="61723" fg:w="12"/><text x="85.9205%" y="447.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (73 samples, 0.10%)</title><rect x="85.6871%" y="437" width="0.1013%" height="15" fill="rgb(238,129,25)" fg:x="61735" fg:w="73"/><text x="85.9371%" y="447.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (30 samples, 0.04%)</title><rect x="85.7468%" y="421" width="0.0416%" height="15" fill="rgb(238,22,31)" fg:x="61778" fg:w="30"/><text x="85.9968%" y="431.50"></text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (5,245 samples, 7.28%)</title><rect x="78.5390%" y="469" width="7.2800%" height="15" fill="rgb(222,174,48)" fg:x="56585" fg:w="5245"/><text x="78.7890%" y="479.50">httpmq-rs`..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_write_io (5,217 samples, 7.24%)</title><rect x="78.5779%" y="453" width="7.2411%" height="15" fill="rgb(206,152,40)" fg:x="56613" fg:w="5217"/><text x="78.8279%" y="463.50">httpmq-rs`..</text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.02%)</title><rect x="85.7982%" y="437" width="0.0208%" height="15" fill="rgb(218,99,54)" fg:x="61815" fg:w="15"/><text x="86.0482%" y="447.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_write_io (14 samples, 0.02%)</title><rect x="85.8273%" y="469" width="0.0194%" height="15" fill="rgb(220,174,26)" fg:x="61836" fg:w="14"/><text x="86.0773%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.02%)</title><rect x="85.8676%" y="453" width="0.0222%" height="15" fill="rgb(245,116,9)" fg:x="61865" fg:w="16"/><text x="86.1176%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (15 samples, 0.02%)</title><rect x="85.8689%" y="437" width="0.0208%" height="15" fill="rgb(209,72,35)" fg:x="61866" fg:w="15"/><text x="86.1189%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (31 samples, 0.04%)</title><rect x="85.8481%" y="469" width="0.0430%" height="15" fill="rgb(226,126,21)" fg:x="61851" fg:w="31"/><text x="86.0981%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.02%)</title><rect x="85.9869%" y="437" width="0.0236%" height="15" fill="rgb(227,192,1)" fg:x="61951" fg:w="17"/><text x="86.2369%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (106 samples, 0.15%)</title><rect x="85.8912%" y="469" width="0.1471%" height="15" fill="rgb(237,180,29)" fg:x="61882" fg:w="106"/><text x="86.1412%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (74 samples, 0.10%)</title><rect x="85.9356%" y="453" width="0.1027%" height="15" fill="rgb(230,197,35)" fg:x="61914" fg:w="74"/><text x="86.1856%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (20 samples, 0.03%)</title><rect x="86.0105%" y="437" width="0.0278%" height="15" fill="rgb(246,193,31)" fg:x="61968" fg:w="20"/><text x="86.2605%" y="447.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (5,634 samples, 7.82%)</title><rect x="78.2281%" y="485" width="7.8199%" height="15" fill="rgb(241,36,4)" fg:x="56361" fg:w="5634"/><text x="78.4781%" y="495.50">httpmq-rs`h..</text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.03%)</title><rect x="86.0688%" y="485" width="0.0264%" height="15" fill="rgb(241,130,17)" fg:x="62010" fg:w="19"/><text x="86.3188%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (5,818 samples, 8.08%)</title><rect x="78.0282%" y="501" width="8.0753%" height="15" fill="rgb(206,137,32)" fg:x="56217" fg:w="5818"/><text x="78.2782%" y="511.50">httpmq-rs`h..</text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::conn::KA as core::ops::bit::BitAndAssign&lt;bool&gt;&gt;::bitand_assign (12 samples, 0.02%)</title><rect x="86.2090%" y="485" width="0.0167%" height="15" fill="rgb(237,228,51)" fg:x="62111" fg:w="12"/><text x="86.4590%" y="495.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (17 samples, 0.02%)</title><rect x="86.3409%" y="469" width="0.0236%" height="15" fill="rgb(243,6,42)" fg:x="62206" fg:w="17"/><text x="86.5909%" y="479.50"></text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (13 samples, 0.02%)</title><rect x="86.3645%" y="469" width="0.0180%" height="15" fill="rgb(251,74,28)" fg:x="62223" fg:w="13"/><text x="86.6145%" y="479.50"></text></g><g><title>httpmq-rs`&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="86.3825%" y="469" width="0.0180%" height="15" fill="rgb(218,20,49)" fg:x="62236" fg:w="13"/><text x="86.6325%" y="479.50"></text></g><g><title>httpmq-rs`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (27 samples, 0.04%)</title><rect x="86.5990%" y="405" width="0.0375%" height="15" fill="rgb(238,28,14)" fg:x="62392" fg:w="27"/><text x="86.8490%" y="415.50"></text></g><g><title>libsystem_c.dylib`recv (19 samples, 0.03%)</title><rect x="86.6434%" y="405" width="0.0264%" height="15" fill="rgb(229,40,46)" fg:x="62424" fg:w="19"/><text x="86.8934%" y="415.50"></text></g><g><title>httpmq-rs`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (4,361 samples, 6.05%)</title><rect x="86.5796%" y="421" width="6.0530%" height="15" fill="rgb(244,195,20)" fg:x="62378" fg:w="4361"/><text x="86.8296%" y="431.50">httpmq-r..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (4,296 samples, 5.96%)</title><rect x="86.6698%" y="405" width="5.9628%" height="15" fill="rgb(253,56,35)" fg:x="62443" fg:w="4296"/><text x="86.9198%" y="415.50">libsyste..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (61 samples, 0.08%)</title><rect x="92.6381%" y="421" width="0.0847%" height="15" fill="rgb(210,149,44)" fg:x="66743" fg:w="61"/><text x="92.8881%" y="431.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (13 samples, 0.02%)</title><rect x="92.7048%" y="405" width="0.0180%" height="15" fill="rgb(240,135,12)" fg:x="66791" fg:w="13"/><text x="92.9548%" y="415.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_read_io (4,478 samples, 6.22%)</title><rect x="86.5199%" y="437" width="6.2154%" height="15" fill="rgb(251,24,50)" fg:x="62335" fg:w="4478"/><text x="86.7699%" y="447.50">httpmq-r..</text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.01%)</title><rect x="92.7228%" y="421" width="0.0125%" height="15" fill="rgb(243,200,47)" fg:x="66804" fg:w="9"/><text x="92.9728%" y="431.50"></text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (4,519 samples, 6.27%)</title><rect x="86.4769%" y="453" width="6.2723%" height="15" fill="rgb(224,166,26)" fg:x="62304" fg:w="4519"/><text x="86.7269%" y="463.50">httpmq-r..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (10 samples, 0.01%)</title><rect x="92.7353%" y="437" width="0.0139%" height="15" fill="rgb(233,0,47)" fg:x="66813" fg:w="10"/><text x="92.9853%" y="447.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::ReadStrategy::record (8 samples, 0.01%)</title><rect x="92.7492%" y="453" width="0.0111%" height="15" fill="rgb(253,80,5)" fg:x="66823" fg:w="8"/><text x="92.9992%" y="463.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (4,602 samples, 6.39%)</title><rect x="86.4005%" y="469" width="6.3875%" height="15" fill="rgb(214,133,25)" fg:x="62249" fg:w="4602"/><text x="86.6505%" y="479.50">httpmq-r..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_read_io (20 samples, 0.03%)</title><rect x="92.7603%" y="453" width="0.0278%" height="15" fill="rgb(209,27,14)" fg:x="66831" fg:w="20"/><text x="93.0103%" y="463.50"></text></g><g><title>httpmq-rs`__rdl_alloc (20 samples, 0.03%)</title><rect x="93.1336%" y="437" width="0.0278%" height="15" fill="rgb(219,102,51)" fg:x="67100" fg:w="20"/><text x="93.3836%" y="447.50"></text></g><g><title>httpmq-rs`__rust_probestack (28 samples, 0.04%)</title><rect x="93.1711%" y="437" width="0.0389%" height="15" fill="rgb(237,18,16)" fg:x="67127" fg:w="28"/><text x="93.4211%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.02%)</title><rect x="93.3446%" y="373" width="0.0180%" height="15" fill="rgb(241,85,17)" fg:x="67252" fg:w="13"/><text x="93.5946%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (77 samples, 0.11%)</title><rect x="93.2572%" y="405" width="0.1069%" height="15" fill="rgb(236,90,42)" fg:x="67189" fg:w="77"/><text x="93.5072%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (69 samples, 0.10%)</title><rect x="93.2683%" y="389" width="0.0958%" height="15" fill="rgb(249,57,21)" fg:x="67197" fg:w="69"/><text x="93.5183%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (115 samples, 0.16%)</title><rect x="93.2142%" y="421" width="0.1596%" height="15" fill="rgb(243,12,36)" fg:x="67158" fg:w="115"/><text x="93.4642%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (30 samples, 0.04%)</title><rect x="93.3738%" y="421" width="0.0416%" height="15" fill="rgb(253,128,47)" fg:x="67273" fg:w="30"/><text x="93.6238%" y="431.50"></text></g><g><title>httpmq-rs`bytes::bytes::Bytes::copy_from_slice (160 samples, 0.22%)</title><rect x="93.2100%" y="437" width="0.2221%" height="15" fill="rgb(207,33,20)" fg:x="67155" fg:w="160"/><text x="93.4600%" y="447.50"></text></g><g><title>httpmq-rs`bytes::bytes::Bytes::slice (11 samples, 0.02%)</title><rect x="93.4321%" y="437" width="0.0153%" height="15" fill="rgb(233,215,35)" fg:x="67315" fg:w="11"/><text x="93.6821%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (79 samples, 0.11%)</title><rect x="93.4640%" y="421" width="0.1097%" height="15" fill="rgb(249,188,52)" fg:x="67338" fg:w="79"/><text x="93.7140%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (76 samples, 0.11%)</title><rect x="93.4682%" y="405" width="0.1055%" height="15" fill="rgb(225,12,32)" fg:x="67341" fg:w="76"/><text x="93.7182%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (75 samples, 0.10%)</title><rect x="93.4695%" y="389" width="0.1041%" height="15" fill="rgb(247,98,14)" fg:x="67342" fg:w="75"/><text x="93.7195%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (33 samples, 0.05%)</title><rect x="93.5278%" y="373" width="0.0458%" height="15" fill="rgb(247,219,48)" fg:x="67384" fg:w="33"/><text x="93.7778%" y="383.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::BytesMut::split_to (97 samples, 0.13%)</title><rect x="93.4473%" y="437" width="0.1346%" height="15" fill="rgb(253,60,48)" fg:x="67326" fg:w="97"/><text x="93.6973%" y="447.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::shared_v_clone (19 samples, 0.03%)</title><rect x="93.5820%" y="437" width="0.0264%" height="15" fill="rgb(245,15,52)" fg:x="67423" fg:w="19"/><text x="93.8320%" y="447.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::shared_v_drop (9 samples, 0.01%)</title><rect x="93.6083%" y="437" width="0.0125%" height="15" fill="rgb(220,133,28)" fg:x="67442" fg:w="9"/><text x="93.8583%" y="447.50"></text></g><g><title>httpmq-rs`http::header::map::HeaderMap&lt;T&gt;::append (92 samples, 0.13%)</title><rect x="93.6278%" y="437" width="0.1277%" height="15" fill="rgb(217,180,4)" fg:x="67456" fg:w="92"/><text x="93.8778%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.03%)</title><rect x="93.7235%" y="421" width="0.0319%" height="15" fill="rgb(251,24,1)" fg:x="67525" fg:w="23"/><text x="93.9735%" y="431.50"></text></g><g><title>httpmq-rs`http::header::map::HeaderMap&lt;T&gt;::reserve (12 samples, 0.02%)</title><rect x="93.7555%" y="437" width="0.0167%" height="15" fill="rgb(212,185,49)" fg:x="67548" fg:w="12"/><text x="94.0055%" y="447.50"></text></g><g><title>httpmq-rs`http::header::name::HeaderName::from_bytes (83 samples, 0.12%)</title><rect x="93.7721%" y="437" width="0.1152%" height="15" fill="rgb(215,175,22)" fg:x="67560" fg:w="83"/><text x="94.0221%" y="447.50"></text></g><g><title>httpmq-rs`http::header::name::parse_hdr (70 samples, 0.10%)</title><rect x="93.7902%" y="421" width="0.0972%" height="15" fill="rgb(250,205,14)" fg:x="67573" fg:w="70"/><text x="94.0402%" y="431.50"></text></g><g><title>httpmq-rs`http::header::name::parse_hdr (14 samples, 0.02%)</title><rect x="93.8873%" y="437" width="0.0194%" height="15" fill="rgb(225,211,22)" fg:x="67643" fg:w="14"/><text x="94.1373%" y="447.50"></text></g><g><title>httpmq-rs`http::method::Method::from_bytes (15 samples, 0.02%)</title><rect x="93.9068%" y="437" width="0.0208%" height="15" fill="rgb(251,179,42)" fg:x="67657" fg:w="15"/><text x="94.1568%" y="447.50"></text></g><g><title>httpmq-rs`http::uri::Uri::from_shared (101 samples, 0.14%)</title><rect x="93.9276%" y="437" width="0.1402%" height="15" fill="rgb(208,216,51)" fg:x="67672" fg:w="101"/><text x="94.1776%" y="447.50"></text></g><g><title>httpmq-rs`http::uri::path::PathAndQuery::from_shared (75 samples, 0.10%)</title><rect x="93.9637%" y="421" width="0.1041%" height="15" fill="rgb(235,36,11)" fg:x="67698" fg:w="75"/><text x="94.2137%" y="431.50"></text></g><g><title>httpmq-rs`http::uri::path::PathAndQuery::from_shared (14 samples, 0.02%)</title><rect x="94.0678%" y="437" width="0.0194%" height="15" fill="rgb(213,189,28)" fg:x="67773" fg:w="14"/><text x="94.3178%" y="447.50"></text></g><g><title>httpmq-rs`httparse::simd::runtime::match_header_value_vectored (32 samples, 0.04%)</title><rect x="94.2135%" y="405" width="0.0444%" height="15" fill="rgb(227,203,42)" fg:x="67878" fg:w="32"/><text x="94.4635%" y="415.50"></text></g><g><title>httpmq-rs`httparse::simd::sse42::match_header_value_char_16_sse (9 samples, 0.01%)</title><rect x="94.2454%" y="389" width="0.0125%" height="15" fill="rgb(244,72,36)" fg:x="67901" fg:w="9"/><text x="94.4954%" y="399.50"></text></g><g><title>httpmq-rs`httparse::parse_headers_iter_uninit (93 samples, 0.13%)</title><rect x="94.1455%" y="421" width="0.1291%" height="15" fill="rgb(213,53,17)" fg:x="67829" fg:w="93"/><text x="94.3955%" y="431.50"></text></g><g><title>httpmq-rs`httparse::simd::sse42::match_header_value_char_16_sse (12 samples, 0.02%)</title><rect x="94.2579%" y="405" width="0.0167%" height="15" fill="rgb(207,167,3)" fg:x="67910" fg:w="12"/><text x="94.5079%" y="415.50"></text></g><g><title>httpmq-rs`httparse::simd::avx2::match_url_char_32_avx (30 samples, 0.04%)</title><rect x="94.2815%" y="421" width="0.0416%" height="15" fill="rgb(216,98,30)" fg:x="67927" fg:w="30"/><text x="94.5315%" y="431.50"></text></g><g><title>httpmq-rs`httparse::Request::parse_with_uninit_headers (242 samples, 0.34%)</title><rect x="94.0872%" y="437" width="0.3359%" height="15" fill="rgb(236,123,15)" fg:x="67787" fg:w="242"/><text x="94.3372%" y="447.50"></text></g><g><title>httpmq-rs`httparse::simd::runtime::match_uri_vectored (70 samples, 0.10%)</title><rect x="94.3259%" y="421" width="0.0972%" height="15" fill="rgb(248,81,50)" fg:x="67959" fg:w="70"/><text x="94.5759%" y="431.50"></text></g><g><title>httpmq-rs`httparse::simd::avx2::match_url_char_32_avx (61 samples, 0.08%)</title><rect x="94.3384%" y="405" width="0.0847%" height="15" fill="rgb(214,120,4)" fg:x="67968" fg:w="61"/><text x="94.5884%" y="415.50"></text></g><g><title>httpmq-rs`httparse::simd::runtime::match_uri_vectored (13 samples, 0.02%)</title><rect x="94.4259%" y="437" width="0.0180%" height="15" fill="rgb(208,179,34)" fg:x="68031" fg:w="13"/><text x="94.6759%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.03%)</title><rect x="94.4439%" y="437" width="0.0305%" height="15" fill="rgb(227,140,7)" fg:x="68044" fg:w="22"/><text x="94.6939%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc (22 samples, 0.03%)</title><rect x="94.4744%" y="437" width="0.0305%" height="15" fill="rgb(214,22,6)" fg:x="68066" fg:w="22"/><text x="94.7244%" y="447.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (1,209 samples, 1.68%)</title><rect x="92.8685%" y="453" width="1.6781%" height="15" fill="rgb(207,137,27)" fg:x="66909" fg:w="1209"/><text x="93.1185%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (30 samples, 0.04%)</title><rect x="94.5050%" y="437" width="0.0416%" height="15" fill="rgb(210,8,46)" fg:x="68088" fg:w="30"/><text x="94.7550%" y="447.50"></text></g><g><title>httpmq-rs`__rust_probestack (23 samples, 0.03%)</title><rect x="94.5494%" y="453" width="0.0319%" height="15" fill="rgb(240,16,54)" fg:x="68120" fg:w="23"/><text x="94.7994%" y="463.50"></text></g><g><title>httpmq-rs`bytes::bytes::Bytes::copy_from_slice (25 samples, 0.03%)</title><rect x="94.5813%" y="453" width="0.0347%" height="15" fill="rgb(211,209,29)" fg:x="68143" fg:w="25"/><text x="94.8313%" y="463.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::BytesMut::split_to (9 samples, 0.01%)</title><rect x="94.6243%" y="453" width="0.0125%" height="15" fill="rgb(226,228,24)" fg:x="68174" fg:w="9"/><text x="94.8743%" y="463.50"></text></g><g><title>httpmq-rs`http::header::map::HeaderMap&lt;T&gt;::append (12 samples, 0.02%)</title><rect x="94.6410%" y="453" width="0.0167%" height="15" fill="rgb(222,84,9)" fg:x="68186" fg:w="12"/><text x="94.8910%" y="463.50"></text></g><g><title>httpmq-rs`http::header::name::HeaderName::from_bytes (13 samples, 0.02%)</title><rect x="94.6646%" y="453" width="0.0180%" height="15" fill="rgb(234,203,30)" fg:x="68203" fg:w="13"/><text x="94.9146%" y="463.50"></text></g><g><title>httpmq-rs`http::method::Method::from_bytes (19 samples, 0.03%)</title><rect x="94.6826%" y="453" width="0.0264%" height="15" fill="rgb(238,109,14)" fg:x="68216" fg:w="19"/><text x="94.9326%" y="463.50"></text></g><g><title>httpmq-rs`http::uri::Uri::from_shared (14 samples, 0.02%)</title><rect x="94.7090%" y="453" width="0.0194%" height="15" fill="rgb(233,206,34)" fg:x="68235" fg:w="14"/><text x="94.9590%" y="463.50"></text></g><g><title>httpmq-rs`httparse::Request::parse_with_uninit_headers (13 samples, 0.02%)</title><rect x="94.7284%" y="453" width="0.0180%" height="15" fill="rgb(220,167,47)" fg:x="68249" fg:w="13"/><text x="94.9784%" y="463.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::role::parse_headers (1,409 samples, 1.96%)</title><rect x="92.8033%" y="469" width="1.9557%" height="15" fill="rgb(238,105,10)" fg:x="66862" fg:w="1409"/><text x="93.0533%" y="479.50">h..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="94.7465%" y="453" width="0.0125%" height="15" fill="rgb(213,227,17)" fg:x="68262" fg:w="9"/><text x="94.9965%" y="463.50"></text></g><g><title>httpmq-rs`hyper::server::tcp::addr_stream::_::_&lt;impl hyper::server::tcp::addr_stream::AddrStream&gt;::project (10 samples, 0.01%)</title><rect x="94.7590%" y="469" width="0.0139%" height="15" fill="rgb(217,132,38)" fg:x="68271" fg:w="10"/><text x="95.0090%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (6,597 samples, 9.16%)</title><rect x="86.2312%" y="485" width="9.1565%" height="15" fill="rgb(242,146,4)" fg:x="62127" fg:w="6597"/><text x="86.4812%" y="495.50">httpmq-rs`hyp..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (443 samples, 0.61%)</title><rect x="94.7729%" y="469" width="0.6149%" height="15" fill="rgb(212,61,9)" fg:x="68281" fg:w="443"/><text x="95.0229%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::role::parse_headers (15 samples, 0.02%)</title><rect x="95.4044%" y="485" width="0.0208%" height="15" fill="rgb(247,126,22)" fg:x="68736" fg:w="15"/><text x="95.6544%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (6,758 samples, 9.38%)</title><rect x="86.1035%" y="501" width="9.3800%" height="15" fill="rgb(220,196,2)" fg:x="62035" fg:w="6758"/><text x="86.3535%" y="511.50">httpmq-rs`hyp..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (42 samples, 0.06%)</title><rect x="95.4252%" y="485" width="0.0583%" height="15" fill="rgb(208,46,4)" fg:x="68751" fg:w="42"/><text x="95.6752%" y="495.50"></text></g><g><title>httpmq-rs`std::sys::unix::decode_error_kind (9 samples, 0.01%)</title><rect x="95.6459%" y="437" width="0.0125%" height="15" fill="rgb(252,104,46)" fg:x="68910" fg:w="9"/><text x="95.8959%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`cerror_nocancel (16 samples, 0.02%)</title><rect x="95.7528%" y="389" width="0.0222%" height="15" fill="rgb(237,152,48)" fg:x="68987" fg:w="16"/><text x="96.0028%" y="399.50"></text></g><g><title>httpmq-rs`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (70 samples, 0.10%)</title><rect x="95.7320%" y="405" width="0.0972%" height="15" fill="rgb(221,59,37)" fg:x="68972" fg:w="70"/><text x="95.9820%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (39 samples, 0.05%)</title><rect x="95.7750%" y="389" width="0.0541%" height="15" fill="rgb(209,202,51)" fg:x="69003" fg:w="39"/><text x="96.0250%" y="399.50"></text></g><g><title>httpmq-rs`DYLD-STUB$$__error (9 samples, 0.01%)</title><rect x="95.8291%" y="405" width="0.0125%" height="15" fill="rgb(228,81,30)" fg:x="69042" fg:w="9"/><text x="96.0791%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__error (22 samples, 0.03%)</title><rect x="95.8513%" y="405" width="0.0305%" height="15" fill="rgb(227,42,39)" fg:x="69058" fg:w="22"/><text x="96.1013%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (782 samples, 1.09%)</title><rect x="95.8819%" y="405" width="1.0854%" height="15" fill="rgb(221,26,2)" fg:x="69080" fg:w="782"/><text x="96.1319%" y="415.50"></text></g><g><title>httpmq-rs`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (922 samples, 1.28%)</title><rect x="95.7236%" y="421" width="1.2797%" height="15" fill="rgb(254,61,31)" fg:x="68966" fg:w="922"/><text x="95.9736%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`cerror (26 samples, 0.04%)</title><rect x="96.9673%" y="405" width="0.0361%" height="15" fill="rgb(222,173,38)" fg:x="69862" fg:w="26"/><text x="97.2173%" y="415.50"></text></g><g><title>httpmq-rs`std::sys::unix::decode_error_kind (21 samples, 0.03%)</title><rect x="97.0047%" y="421" width="0.0291%" height="15" fill="rgb(218,50,12)" fg:x="69889" fg:w="21"/><text x="97.2547%" y="431.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::ref_inc (15 samples, 0.02%)</title><rect x="97.1519%" y="389" width="0.0208%" height="15" fill="rgb(223,88,40)" fg:x="69995" fg:w="15"/><text x="97.4019%" y="399.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (59 samples, 0.08%)</title><rect x="97.1102%" y="405" width="0.0819%" height="15" fill="rgb(237,54,19)" fg:x="69965" fg:w="59"/><text x="97.3602%" y="415.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::waker::clone_waker (14 samples, 0.02%)</title><rect x="97.1727%" y="389" width="0.0194%" height="15" fill="rgb(251,129,25)" fg:x="70010" fg:w="14"/><text x="97.4227%" y="399.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::ref_inc (11 samples, 0.02%)</title><rect x="97.1768%" y="373" width="0.0153%" height="15" fill="rgb(238,97,19)" fg:x="70013" fg:w="11"/><text x="97.4268%" y="383.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (131 samples, 0.18%)</title><rect x="97.0339%" y="421" width="0.1818%" height="15" fill="rgb(240,169,18)" fg:x="69910" fg:w="131"/><text x="97.2839%" y="431.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::waker::clone_waker (17 samples, 0.02%)</title><rect x="97.1921%" y="405" width="0.0236%" height="15" fill="rgb(230,187,49)" fg:x="70024" fg:w="17"/><text x="97.4421%" y="415.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_read_io (1,164 samples, 1.62%)</title><rect x="95.6584%" y="437" width="1.6156%" height="15" fill="rgb(209,44,26)" fg:x="68919" fg:w="1164"/><text x="95.9084%" y="447.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (40 samples, 0.06%)</title><rect x="97.2185%" y="421" width="0.0555%" height="15" fill="rgb(244,0,6)" fg:x="70043" fg:w="40"/><text x="97.4685%" y="431.50"></text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1,195 samples, 1.66%)</title><rect x="95.6265%" y="453" width="1.6586%" height="15" fill="rgb(248,18,21)" fg:x="68896" fg:w="1195"/><text x="95.8765%" y="463.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (8 samples, 0.01%)</title><rect x="97.2740%" y="437" width="0.0111%" height="15" fill="rgb(245,180,19)" fg:x="70083" fg:w="8"/><text x="97.5240%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (9 samples, 0.01%)</title><rect x="97.4683%" y="373" width="0.0125%" height="15" fill="rgb(252,118,36)" fg:x="70223" fg:w="9"/><text x="97.7183%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (142 samples, 0.20%)</title><rect x="97.3156%" y="437" width="0.1971%" height="15" fill="rgb(210,224,19)" fg:x="70113" fg:w="142"/><text x="97.5656%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (134 samples, 0.19%)</title><rect x="97.3267%" y="421" width="0.1860%" height="15" fill="rgb(218,30,24)" fg:x="70121" fg:w="134"/><text x="97.5767%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (124 samples, 0.17%)</title><rect x="97.3406%" y="405" width="0.1721%" height="15" fill="rgb(219,75,50)" fg:x="70131" fg:w="124"/><text x="97.5906%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (44 samples, 0.06%)</title><rect x="97.4517%" y="389" width="0.0611%" height="15" fill="rgb(234,72,50)" fg:x="70211" fg:w="44"/><text x="97.7017%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (23 samples, 0.03%)</title><rect x="97.4808%" y="373" width="0.0319%" height="15" fill="rgb(219,100,48)" fg:x="70232" fg:w="23"/><text x="97.7308%" y="383.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::BytesMut::reserve_inner (168 samples, 0.23%)</title><rect x="97.2865%" y="453" width="0.2332%" height="15" fill="rgb(253,5,41)" fg:x="70092" fg:w="168"/><text x="97.5365%" y="463.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1,397 samples, 1.94%)</title><rect x="95.5973%" y="469" width="1.9390%" height="15" fill="rgb(247,181,11)" fg:x="68875" fg:w="1397"/><text x="95.8473%" y="479.50">h..</text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (1,427 samples, 1.98%)</title><rect x="95.5598%" y="485" width="1.9807%" height="15" fill="rgb(222,223,25)" fg:x="68848" fg:w="1427"/><text x="95.8098%" y="495.50">h..</text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (1,487 samples, 2.06%)</title><rect x="95.4835%" y="501" width="2.0639%" height="15" fill="rgb(214,198,28)" fg:x="68793" fg:w="1487"/><text x="95.7335%" y="511.50">h..</text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (11 samples, 0.02%)</title><rect x="97.5474%" y="501" width="0.0153%" height="15" fill="rgb(230,46,43)" fg:x="70280" fg:w="11"/><text x="97.7974%" y="511.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::State::busy (16 samples, 0.02%)</title><rect x="97.5627%" y="501" width="0.0222%" height="15" fill="rgb(233,65,53)" fg:x="70291" fg:w="16"/><text x="97.8127%" y="511.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::State::wants_keep_alive (21 samples, 0.03%)</title><rect x="97.5891%" y="501" width="0.0291%" height="15" fill="rgb(221,121,27)" fg:x="70310" fg:w="21"/><text x="97.8391%" y="511.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (40 samples, 0.06%)</title><rect x="97.6737%" y="485" width="0.0555%" height="15" fill="rgb(247,70,47)" fg:x="70371" fg:w="40"/><text x="97.9237%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::encode::Encoder::encode_and_end (93 samples, 0.13%)</title><rect x="97.6182%" y="501" width="0.1291%" height="15" fill="rgb(228,85,35)" fg:x="70331" fg:w="93"/><text x="97.8682%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="97.7293%" y="485" width="0.0180%" height="15" fill="rgb(209,50,18)" fg:x="70411" fg:w="13"/><text x="97.9793%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_buffer (32 samples, 0.04%)</title><rect x="97.7487%" y="501" width="0.0444%" height="15" fill="rgb(250,19,35)" fg:x="70425" fg:w="32"/><text x="97.9987%" y="511.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.02%)</title><rect x="97.7723%" y="485" width="0.0208%" height="15" fill="rgb(253,107,29)" fg:x="70442" fg:w="15"/><text x="98.0223%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (19 samples, 0.03%)</title><rect x="97.7931%" y="501" width="0.0264%" height="15" fill="rgb(252,179,29)" fg:x="70457" fg:w="19"/><text x="98.0431%" y="511.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (19 samples, 0.03%)</title><rect x="97.8209%" y="501" width="0.0264%" height="15" fill="rgb(238,194,6)" fg:x="70477" fg:w="19"/><text x="98.0709%" y="511.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::role::encode_headers (12 samples, 0.02%)</title><rect x="97.8472%" y="501" width="0.0167%" height="15" fill="rgb(238,164,29)" fg:x="70496" fg:w="12"/><text x="98.0972%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.02%)</title><rect x="97.8653%" y="501" width="0.0250%" height="15" fill="rgb(224,25,9)" fg:x="70509" fg:w="18"/><text x="98.1153%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="97.8792%" y="485" width="0.0111%" height="15" fill="rgb(244,153,23)" fg:x="70519" fg:w="8"/><text x="98.1292%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.01%)</title><rect x="97.8792%" y="469" width="0.0111%" height="15" fill="rgb(212,203,14)" fg:x="70519" fg:w="8"/><text x="98.1292%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (48 samples, 0.07%)</title><rect x="97.8903%" y="501" width="0.0666%" height="15" fill="rgb(220,164,20)" fg:x="70527" fg:w="48"/><text x="98.1403%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (34 samples, 0.05%)</title><rect x="97.9097%" y="485" width="0.0472%" height="15" fill="rgb(222,203,48)" fg:x="70541" fg:w="34"/><text x="98.1597%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.02%)</title><rect x="97.9319%" y="469" width="0.0250%" height="15" fill="rgb(215,159,22)" fg:x="70557" fg:w="18"/><text x="98.1819%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (61,164 samples, 84.89%)</title><rect x="13.1511%" y="517" width="84.8946%" height="15" fill="rgb(216,183,47)" fg:x="9475" fg:w="61164"/><text x="13.4011%" y="527.50">httpmq-rs`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (57 samples, 0.08%)</title><rect x="97.9666%" y="501" width="0.0791%" height="15" fill="rgb(229,195,25)" fg:x="70582" fg:w="57"/><text x="98.2166%" y="511.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::encode::Encoder::encode_and_end (19 samples, 0.03%)</title><rect x="98.0457%" y="517" width="0.0264%" height="15" fill="rgb(224,132,51)" fg:x="70639" fg:w="19"/><text x="98.2957%" y="527.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_buffer (34 samples, 0.05%)</title><rect x="98.0776%" y="517" width="0.0472%" height="15" fill="rgb(240,63,7)" fg:x="70662" fg:w="34"/><text x="98.3276%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.01%)</title><rect x="98.1248%" y="517" width="0.0125%" height="15" fill="rgb(249,182,41)" fg:x="70696" fg:w="9"/><text x="98.3748%" y="527.50"></text></g><g><title>httpmq-rs`&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (61,500 samples, 85.36%)</title><rect x="12.8028%" y="533" width="85.3609%" height="15" fill="rgb(243,47,26)" fg:x="9224" fg:w="61500"/><text x="13.0528%" y="543.50">httpmq-rs`&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.02%)</title><rect x="98.1387%" y="517" width="0.0250%" height="15" fill="rgb(233,48,2)" fg:x="70706" fg:w="18"/><text x="98.3887%" y="527.50"></text></g><g><title>httpmq-rs`&lt;hyper::server::conn::spawn_all::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (61,557 samples, 85.44%)</title><rect x="12.7375%" y="549" width="85.4401%" height="15" fill="rgb(244,165,34)" fg:x="9177" fg:w="61557"/><text x="12.9875%" y="559.50">httpmq-rs`&lt;hyper::server::conn::spawn_all::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll</text></g><g><title>httpmq-rs`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (10 samples, 0.01%)</title><rect x="98.1637%" y="533" width="0.0139%" height="15" fill="rgb(207,89,7)" fg:x="70724" fg:w="10"/><text x="98.4137%" y="543.50"></text></g><g><title>httpmq-rs`&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="98.1776%" y="549" width="0.0153%" height="15" fill="rgb(244,117,36)" fg:x="70734" fg:w="11"/><text x="98.4276%" y="559.50"></text></g><g><title>httpmq-rs`core::task::poll::Poll&lt;T&gt;::map (12 samples, 0.02%)</title><rect x="98.1928%" y="549" width="0.0167%" height="15" fill="rgb(226,144,34)" fg:x="70745" fg:w="12"/><text x="98.4428%" y="559.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_idle (19 samples, 0.03%)</title><rect x="98.2095%" y="549" width="0.0264%" height="15" fill="rgb(213,23,19)" fg:x="70757" fg:w="19"/><text x="98.4595%" y="559.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (61,659 samples, 85.58%)</title><rect x="12.6667%" y="565" width="85.5816%" height="15" fill="rgb(217,75,12)" fg:x="9126" fg:w="61659"/><text x="12.9167%" y="575.50">httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_running (9 samples, 0.01%)</title><rect x="98.2359%" y="549" width="0.0125%" height="15" fill="rgb(224,159,17)" fg:x="70776" fg:w="9"/><text x="98.4859%" y="559.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_idle (9 samples, 0.01%)</title><rect x="98.2484%" y="565" width="0.0125%" height="15" fill="rgb(217,118,1)" fg:x="70785" fg:w="9"/><text x="98.4984%" y="575.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_running (10 samples, 0.01%)</title><rect x="98.2609%" y="565" width="0.0139%" height="15" fill="rgb(232,180,48)" fg:x="70794" fg:w="10"/><text x="98.5109%" y="575.50"></text></g><g><title>httpmq-rs`std::thread::local::LocalKey&lt;T&gt;::with (61,780 samples, 85.75%)</title><rect x="12.5668%" y="581" width="85.7496%" height="15" fill="rgb(230,27,33)" fg:x="9054" fg:w="61780"/><text x="12.8168%" y="591.50">httpmq-rs`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>libdyld.dylib`tlv_get_addr (30 samples, 0.04%)</title><rect x="98.2747%" y="565" width="0.0416%" height="15" fill="rgb(205,31,21)" fg:x="70804" fg:w="30"/><text x="98.5247%" y="575.50"></text></g><g><title>httpmq-rs`tokio::coop::CURRENT::__getit (19 samples, 0.03%)</title><rect x="98.3178%" y="581" width="0.0264%" height="15" fill="rgb(253,59,4)" fg:x="70835" fg:w="19"/><text x="98.5678%" y="591.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (12 samples, 0.02%)</title><rect x="98.3441%" y="581" width="0.0167%" height="15" fill="rgb(224,201,9)" fg:x="70854" fg:w="12"/><text x="98.5941%" y="591.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::raw::poll (26 samples, 0.04%)</title><rect x="98.3608%" y="581" width="0.0361%" height="15" fill="rgb(229,206,30)" fg:x="70866" fg:w="26"/><text x="98.6108%" y="591.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Shared::notify_parked (38 samples, 0.05%)</title><rect x="98.3969%" y="581" width="0.0527%" height="15" fill="rgb(212,67,47)" fg:x="70892" fg:w="38"/><text x="98.6469%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (12 samples, 0.02%)</title><rect x="98.4538%" y="581" width="0.0167%" height="15" fill="rgb(211,96,50)" fg:x="70933" fg:w="12"/><text x="98.7038%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (9 samples, 0.01%)</title><rect x="98.4704%" y="581" width="0.0125%" height="15" fill="rgb(252,114,18)" fg:x="70945" fg:w="9"/><text x="98.7204%" y="591.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Context::run_task (63,319 samples, 87.89%)</title><rect x="10.6097%" y="597" width="87.8857%" height="15" fill="rgb(223,58,37)" fg:x="7644" fg:w="63319"/><text x="10.8597%" y="607.50">httpmq-rs`tokio::runtime::thread_pool::worker::Context::run_task</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (9 samples, 0.01%)</title><rect x="98.4829%" y="581" width="0.0125%" height="15" fill="rgb(237,70,4)" fg:x="70954" fg:w="9"/><text x="98.7329%" y="591.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Context::run (70,948 samples, 98.47%)</title><rect x="0.0291%" y="613" width="98.4746%" height="15" fill="rgb(244,85,46)" fg:x="21" fg:w="70948"/><text x="0.2791%" y="623.50">httpmq-rs`tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>httpmq-rs`core::ops::function::FnOnce::call_once{{vtable.shim}} (70,966 samples, 98.50%)</title><rect x="0.0097%" y="725" width="98.4996%" height="15" fill="rgb(223,39,52)" fg:x="7" fg:w="70966"/><text x="0.2597%" y="735.50">httpmq-rs`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>httpmq-rs`std::sys_common::backtrace::__rust_begin_short_backtrace (70,966 samples, 98.50%)</title><rect x="0.0097%" y="709" width="98.4996%" height="15" fill="rgb(218,200,14)" fg:x="7" fg:w="70966"/><text x="0.2597%" y="719.50">httpmq-rs`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>httpmq-rs`tokio::runtime::blocking::pool::Inner::run (70,966 samples, 98.50%)</title><rect x="0.0097%" y="693" width="98.4996%" height="15" fill="rgb(208,171,16)" fg:x="7" fg:w="70966"/><text x="0.2597%" y="703.50">httpmq-rs`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (70,966 samples, 98.50%)</title><rect x="0.0097%" y="677" width="98.4996%" height="15" fill="rgb(234,200,18)" fg:x="7" fg:w="70966"/><text x="0.2597%" y="687.50">httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>httpmq-rs`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (70,966 samples, 98.50%)</title><rect x="0.0097%" y="661" width="98.4996%" height="15" fill="rgb(228,45,11)" fg:x="7" fg:w="70966"/><text x="0.2597%" y="671.50">httpmq-rs`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::run (70,966 samples, 98.50%)</title><rect x="0.0097%" y="645" width="98.4996%" height="15" fill="rgb(237,182,11)" fg:x="7" fg:w="70966"/><text x="0.2597%" y="655.50">httpmq-rs`tokio::runtime::thread_pool::worker::run</text></g><g><title>httpmq-rs`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (70,966 samples, 98.50%)</title><rect x="0.0097%" y="629" width="98.4996%" height="15" fill="rgb(241,175,49)" fg:x="7" fg:w="70966"/><text x="0.2597%" y="639.50">httpmq-rs`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>httpmq-rs`std::sys::unix::thread::Thread::new::thread_start (70,967 samples, 98.50%)</title><rect x="0.0097%" y="741" width="98.5010%" height="15" fill="rgb(247,38,35)" fg:x="7" fg:w="70967"/><text x="0.2597%" y="751.50">httpmq-rs`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>httpmq-rs`snappy::internal::CompressFragment (63 samples, 0.09%)</title><rect x="98.5967%" y="469" width="0.0874%" height="15" fill="rgb(228,39,49)" fg:x="71036" fg:w="63"/><text x="98.8467%" y="479.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (11 samples, 0.02%)</title><rect x="98.6842%" y="469" width="0.0153%" height="15" fill="rgb(226,101,26)" fg:x="71099" fg:w="11"/><text x="98.9342%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.01%)</title><rect x="98.6856%" y="453" width="0.0139%" height="15" fill="rgb(206,141,19)" fg:x="71100" fg:w="10"/><text x="98.9356%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="98.6870%" y="437" width="0.0125%" height="15" fill="rgb(211,200,13)" fg:x="71101" fg:w="9"/><text x="98.9370%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (8 samples, 0.01%)</title><rect x="98.6884%" y="421" width="0.0111%" height="15" fill="rgb(241,121,6)" fg:x="71102" fg:w="8"/><text x="98.9384%" y="431.50"></text></g><g><title>httpmq-rs`snappy::Compress (109 samples, 0.15%)</title><rect x="98.5912%" y="485" width="0.1513%" height="15" fill="rgb(234,221,29)" fg:x="71032" fg:w="109"/><text x="98.8412%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (19 samples, 0.03%)</title><rect x="98.7161%" y="469" width="0.0264%" height="15" fill="rgb(229,136,5)" fg:x="71122" fg:w="19"/><text x="98.9661%" y="479.50"></text></g><g><title>httpmq-rs`snappy::RawCompress (112 samples, 0.16%)</title><rect x="98.5898%" y="501" width="0.1555%" height="15" fill="rgb(238,36,11)" fg:x="71031" fg:w="112"/><text x="98.8398%" y="511.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (10 samples, 0.01%)</title><rect x="98.7467%" y="485" width="0.0139%" height="15" fill="rgb(251,55,41)" fg:x="71144" fg:w="10"/><text x="98.9967%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="98.7480%" y="469" width="0.0125%" height="15" fill="rgb(242,34,40)" fg:x="71145" fg:w="9"/><text x="98.9980%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::CompressData(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, unsigned int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (130 samples, 0.18%)</title><rect x="98.5843%" y="517" width="0.1804%" height="15" fill="rgb(215,42,17)" fg:x="71027" fg:w="130"/><text x="98.8343%" y="527.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::resize (14 samples, 0.02%)</title><rect x="98.7453%" y="501" width="0.0194%" height="15" fill="rgb(207,44,46)" fg:x="71143" fg:w="14"/><text x="98.9953%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (132 samples, 0.18%)</title><rect x="98.5843%" y="533" width="0.1832%" height="15" fill="rgb(211,206,28)" fg:x="71027" fg:w="132"/><text x="98.8343%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext const&amp;, rocksdb::UncompressionContext*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (139 samples, 0.19%)</title><rect x="98.5759%" y="549" width="0.1929%" height="15" fill="rgb(237,167,16)" fg:x="71021" fg:w="139"/><text x="98.8259%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Flush (9 samples, 0.01%)</title><rect x="98.7814%" y="517" width="0.0125%" height="15" fill="rgb(233,66,6)" fg:x="71169" fg:w="9"/><text x="99.0314%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::WriteBuffered (9 samples, 0.01%)</title><rect x="98.7814%" y="501" width="0.0125%" height="15" fill="rgb(246,123,29)" fg:x="71169" fg:w="9"/><text x="99.0314%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`write (9 samples, 0.01%)</title><rect x="98.7814%" y="485" width="0.0125%" height="15" fill="rgb(209,62,40)" fg:x="71169" fg:w="9"/><text x="99.0314%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Append (19 samples, 0.03%)</title><rect x="98.7702%" y="533" width="0.0264%" height="15" fill="rgb(218,4,25)" fg:x="71161" fg:w="19"/><text x="99.0202%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteRawBlock (48 samples, 0.07%)</title><rect x="98.7689%" y="549" width="0.0666%" height="15" fill="rgb(253,91,49)" fg:x="71160" fg:w="48"/><text x="99.0189%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::crc32c::Extend (28 samples, 0.04%)</title><rect x="98.7966%" y="533" width="0.0389%" height="15" fill="rgb(228,155,29)" fg:x="71180" fg:w="28"/><text x="99.0466%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteBlock (192 samples, 0.27%)</title><rect x="98.5745%" y="565" width="0.2665%" height="15" fill="rgb(243,57,37)" fg:x="71020" fg:w="192"/><text x="98.8245%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBuilder::Finish (8 samples, 0.01%)</title><rect x="98.8410%" y="565" width="0.0111%" height="15" fill="rgb(244,167,17)" fg:x="71212" fg:w="8"/><text x="99.0910%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::Flush (212 samples, 0.29%)</title><rect x="98.5718%" y="597" width="0.2943%" height="15" fill="rgb(207,181,38)" fg:x="71018" fg:w="212"/><text x="98.8218%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteBlock (211 samples, 0.29%)</title><rect x="98.5732%" y="581" width="0.2929%" height="15" fill="rgb(211,8,23)" fg:x="71019" fg:w="211"/><text x="98.8232%" y="591.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external (8 samples, 0.01%)</title><rect x="98.8868%" y="581" width="0.0111%" height="15" fill="rgb(235,11,44)" fg:x="71245" fg:w="8"/><text x="99.1368%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (30 samples, 0.04%)</title><rect x="98.9243%" y="501" width="0.0416%" height="15" fill="rgb(248,18,52)" fg:x="71272" fg:w="30"/><text x="99.1743%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (15 samples, 0.02%)</title><rect x="98.9451%" y="485" width="0.0208%" height="15" fill="rgb(208,4,7)" fg:x="71287" fg:w="15"/><text x="99.1951%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (45 samples, 0.06%)</title><rect x="98.9201%" y="533" width="0.0625%" height="15" fill="rgb(240,17,39)" fg:x="71269" fg:w="45"/><text x="99.1701%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (44 samples, 0.06%)</title><rect x="98.9215%" y="517" width="0.0611%" height="15" fill="rgb(207,170,3)" fg:x="71270" fg:w="44"/><text x="99.1715%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.02%)</title><rect x="98.9660%" y="501" width="0.0167%" height="15" fill="rgb(236,100,52)" fg:x="71302" fg:w="12"/><text x="99.2160%" y="511.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (46 samples, 0.06%)</title><rect x="98.9201%" y="549" width="0.0638%" height="15" fill="rgb(246,78,51)" fg:x="71269" fg:w="46"/><text x="99.1701%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.01%)</title><rect x="98.9840%" y="549" width="0.0139%" height="15" fill="rgb(211,17,15)" fg:x="71315" fg:w="10"/><text x="99.2340%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_small (11 samples, 0.02%)</title><rect x="98.9979%" y="549" width="0.0153%" height="15" fill="rgb(209,59,46)" fg:x="71325" fg:w="11"/><text x="99.2479%" y="559.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__grow_by_and_replace (84 samples, 0.12%)</title><rect x="98.9174%" y="565" width="0.1166%" height="15" fill="rgb(210,92,25)" fg:x="71267" fg:w="84"/><text x="99.1674%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="99.0229%" y="549" width="0.0111%" height="15" fill="rgb(238,174,52)" fg:x="71343" fg:w="8"/><text x="99.2729%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBuilder::Add (133 samples, 0.18%)</title><rect x="98.8660%" y="597" width="0.1846%" height="15" fill="rgb(230,73,7)" fg:x="71230" fg:w="133"/><text x="99.1160%" y="607.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (110 samples, 0.15%)</title><rect x="98.8979%" y="581" width="0.1527%" height="15" fill="rgb(243,124,40)" fg:x="71253" fg:w="110"/><text x="99.1479%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.01%)</title><rect x="99.0367%" y="565" width="0.0139%" height="15" fill="rgb(244,170,11)" fg:x="71353" fg:w="10"/><text x="99.2867%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBuilder::Add (20 samples, 0.03%)</title><rect x="99.0798%" y="581" width="0.0278%" height="15" fill="rgb(207,114,54)" fg:x="71384" fg:w="20"/><text x="99.3298%" y="591.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (11 samples, 0.02%)</title><rect x="99.0923%" y="565" width="0.0153%" height="15" fill="rgb(205,42,20)" fg:x="71393" fg:w="11"/><text x="99.3423%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::ShortenedIndexBuilder::AddIndexEntry(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (32 samples, 0.04%)</title><rect x="99.0756%" y="597" width="0.0444%" height="15" fill="rgb(230,30,28)" fg:x="71381" fg:w="32"/><text x="99.3256%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::Add (427 samples, 0.59%)</title><rect x="98.5454%" y="613" width="0.5927%" height="15" fill="rgb(205,73,54)" fg:x="70999" fg:w="427"/><text x="98.7954%" y="623.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::NextFromInput (47 samples, 0.07%)</title><rect x="99.1547%" y="597" width="0.0652%" height="15" fill="rgb(254,227,23)" fg:x="71438" fg:w="47"/><text x="99.4047%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::PrepareOutput (10 samples, 0.01%)</title><rect x="99.2200%" y="597" width="0.0139%" height="15" fill="rgb(228,202,34)" fg:x="71485" fg:w="10"/><text x="99.4700%" y="607.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (9 samples, 0.01%)</title><rect x="99.2963%" y="453" width="0.0125%" height="15" fill="rgb(222,225,37)" fg:x="71540" fg:w="9"/><text x="99.5463%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="99.2963%" y="437" width="0.0125%" height="15" fill="rgb(221,14,54)" fg:x="71540" fg:w="9"/><text x="99.5463%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="99.2963%" y="421" width="0.0125%" height="15" fill="rgb(254,102,2)" fg:x="71540" fg:w="9"/><text x="99.5463%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.01%)</title><rect x="99.2963%" y="405" width="0.0125%" height="15" fill="rgb(232,104,17)" fg:x="71540" fg:w="9"/><text x="99.5463%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*) (23 samples, 0.03%)</title><rect x="99.2852%" y="469" width="0.0319%" height="15" fill="rgb(250,220,14)" fg:x="71532" fg:w="23"/><text x="99.5352%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*) (27 samples, 0.04%)</title><rect x="99.2824%" y="485" width="0.0375%" height="15" fill="rgb(241,158,9)" fg:x="71530" fg:w="27"/><text x="99.5324%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::CheckBlockChecksum (37 samples, 0.05%)</title><rect x="99.3504%" y="437" width="0.0514%" height="15" fill="rgb(246,9,43)" fg:x="71579" fg:w="37"/><text x="99.6004%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::VerifyBlockChecksum(rocksdb::ChecksumType, char const*, unsigned long, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (36 samples, 0.05%)</title><rect x="99.3518%" y="421" width="0.0500%" height="15" fill="rgb(206,73,33)" fg:x="71580" fg:w="36"/><text x="99.6018%" y="431.50"></text></g><g><title>httpmq-rs`rocksdb::crc32c::Extend (35 samples, 0.05%)</title><rect x="99.3532%" y="405" width="0.0486%" height="15" fill="rgb(222,79,8)" fg:x="71581" fg:w="35"/><text x="99.6032%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long long, unsigned long, rocksdb::Slice*, char*, std::__1::unique_ptr&lt;char [], std::__1::default_delete (124 samples, 0.17%)</title><rect x="99.4073%" y="437" width="0.1721%" height="15" fill="rgb(234,8,54)" fg:x="71620" fg:w="124"/><text x="99.6573%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`pread (118 samples, 0.16%)</title><rect x="99.4157%" y="421" width="0.1638%" height="15" fill="rgb(209,134,38)" fg:x="71626" fg:w="118"/><text x="99.6657%" y="431.50"></text></g><g><title>httpmq-rs`snappy::RawUncompress (50 samples, 0.07%)</title><rect x="99.5836%" y="373" width="0.0694%" height="15" fill="rgb(230,127,29)" fg:x="71747" fg:w="50"/><text x="99.8336%" y="383.50"></text></g><g><title>httpmq-rs`snappy::RawUncompress (49 samples, 0.07%)</title><rect x="99.5850%" y="357" width="0.0680%" height="15" fill="rgb(242,44,41)" fg:x="71748" fg:w="49"/><text x="99.8350%" y="367.50"></text></g><g><title>httpmq-rs`void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt; (47 samples, 0.07%)</title><rect x="99.5878%" y="341" width="0.0652%" height="15" fill="rgb(222,56,43)" fg:x="71750" fg:w="47"/><text x="99.8378%" y="351.50"></text></g><g><title>httpmq-rs`rocksdb::Snappy_Uncompress (59 samples, 0.08%)</title><rect x="99.5836%" y="389" width="0.0819%" height="15" fill="rgb(238,39,47)" fg:x="71747" fg:w="59"/><text x="99.8336%" y="399.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (9 samples, 0.01%)</title><rect x="99.6530%" y="373" width="0.0125%" height="15" fill="rgb(226,79,43)" fg:x="71797" fg:w="9"/><text x="99.9030%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="99.6530%" y="357" width="0.0125%" height="15" fill="rgb(242,105,53)" fg:x="71797" fg:w="9"/><text x="99.9030%" y="367.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressBlockContents (64 samples, 0.09%)</title><rect x="99.5794%" y="437" width="0.0888%" height="15" fill="rgb(251,132,46)" fg:x="71744" fg:w="64"/><text x="99.8294%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressBlockContentsForCompressionType (63 samples, 0.09%)</title><rect x="99.5808%" y="421" width="0.0874%" height="15" fill="rgb(231,77,14)" fg:x="71745" fg:w="63"/><text x="99.8308%" y="431.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressData (61 samples, 0.08%)</title><rect x="99.5836%" y="405" width="0.0847%" height="15" fill="rgb(240,135,9)" fg:x="71747" fg:w="61"/><text x="99.8336%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::ReadBlockContents (242 samples, 0.34%)</title><rect x="99.3365%" y="453" width="0.3359%" height="15" fill="rgb(248,109,14)" fg:x="71569" fg:w="242"/><text x="99.5865%" y="463.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (16 samples, 0.02%)</title><rect x="99.6780%" y="453" width="0.0222%" height="15" fill="rgb(227,146,52)" fg:x="71815" fg:w="16"/><text x="99.9280%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.02%)</title><rect x="99.6780%" y="437" width="0.0222%" height="15" fill="rgb(232,54,3)" fg:x="71815" fg:w="16"/><text x="99.9280%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.02%)</title><rect x="99.6808%" y="421" width="0.0194%" height="15" fill="rgb(229,201,43)" fg:x="71817" fg:w="14"/><text x="99.9308%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (14 samples, 0.02%)</title><rect x="99.6808%" y="405" width="0.0194%" height="15" fill="rgb(252,161,33)" fg:x="71817" fg:w="14"/><text x="99.9308%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile&lt;rocksdb::Block&gt;(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&amp;, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, std::__1::unique_ptr&lt;rocksdb::Block, std::__1::default_delete (275 samples, 0.38%)</title><rect x="99.3241%" y="469" width="0.3817%" height="15" fill="rgb(226,146,40)" fg:x="71560" fg:w="275"/><text x="99.5741%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (289 samples, 0.40%)</title><rect x="99.3227%" y="485" width="0.4011%" height="15" fill="rgb(219,47,25)" fg:x="71559" fg:w="289"/><text x="99.5727%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (13 samples, 0.02%)</title><rect x="99.7057%" y="469" width="0.0180%" height="15" fill="rgb(250,135,13)" fg:x="71835" fg:w="13"/><text x="99.9557%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::InitDataBlock (333 samples, 0.46%)</title><rect x="99.2644%" y="517" width="0.4622%" height="15" fill="rgb(219,229,18)" fg:x="71517" fg:w="333"/><text x="99.5144%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (332 samples, 0.46%)</title><rect x="99.2658%" y="501" width="0.4608%" height="15" fill="rgb(217,152,27)" fg:x="71518" fg:w="332"/><text x="99.5158%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Next (8 samples, 0.01%)</title><rect x="99.7266%" y="517" width="0.0111%" height="15" fill="rgb(225,71,47)" fg:x="71850" fg:w="8"/><text x="99.9766%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::ParseNextIndexKey (8 samples, 0.01%)</title><rect x="99.7266%" y="501" width="0.0111%" height="15" fill="rgb(220,139,14)" fg:x="71850" fg:w="8"/><text x="99.9766%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Release (8 samples, 0.01%)</title><rect x="99.7543%" y="501" width="0.0111%" height="15" fill="rgb(247,54,32)" fg:x="71870" fg:w="8"/><text x="100.0043%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::Invalidate (38 samples, 0.05%)</title><rect x="99.7460%" y="517" width="0.0527%" height="15" fill="rgb(252,131,39)" fg:x="71864" fg:w="38"/><text x="99.9960%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.02%)</title><rect x="99.7751%" y="501" width="0.0236%" height="15" fill="rgb(210,108,39)" fg:x="71885" fg:w="17"/><text x="100.0251%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.02%)</title><rect x="99.7821%" y="485" width="0.0167%" height="15" fill="rgb(205,23,29)" fg:x="71890" fg:w="12"/><text x="100.0321%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::FindBlockForward (388 samples, 0.54%)</title><rect x="99.2644%" y="533" width="0.5385%" height="15" fill="rgb(246,139,46)" fg:x="71517" fg:w="388"/><text x="99.5144%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Next (11 samples, 0.02%)</title><rect x="99.8029%" y="533" width="0.0153%" height="15" fill="rgb(250,81,26)" fg:x="71905" fg:w="11"/><text x="100.0529%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::Next (409 samples, 0.57%)</title><rect x="99.2588%" y="549" width="0.5677%" height="15" fill="rgb(214,104,7)" fg:x="71513" fg:w="409"/><text x="99.5088%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::NextAndGetResult (417 samples, 0.58%)</title><rect x="99.2533%" y="565" width="0.5788%" height="15" fill="rgb(233,189,8)" fg:x="71509" fg:w="417"/><text x="99.5033%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::LevelIterator::NextAndGetResult (423 samples, 0.59%)</title><rect x="99.2477%" y="581" width="0.5871%" height="15" fill="rgb(228,141,17)" fg:x="71505" fg:w="423"/><text x="99.4977%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::BinaryHeap&lt;rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*, rocksdb::MinIteratorComparator&gt;::downheap (8 samples, 0.01%)</title><rect x="99.8348%" y="581" width="0.0111%" height="15" fill="rgb(247,157,1)" fg:x="71928" fg:w="8"/><text x="100.0848%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::CheckBlockChecksum (8 samples, 0.01%)</title><rect x="99.8598%" y="453" width="0.0111%" height="15" fill="rgb(249,225,5)" fg:x="71946" fg:w="8"/><text x="100.1098%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long long, unsigned long, rocksdb::Slice*, char*, std::__1::unique_ptr&lt;char [], std::__1::default_delete (9 samples, 0.01%)</title><rect x="99.8709%" y="453" width="0.0125%" height="15" fill="rgb(242,55,13)" fg:x="71954" fg:w="9"/><text x="100.1209%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`pread (9 samples, 0.01%)</title><rect x="99.8709%" y="437" width="0.0125%" height="15" fill="rgb(230,49,50)" fg:x="71954" fg:w="9"/><text x="100.1209%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::ReadBlockContents (24 samples, 0.03%)</title><rect x="99.8584%" y="469" width="0.0333%" height="15" fill="rgb(241,111,38)" fg:x="71945" fg:w="24"/><text x="100.1084%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::InitDataBlock (31 samples, 0.04%)</title><rect x="99.8529%" y="533" width="0.0430%" height="15" fill="rgb(252,155,4)" fg:x="71941" fg:w="31"/><text x="100.1029%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (31 samples, 0.04%)</title><rect x="99.8529%" y="517" width="0.0430%" height="15" fill="rgb(212,69,32)" fg:x="71941" fg:w="31"/><text x="100.1029%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (28 samples, 0.04%)</title><rect x="99.8570%" y="501" width="0.0389%" height="15" fill="rgb(243,107,47)" fg:x="71944" fg:w="28"/><text x="100.1070%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile&lt;rocksdb::Block&gt;(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&amp;, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, std::__1::unique_ptr&lt;rocksdb::Block, std::__1::default_delete (28 samples, 0.04%)</title><rect x="99.8570%" y="485" width="0.0389%" height="15" fill="rgb(247,130,12)" fg:x="71944" fg:w="28"/><text x="100.1070%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::MergingIterator::Next (475 samples, 0.66%)</title><rect x="99.2422%" y="597" width="0.6593%" height="15" fill="rgb(233,74,16)" fg:x="71501" fg:w="475"/><text x="99.4922%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::NextAndGetResult (40 samples, 0.06%)</title><rect x="99.8459%" y="581" width="0.0555%" height="15" fill="rgb(208,58,18)" fg:x="71936" fg:w="40"/><text x="100.0959%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::Next (38 samples, 0.05%)</title><rect x="99.8487%" y="565" width="0.0527%" height="15" fill="rgb(242,225,1)" fg:x="71938" fg:w="38"/><text x="100.0987%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::FindBlockForward (36 samples, 0.05%)</title><rect x="99.8515%" y="549" width="0.0500%" height="15" fill="rgb(249,39,40)" fg:x="71940" fg:w="36"/><text x="100.1015%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::Next (554 samples, 0.77%)</title><rect x="99.1395%" y="613" width="0.7689%" height="15" fill="rgb(207,72,44)" fg:x="71427" fg:w="554"/><text x="99.3895%" y="623.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::Finish (10 samples, 0.01%)</title><rect x="99.9126%" y="597" width="0.0139%" height="15" fill="rgb(215,193,12)" fg:x="71984" fg:w="10"/><text x="100.1626%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteIndexBlock (10 samples, 0.01%)</title><rect x="99.9126%" y="581" width="0.0139%" height="15" fill="rgb(248,41,39)" fg:x="71984" fg:w="10"/><text x="100.1626%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionJob::FinishCompactionOutputFile (11 samples, 0.02%)</title><rect x="99.9126%" y="613" width="0.0153%" height="15" fill="rgb(253,85,4)" fg:x="71984" fg:w="11"/><text x="100.1626%" y="623.50"></text></g><g><title>httpmq-rs`rocksdb::FileMetaData::UpdateBoundaries (8 samples, 0.01%)</title><rect x="99.9292%" y="613" width="0.0111%" height="15" fill="rgb(243,70,31)" fg:x="71996" fg:w="8"/><text x="100.1792%" y="623.50"></text></g><g><title>httpmq-rs`rocksdb::OutputValidator::Add (18 samples, 0.02%)</title><rect x="99.9445%" y="613" width="0.0250%" height="15" fill="rgb(253,195,26)" fg:x="72007" fg:w="18"/><text x="100.1945%" y="623.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionJob::ProcessKeyValueCompaction (1,051 samples, 1.46%)</title><rect x="98.5246%" y="629" width="1.4588%" height="15" fill="rgb(243,42,11)" fg:x="70984" fg:w="1051"/><text x="98.7746%" y="639.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::BackgroundCompaction (1,065 samples, 1.48%)</title><rect x="98.5176%" y="661" width="1.4782%" height="15" fill="rgb(239,66,17)" fg:x="70979" fg:w="1065"/><text x="98.7676%" y="671.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionJob::Run (1,065 samples, 1.48%)</title><rect x="98.5176%" y="645" width="1.4782%" height="15" fill="rgb(217,132,21)" fg:x="70979" fg:w="1065"/><text x="98.7676%" y="655.50"></text></g><g><title>all (72,047 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(252,202,21)" fg:x="0" fg:w="72047"/><text x="0.2500%" y="799.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (72,040 samples, 99.99%)</title><rect x="0.0097%" y="773" width="99.9903%" height="15" fill="rgb(233,98,36)" fg:x="7" fg:w="72040"/><text x="0.2597%" y="783.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (72,040 samples, 99.99%)</title><rect x="0.0097%" y="757" width="99.9903%" height="15" fill="rgb(216,153,54)" fg:x="7" fg:w="72040"/><text x="0.2597%" y="767.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>httpmq-rs`void* std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, void (*)(void*), rocksdb::BGThreadMetadata*&gt; &gt; (1,068 samples, 1.48%)</title><rect x="98.5176%" y="741" width="1.4824%" height="15" fill="rgb(250,99,7)" fg:x="70979" fg:w="1068"/><text x="98.7676%" y="751.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper (1,068 samples, 1.48%)</title><rect x="98.5176%" y="725" width="1.4824%" height="15" fill="rgb(207,56,50)" fg:x="70979" fg:w="1068"/><text x="98.7676%" y="735.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadPoolImpl::Impl::BGThread (1,068 samples, 1.48%)</title><rect x="98.5176%" y="709" width="1.4824%" height="15" fill="rgb(244,61,34)" fg:x="70979" fg:w="1068"/><text x="98.7676%" y="719.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::BGWorkCompaction (1,068 samples, 1.48%)</title><rect x="98.5176%" y="693" width="1.4824%" height="15" fill="rgb(241,50,38)" fg:x="70979" fg:w="1068"/><text x="98.7676%" y="703.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::BackgroundCallCompaction (1,068 samples, 1.48%)</title><rect x="98.5176%" y="677" width="1.4824%" height="15" fill="rgb(212,166,30)" fg:x="70979" fg:w="1068"/><text x="98.7676%" y="687.50"></text></g></svg></svg>