<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="789.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="66331"><g><title>httpmq-rs`tokio::runtime::queue::Steal&lt;T&gt;::steal_into (10 samples, 0.02%)</title><rect x="0.0075%" y="581" width="0.0151%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="10"/><text x="0.2575%" y="591.50"></text></g><g><title>httpmq-rs`&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (9 samples, 0.01%)</title><rect x="0.6965%" y="565" width="0.0136%" height="15" fill="rgb(217,0,24)" fg:x="462" fg:w="9"/><text x="0.9465%" y="575.50"></text></g><g><title>httpmq-rs`parking_lot::condvar::Condvar::notify_one_slow (10 samples, 0.02%)</title><rect x="0.7101%" y="565" width="0.0151%" height="15" fill="rgb(221,193,54)" fg:x="471" fg:w="10"/><text x="0.9601%" y="575.50"></text></g><g><title>httpmq-rs`std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.02%)</title><rect x="0.7327%" y="565" width="0.0151%" height="15" fill="rgb(248,212,6)" fg:x="486" fg:w="10"/><text x="0.9827%" y="575.50"></text></g><g><title>httpmq-rs`tokio::runtime::queue::Steal&lt;T&gt;::steal_into (151 samples, 0.23%)</title><rect x="0.7478%" y="565" width="0.2276%" height="15" fill="rgb(208,68,35)" fg:x="496" fg:w="151"/><text x="0.9978%" y="575.50"></text></g><g><title>httpmq-rs`tokio::io::driver::Driver::turn (10 samples, 0.02%)</title><rect x="1.5754%" y="517" width="0.0151%" height="15" fill="rgb(232,128,0)" fg:x="1045" fg:w="10"/><text x="1.8254%" y="527.50"></text></g><g><title>httpmq-rs`tokio::signal::unix::driver::Driver::process (10 samples, 0.02%)</title><rect x="1.5935%" y="517" width="0.0151%" height="15" fill="rgb(207,160,47)" fg:x="1057" fg:w="10"/><text x="1.8435%" y="527.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (18 samples, 0.03%)</title><rect x="1.6825%" y="501" width="0.0271%" height="15" fill="rgb(228,23,34)" fg:x="1116" fg:w="18"/><text x="1.9325%" y="511.50"></text></g><g><title> 32]&gt; (18 samples, 0.03%)</title><rect x="1.6825%" y="485" width="0.0271%" height="15" fill="rgb(218,30,26)" fg:x="1116" fg:w="18"/><text x="1.9325%" y="495.50"></text></g><g><title>httpmq-rs`mio::event::event::Event::token (20 samples, 0.03%)</title><rect x="1.7232%" y="501" width="0.0302%" height="15" fill="rgb(220,122,19)" fg:x="1143" fg:w="20"/><text x="1.9732%" y="511.50"></text></g><g><title>httpmq-rs`std::time::Instant::checked_duration_since (27 samples, 0.04%)</title><rect x="1.7624%" y="501" width="0.0407%" height="15" fill="rgb(250,228,42)" fg:x="1169" fg:w="27"/><text x="2.0124%" y="511.50"></text></g><g><title>httpmq-rs`mio::poll::Poll::poll (60 samples, 0.09%)</title><rect x="2.0096%" y="485" width="0.0905%" height="15" fill="rgb(240,193,28)" fg:x="1333" fg:w="60"/><text x="2.2596%" y="495.50"></text></g><g><title>httpmq-rs`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (7 samples, 0.01%)</title><rect x="2.1378%" y="453" width="0.0106%" height="15" fill="rgb(216,20,37)" fg:x="1418" fg:w="7"/><text x="2.3878%" y="463.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::ref_dec (11 samples, 0.02%)</title><rect x="2.1483%" y="453" width="0.0166%" height="15" fill="rgb(206,188,39)" fg:x="1425" fg:w="11"/><text x="2.3983%" y="463.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_notified_by_val (24 samples, 0.04%)</title><rect x="2.1649%" y="453" width="0.0362%" height="15" fill="rgb(217,207,13)" fg:x="1436" fg:w="24"/><text x="2.4149%" y="463.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (14 samples, 0.02%)</title><rect x="2.2373%" y="421" width="0.0211%" height="15" fill="rgb(231,73,38)" fg:x="1484" fg:w="14"/><text x="2.4873%" y="431.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Shared::schedule_local (7 samples, 0.01%)</title><rect x="2.2584%" y="421" width="0.0106%" height="15" fill="rgb(225,20,46)" fg:x="1498" fg:w="7"/><text x="2.5084%" y="431.50"></text></g><g><title>httpmq-rs`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (66 samples, 0.10%)</title><rect x="2.2056%" y="437" width="0.0995%" height="15" fill="rgb(210,31,41)" fg:x="1463" fg:w="66"/><text x="2.4556%" y="447.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (24 samples, 0.04%)</title><rect x="2.2689%" y="421" width="0.0362%" height="15" fill="rgb(221,200,47)" fg:x="1505" fg:w="24"/><text x="2.5189%" y="431.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (119 samples, 0.18%)</title><rect x="2.1363%" y="469" width="0.1794%" height="15" fill="rgb(226,26,5)" fg:x="1417" fg:w="119"/><text x="2.3863%" y="479.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (76 samples, 0.11%)</title><rect x="2.2011%" y="453" width="0.1146%" height="15" fill="rgb(249,33,26)" fg:x="1460" fg:w="76"/><text x="2.4511%" y="463.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (7 samples, 0.01%)</title><rect x="2.3051%" y="437" width="0.0106%" height="15" fill="rgb(235,183,28)" fg:x="1529" fg:w="7"/><text x="2.5551%" y="447.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_notified_by_val (15 samples, 0.02%)</title><rect x="2.3322%" y="469" width="0.0226%" height="15" fill="rgb(221,5,38)" fg:x="1547" fg:w="15"/><text x="2.5822%" y="479.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::wake0 (172 samples, 0.26%)</title><rect x="2.1001%" y="485" width="0.2593%" height="15" fill="rgb(247,18,42)" fg:x="1393" fg:w="172"/><text x="2.3501%" y="495.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (10 samples, 0.02%)</title><rect x="2.3594%" y="485" width="0.0151%" height="15" fill="rgb(241,131,45)" fg:x="1565" fg:w="10"/><text x="2.6094%" y="495.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::waker::wake_by_val (17 samples, 0.03%)</title><rect x="2.3745%" y="485" width="0.0256%" height="15" fill="rgb(249,31,29)" fg:x="1575" fg:w="17"/><text x="2.6245%" y="495.50"></text></g><g><title>httpmq-rs`tokio::io::driver::Driver::turn (2,049 samples, 3.09%)</title><rect x="1.8031%" y="501" width="3.0891%" height="15" fill="rgb(225,111,53)" fg:x="1196" fg:w="2049"/><text x="2.0531%" y="511.50">htt..</text></g><g><title>libsystem_kernel.dylib`kevent (1,653 samples, 2.49%)</title><rect x="2.4001%" y="485" width="2.4920%" height="15" fill="rgb(238,160,17)" fg:x="1592" fg:w="1653"/><text x="2.6501%" y="495.50">li..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (7 samples, 0.01%)</title><rect x="4.8921%" y="501" width="0.0106%" height="15" fill="rgb(214,148,48)" fg:x="3245" fg:w="7"/><text x="5.1421%" y="511.50"></text></g><g><title>httpmq-rs`tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (31 samples, 0.05%)</title><rect x="4.9027%" y="501" width="0.0467%" height="15" fill="rgb(232,36,49)" fg:x="3252" fg:w="31"/><text x="5.1527%" y="511.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (40 samples, 0.06%)</title><rect x="4.9630%" y="485" width="0.0603%" height="15" fill="rgb(209,103,24)" fg:x="3292" fg:w="40"/><text x="5.2130%" y="495.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (25 samples, 0.04%)</title><rect x="4.9856%" y="469" width="0.0377%" height="15" fill="rgb(229,88,8)" fg:x="3307" fg:w="25"/><text x="5.2356%" y="479.50"></text></g><g><title>httpmq-rs`tokio::signal::unix::driver::Driver::process (66 samples, 0.10%)</title><rect x="4.9494%" y="501" width="0.0995%" height="15" fill="rgb(213,181,19)" fg:x="3283" fg:w="66"/><text x="5.1994%" y="511.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.02%)</title><rect x="5.0263%" y="485" width="0.0226%" height="15" fill="rgb(254,191,54)" fg:x="3334" fg:w="15"/><text x="5.2763%" y="495.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (44 samples, 0.07%)</title><rect x="5.1273%" y="485" width="0.0663%" height="15" fill="rgb(241,83,37)" fg:x="3401" fg:w="44"/><text x="5.3773%" y="495.50"></text></g><g><title> 32]&gt; (44 samples, 0.07%)</title><rect x="5.1273%" y="469" width="0.0663%" height="15" fill="rgb(233,36,39)" fg:x="3401" fg:w="44"/><text x="5.3773%" y="479.50"></text></g><g><title>httpmq-rs`tokio::time::driver::wheel::Wheel::next_expiration (32 samples, 0.05%)</title><rect x="5.1952%" y="485" width="0.0482%" height="15" fill="rgb(226,3,54)" fg:x="3446" fg:w="32"/><text x="5.4452%" y="495.50"></text></g><g><title>httpmq-rs`tokio::time::driver::wheel::level::Level::next_expiration (20 samples, 0.03%)</title><rect x="5.2132%" y="469" width="0.0302%" height="15" fill="rgb(245,192,40)" fg:x="3458" fg:w="20"/><text x="5.4632%" y="479.50"></text></g><g><title>httpmq-rs`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (131 samples, 0.20%)</title><rect x="5.0565%" y="501" width="0.1975%" height="15" fill="rgb(238,167,29)" fg:x="3354" fg:w="131"/><text x="5.3065%" y="511.50"></text></g><g><title>httpmq-rs`tokio::time::driver::wheel::level::Level::next_expiration (7 samples, 0.01%)</title><rect x="5.2434%" y="485" width="0.0106%" height="15" fill="rgb(232,182,51)" fg:x="3478" fg:w="7"/><text x="5.4934%" y="495.50"></text></g><g><title>httpmq-rs`tokio::time::driver::wheel::Wheel::next_expiration (27 samples, 0.04%)</title><rect x="5.2540%" y="501" width="0.0407%" height="15" fill="rgb(231,60,39)" fg:x="3485" fg:w="27"/><text x="5.5040%" y="511.50"></text></g><g><title>httpmq-rs`tokio::time::driver::wheel::level::Level::next_expiration (24 samples, 0.04%)</title><rect x="5.2585%" y="485" width="0.0362%" height="15" fill="rgb(208,69,12)" fg:x="3488" fg:w="24"/><text x="5.5085%" y="495.50"></text></g><g><title>httpmq-rs`tokio::time::driver::Driver&lt;P&gt;::park_internal (2,470 samples, 3.72%)</title><rect x="1.6086%" y="517" width="3.7237%" height="15" fill="rgb(235,93,37)" fg:x="1067" fg:w="2470"/><text x="1.8586%" y="527.50">http..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (23 samples, 0.03%)</title><rect x="5.2977%" y="501" width="0.0347%" height="15" fill="rgb(213,116,39)" fg:x="3514" fg:w="23"/><text x="5.5477%" y="511.50"></text></g><g><title>httpmq-rs`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (2,527 samples, 3.81%)</title><rect x="1.5347%" y="533" width="3.8097%" height="15" fill="rgb(222,207,29)" fg:x="1018" fg:w="2527"/><text x="1.7847%" y="543.50">http..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (8 samples, 0.01%)</title><rect x="5.3323%" y="517" width="0.0121%" height="15" fill="rgb(206,96,30)" fg:x="3537" fg:w="8"/><text x="5.5823%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1,419 samples, 2.14%)</title><rect x="5.5389%" y="517" width="2.1393%" height="15" fill="rgb(218,138,4)" fg:x="3674" fg:w="1419"/><text x="5.7889%" y="527.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (10 samples, 0.02%)</title><rect x="7.7490%" y="501" width="0.0151%" height="15" fill="rgb(250,191,14)" fg:x="5140" fg:w="10"/><text x="7.9990%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (32 samples, 0.05%)</title><rect x="7.7656%" y="485" width="0.0482%" height="15" fill="rgb(239,60,40)" fg:x="5151" fg:w="32"/><text x="8.0156%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (36 samples, 0.05%)</title><rect x="7.7641%" y="501" width="0.0543%" height="15" fill="rgb(206,27,48)" fg:x="5150" fg:w="36"/><text x="8.0141%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (58 samples, 0.09%)</title><rect x="7.8184%" y="501" width="0.0874%" height="15" fill="rgb(225,35,8)" fg:x="5186" fg:w="58"/><text x="8.0684%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (165 samples, 0.25%)</title><rect x="7.6782%" y="517" width="0.2488%" height="15" fill="rgb(250,213,24)" fg:x="5093" fg:w="165"/><text x="7.9282%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (14 samples, 0.02%)</title><rect x="7.9058%" y="501" width="0.0211%" height="15" fill="rgb(247,123,22)" fg:x="5244" fg:w="14"/><text x="8.1558%" y="511.50"></text></g><g><title>httpmq-rs`parking_lot::condvar::Condvar::wait_until_internal (1,728 samples, 2.61%)</title><rect x="5.3489%" y="533" width="2.6051%" height="15" fill="rgb(231,138,38)" fg:x="3548" fg:w="1728"/><text x="5.5989%" y="543.50">ht..</text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (7 samples, 0.01%)</title><rect x="7.9435%" y="517" width="0.0106%" height="15" fill="rgb(231,145,46)" fg:x="5269" fg:w="7"/><text x="8.1935%" y="527.50"></text></g><g><title>httpmq-rs`&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (4,568 samples, 6.89%)</title><rect x="1.1201%" y="549" width="6.8867%" height="15" fill="rgb(251,118,11)" fg:x="743" fg:w="4568"/><text x="1.3701%" y="559.50">httpmq-rs..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (20 samples, 0.03%)</title><rect x="7.9767%" y="533" width="0.0302%" height="15" fill="rgb(217,147,25)" fg:x="5291" fg:w="20"/><text x="8.2267%" y="543.50"></text></g><g><title>httpmq-rs`tokio::io::driver::Driver::turn (48 samples, 0.07%)</title><rect x="8.0234%" y="501" width="0.0724%" height="15" fill="rgb(247,81,37)" fg:x="5322" fg:w="48"/><text x="8.2734%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`kevent (44 samples, 0.07%)</title><rect x="8.0294%" y="485" width="0.0663%" height="15" fill="rgb(209,12,38)" fg:x="5326" fg:w="44"/><text x="8.2794%" y="495.50"></text></g><g><title>httpmq-rs`tokio::time::driver::Driver&lt;P&gt;::park_internal (62 samples, 0.09%)</title><rect x="8.0174%" y="517" width="0.0935%" height="15" fill="rgb(227,1,9)" fg:x="5318" fg:w="62"/><text x="8.2674%" y="527.50"></text></g><g><title>httpmq-rs`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park_timeout (65 samples, 0.10%)</title><rect x="8.0174%" y="533" width="0.0980%" height="15" fill="rgb(248,47,43)" fg:x="5318" fg:w="65"/><text x="8.2674%" y="543.50"></text></g><g><title>httpmq-rs`&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park_timeout (73 samples, 0.11%)</title><rect x="8.0068%" y="549" width="0.1101%" height="15" fill="rgb(221,10,30)" fg:x="5311" fg:w="73"/><text x="8.2568%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (73 samples, 0.11%)</title><rect x="8.1319%" y="533" width="0.1101%" height="15" fill="rgb(210,229,1)" fg:x="5394" fg:w="73"/><text x="8.3819%" y="543.50"></text></g><g><title>httpmq-rs`parking_lot::condvar::Condvar::notify_one_slow (85 samples, 0.13%)</title><rect x="8.1199%" y="549" width="0.1281%" height="15" fill="rgb(222,148,37)" fg:x="5386" fg:w="85"/><text x="8.3699%" y="559.50"></text></g><g><title>httpmq-rs`parking_lot::condvar::Condvar::wait_until_internal (10 samples, 0.02%)</title><rect x="8.2480%" y="549" width="0.0151%" height="15" fill="rgb(234,67,33)" fg:x="5471" fg:w="10"/><text x="8.4980%" y="559.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Shared::notify_parked (8 samples, 0.01%)</title><rect x="8.2631%" y="549" width="0.0121%" height="15" fill="rgb(247,98,35)" fg:x="5481" fg:w="8"/><text x="8.5131%" y="559.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Context::park_timeout (4,845 samples, 7.30%)</title><rect x="0.9754%" y="565" width="7.3043%" height="15" fill="rgb(247,138,52)" fg:x="647" fg:w="4845"/><text x="1.2254%" y="575.50">httpmq-rs`..</text></g><g><title>httpmq-rs`&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (19 samples, 0.03%)</title><rect x="8.3113%" y="549" width="0.0286%" height="15" fill="rgb(213,79,30)" fg:x="5513" fg:w="19"/><text x="8.5613%" y="559.50"></text></g><g><title>httpmq-rs`parking_lot_core::parking_lot::lock_bucket_pair (42 samples, 0.06%)</title><rect x="8.3762%" y="533" width="0.0633%" height="15" fill="rgb(246,177,23)" fg:x="5556" fg:w="42"/><text x="8.6262%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (763 samples, 1.15%)</title><rect x="8.4395%" y="533" width="1.1503%" height="15" fill="rgb(230,62,27)" fg:x="5598" fg:w="763"/><text x="8.6895%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (9 samples, 0.01%)</title><rect x="9.5898%" y="533" width="0.0136%" height="15" fill="rgb(216,154,8)" fg:x="6361" fg:w="9"/><text x="9.8398%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (9 samples, 0.01%)</title><rect x="9.6049%" y="533" width="0.0136%" height="15" fill="rgb(244,35,45)" fg:x="6371" fg:w="9"/><text x="9.8549%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (24 samples, 0.04%)</title><rect x="9.6184%" y="533" width="0.0362%" height="15" fill="rgb(251,115,12)" fg:x="6380" fg:w="24"/><text x="9.8684%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (24 samples, 0.04%)</title><rect x="9.6184%" y="517" width="0.0362%" height="15" fill="rgb(240,54,50)" fg:x="6380" fg:w="24"/><text x="9.8684%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (23 samples, 0.03%)</title><rect x="9.6546%" y="533" width="0.0347%" height="15" fill="rgb(233,84,52)" fg:x="6404" fg:w="23"/><text x="9.9046%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (8 samples, 0.01%)</title><rect x="9.6772%" y="517" width="0.0121%" height="15" fill="rgb(207,117,47)" fg:x="6419" fg:w="8"/><text x="9.9272%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (11 samples, 0.02%)</title><rect x="9.6893%" y="533" width="0.0166%" height="15" fill="rgb(249,43,39)" fg:x="6427" fg:w="11"/><text x="9.9393%" y="543.50"></text></g><g><title>httpmq-rs`parking_lot::condvar::Condvar::notify_one_slow (906 samples, 1.37%)</title><rect x="8.3445%" y="549" width="1.3659%" height="15" fill="rgb(209,38,44)" fg:x="5535" fg:w="906"/><text x="8.5945%" y="559.50"></text></g><g><title>httpmq-rs`&lt;hyper::server::conn::spawn_all::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (9 samples, 0.01%)</title><rect x="9.7858%" y="533" width="0.0136%" height="15" fill="rgb(236,212,23)" fg:x="6491" fg:w="9"/><text x="10.0358%" y="543.50"></text></g><g><title>httpmq-rs`core::task::poll::Poll&lt;T&gt;::map (8 samples, 0.01%)</title><rect x="9.7993%" y="533" width="0.0121%" height="15" fill="rgb(242,79,21)" fg:x="6500" fg:w="8"/><text x="10.0493%" y="543.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.01%)</title><rect x="10.0134%" y="485" width="0.0121%" height="15" fill="rgb(211,96,35)" fg:x="6642" fg:w="8"/><text x="10.2634%" y="495.50"></text></g><g><title>httpmq-rs`&lt;http_body::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::is_end_stream (17 samples, 0.03%)</title><rect x="10.0345%" y="485" width="0.0256%" height="15" fill="rgb(253,215,40)" fg:x="6656" fg:w="17"/><text x="10.2845%" y="495.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (9 samples, 0.01%)</title><rect x="10.0677%" y="485" width="0.0136%" height="15" fill="rgb(211,81,21)" fg:x="6678" fg:w="9"/><text x="10.3177%" y="495.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (8 samples, 0.01%)</title><rect x="10.0813%" y="485" width="0.0121%" height="15" fill="rgb(208,190,38)" fg:x="6687" fg:w="8"/><text x="10.3313%" y="495.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (14 samples, 0.02%)</title><rect x="10.0933%" y="485" width="0.0211%" height="15" fill="rgb(235,213,38)" fg:x="6695" fg:w="14"/><text x="10.3433%" y="495.50"></text></g><g><title>httpmq-rs`core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (18 samples, 0.03%)</title><rect x="10.1280%" y="485" width="0.0271%" height="15" fill="rgb(237,122,38)" fg:x="6718" fg:w="18"/><text x="10.3780%" y="495.50"></text></g><g><title>httpmq-rs`hyper::body::body::Body::new (10 samples, 0.02%)</title><rect x="10.1551%" y="485" width="0.0151%" height="15" fill="rgb(244,218,35)" fg:x="6736" fg:w="10"/><text x="10.4051%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::Wants::contains (9 samples, 0.01%)</title><rect x="10.1702%" y="485" width="0.0136%" height="15" fill="rgb(240,68,47)" fg:x="6746" fg:w="9"/><text x="10.4202%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (15 samples, 0.02%)</title><rect x="10.1883%" y="485" width="0.0226%" height="15" fill="rgb(210,16,53)" fg:x="6758" fg:w="15"/><text x="10.4383%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (8 samples, 0.01%)</title><rect x="10.2124%" y="485" width="0.0121%" height="15" fill="rgb(235,124,12)" fg:x="6774" fg:w="8"/><text x="10.4624%" y="495.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (17 samples, 0.03%)</title><rect x="10.6948%" y="469" width="0.0256%" height="15" fill="rgb(224,169,11)" fg:x="7094" fg:w="17"/><text x="10.9448%" y="479.50"></text></g><g><title>httpmq-rs`&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (7 samples, 0.01%)</title><rect x="10.7521%" y="453" width="0.0106%" height="15" fill="rgb(250,166,2)" fg:x="7132" fg:w="7"/><text x="11.0021%" y="463.50"></text></g><g><title>httpmq-rs`&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::poll_ready (18 samples, 0.03%)</title><rect x="10.7627%" y="453" width="0.0271%" height="15" fill="rgb(242,216,29)" fg:x="7139" fg:w="18"/><text x="11.0127%" y="463.50"></text></g><g><title>httpmq-rs`&lt;axum::error_handling::HandleError&lt;S,F,()&gt; as tower_service::Service&lt;http::request::Request&lt;ReqBody&gt;&gt;&gt;::call (10 samples, 0.02%)</title><rect x="10.8622%" y="437" width="0.0151%" height="15" fill="rgb(230,116,27)" fg:x="7205" fg:w="10"/><text x="11.1122%" y="447.50"></text></g><g><title>httpmq-rs`&lt;axum::error_handling::future::HandleErrorFuture as core::future::future::Future&gt;::poll (7 samples, 0.01%)</title><rect x="10.8773%" y="437" width="0.0106%" height="15" fill="rgb(228,99,48)" fg:x="7215" fg:w="7"/><text x="11.1273%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (7 samples, 0.01%)</title><rect x="10.9738%" y="389" width="0.0106%" height="15" fill="rgb(253,11,6)" fg:x="7279" fg:w="7"/><text x="11.2238%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (11 samples, 0.02%)</title><rect x="11.0778%" y="309" width="0.0166%" height="15" fill="rgb(247,143,39)" fg:x="7348" fg:w="11"/><text x="11.3278%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (9 samples, 0.01%)</title><rect x="11.0944%" y="309" width="0.0136%" height="15" fill="rgb(236,97,10)" fg:x="7359" fg:w="9"/><text x="11.3444%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (90 samples, 0.14%)</title><rect x="10.9888%" y="373" width="0.1357%" height="15" fill="rgb(233,208,19)" fg:x="7289" fg:w="90"/><text x="11.2388%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (79 samples, 0.12%)</title><rect x="11.0054%" y="357" width="0.1191%" height="15" fill="rgb(216,164,2)" fg:x="7300" fg:w="79"/><text x="11.2554%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (77 samples, 0.12%)</title><rect x="11.0084%" y="341" width="0.1161%" height="15" fill="rgb(220,129,5)" fg:x="7302" fg:w="77"/><text x="11.2584%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (46 samples, 0.07%)</title><rect x="11.0552%" y="325" width="0.0693%" height="15" fill="rgb(242,17,10)" fg:x="7333" fg:w="46"/><text x="11.3052%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (11 samples, 0.02%)</title><rect x="11.1079%" y="309" width="0.0166%" height="15" fill="rgb(242,107,0)" fg:x="7368" fg:w="11"/><text x="11.3579%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_memalign (20 samples, 0.03%)</title><rect x="11.1245%" y="373" width="0.0302%" height="15" fill="rgb(251,28,31)" fg:x="7379" fg:w="20"/><text x="11.3745%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="11.1547%" y="373" width="0.0106%" height="15" fill="rgb(233,223,10)" fg:x="7399" fg:w="7"/><text x="11.4047%" y="383.50"></text></g><g><title>httpmq-rs`__rdl_alloc (134 samples, 0.20%)</title><rect x="10.9707%" y="405" width="0.2020%" height="15" fill="rgb(215,21,27)" fg:x="7277" fg:w="134"/><text x="11.2207%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (125 samples, 0.19%)</title><rect x="10.9843%" y="389" width="0.1884%" height="15" fill="rgb(232,23,21)" fg:x="7286" fg:w="125"/><text x="11.2343%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (21 samples, 0.03%)</title><rect x="11.1728%" y="405" width="0.0317%" height="15" fill="rgb(244,5,23)" fg:x="7411" fg:w="21"/><text x="11.4228%" y="415.50"></text></g><g><title>httpmq-rs`&lt;axum::error_handling::HandleError&lt;S,F,()&gt; as tower_service::Service&lt;http::request::Request&lt;ReqBody&gt;&gt;&gt;::call (223 samples, 0.34%)</title><rect x="10.8969%" y="421" width="0.3362%" height="15" fill="rgb(226,81,46)" fg:x="7228" fg:w="223"/><text x="11.1469%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.03%)</title><rect x="11.2044%" y="405" width="0.0286%" height="15" fill="rgb(247,70,30)" fg:x="7432" fg:w="19"/><text x="11.4544%" y="415.50"></text></g><g><title>httpmq-rs`__rdl_alloc (10 samples, 0.02%)</title><rect x="11.2361%" y="421" width="0.0151%" height="15" fill="rgb(212,68,19)" fg:x="7453" fg:w="10"/><text x="11.4861%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.05%)</title><rect x="11.2632%" y="389" width="0.0482%" height="15" fill="rgb(240,187,13)" fg:x="7471" fg:w="32"/><text x="11.5132%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (36 samples, 0.05%)</title><rect x="11.2587%" y="405" width="0.0543%" height="15" fill="rgb(223,113,26)" fg:x="7468" fg:w="36"/><text x="11.5087%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.06%)</title><rect x="11.2511%" y="421" width="0.0648%" height="15" fill="rgb(206,192,2)" fg:x="7463" fg:w="43"/><text x="11.5011%" y="431.50"></text></g><g><title>httpmq-rs`&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (295 samples, 0.44%)</title><rect x="10.8878%" y="437" width="0.4447%" height="15" fill="rgb(241,108,4)" fg:x="7222" fg:w="295"/><text x="11.1378%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="11.3190%" y="421" width="0.0136%" height="15" fill="rgb(247,173,49)" fg:x="7508" fg:w="9"/><text x="11.5690%" y="431.50"></text></g><g><title>httpmq-rs`&lt;tokio::time::driver::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="11.6084%" y="389" width="0.0196%" height="15" fill="rgb(224,114,35)" fg:x="7700" fg:w="13"/><text x="11.8584%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (20 samples, 0.03%)</title><rect x="11.7291%" y="309" width="0.0302%" height="15" fill="rgb(245,159,27)" fg:x="7780" fg:w="20"/><text x="11.9791%" y="319.50"></text></g><g><title>httpmq-rs`http::extensions::Extensions::insert (68 samples, 0.10%)</title><rect x="11.6582%" y="373" width="0.1025%" height="15" fill="rgb(245,172,44)" fg:x="7733" fg:w="68"/><text x="11.9082%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (56 samples, 0.08%)</title><rect x="11.6763%" y="357" width="0.0844%" height="15" fill="rgb(236,23,11)" fg:x="7745" fg:w="56"/><text x="11.9263%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (51 samples, 0.08%)</title><rect x="11.6838%" y="341" width="0.0769%" height="15" fill="rgb(205,117,38)" fg:x="7750" fg:w="51"/><text x="11.9338%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (51 samples, 0.08%)</title><rect x="11.6838%" y="325" width="0.0769%" height="15" fill="rgb(237,72,25)" fg:x="7750" fg:w="51"/><text x="11.9338%" y="335.50"></text></g><g><title>httpmq-rs`std::time::Instant::checked_add (10 samples, 0.02%)</title><rect x="11.7969%" y="357" width="0.0151%" height="15" fill="rgb(244,70,9)" fg:x="7825" fg:w="10"/><text x="12.0469%" y="367.50"></text></g><g><title>httpmq-rs`tokio::runtime::context::time_handle (30 samples, 0.05%)</title><rect x="11.8120%" y="357" width="0.0452%" height="15" fill="rgb(217,125,39)" fg:x="7835" fg:w="30"/><text x="12.0620%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="11.8572%" y="357" width="0.0106%" height="15" fill="rgb(235,36,10)" fg:x="7865" fg:w="7"/><text x="12.1072%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (14 samples, 0.02%)</title><rect x="11.8678%" y="357" width="0.0211%" height="15" fill="rgb(251,123,47)" fg:x="7872" fg:w="14"/><text x="12.1178%" y="367.50"></text></g><g><title>httpmq-rs`tokio::time::driver::sleep::sleep (84 samples, 0.13%)</title><rect x="11.7683%" y="373" width="0.1266%" height="15" fill="rgb(221,13,13)" fg:x="7806" fg:w="84"/><text x="12.0183%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (8 samples, 0.01%)</title><rect x="11.8949%" y="373" width="0.0121%" height="15" fill="rgb(238,131,9)" fg:x="7890" fg:w="8"/><text x="12.1449%" y="383.50"></text></g><g><title>httpmq-rs`&lt;tower::timeout::Timeout&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (212 samples, 0.32%)</title><rect x="11.6280%" y="389" width="0.3196%" height="15" fill="rgb(211,50,8)" fg:x="7713" fg:w="212"/><text x="11.8780%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.03%)</title><rect x="11.9130%" y="373" width="0.0347%" height="15" fill="rgb(245,182,24)" fg:x="7902" fg:w="23"/><text x="12.1630%" y="383.50"></text></g><g><title>httpmq-rs`&lt;axum::handler::future::IntoServiceFuture as core::future::future::Future&gt;::poll (8 samples, 0.01%)</title><rect x="11.9853%" y="373" width="0.0121%" height="15" fill="rgb(242,14,37)" fg:x="7950" fg:w="8"/><text x="12.2353%" y="383.50"></text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.02%)</title><rect x="12.0924%" y="341" width="0.0241%" height="15" fill="rgb(246,228,12)" fg:x="8021" fg:w="16"/><text x="12.3424%" y="351.50"></text></g><g><title>httpmq-rs`&lt;alloc::borrow::Cow&lt;str&gt; as axum_core::response::IntoResponse&gt;::into_response (13 samples, 0.02%)</title><rect x="12.1798%" y="325" width="0.0196%" height="15" fill="rgb(213,55,15)" fg:x="8079" fg:w="13"/><text x="12.4298%" y="335.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="12.1994%" y="325" width="0.0121%" height="15" fill="rgb(209,9,3)" fg:x="8092" fg:w="8"/><text x="12.4494%" y="335.50"></text></g><g><title>httpmq-rs`&lt;T as core::any::Any&gt;::type_id (11 samples, 0.02%)</title><rect x="12.5854%" y="309" width="0.0166%" height="15" fill="rgb(230,59,30)" fg:x="8348" fg:w="11"/><text x="12.8354%" y="319.50"></text></g><g><title>httpmq-rs`http::header::map::Danger::is_yellow (7 samples, 0.01%)</title><rect x="12.6562%" y="293" width="0.0106%" height="15" fill="rgb(209,121,21)" fg:x="8395" fg:w="7"/><text x="12.9062%" y="303.50"></text></g><g><title>httpmq-rs`http::header::map::hash_elem_using (9 samples, 0.01%)</title><rect x="12.7904%" y="277" width="0.0136%" height="15" fill="rgb(220,109,13)" fg:x="8484" fg:w="9"/><text x="13.0404%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (7 samples, 0.01%)</title><rect x="12.8673%" y="229" width="0.0106%" height="15" fill="rgb(232,18,1)" fg:x="8535" fg:w="7"/><text x="13.1173%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.01%)</title><rect x="12.8809%" y="229" width="0.0121%" height="15" fill="rgb(215,41,42)" fg:x="8544" fg:w="8"/><text x="13.1309%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.06%)</title><rect x="12.8929%" y="229" width="0.0573%" height="15" fill="rgb(224,123,36)" fg:x="8552" fg:w="38"/><text x="13.1429%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.01%)</title><rect x="12.9397%" y="213" width="0.0106%" height="15" fill="rgb(240,125,3)" fg:x="8583" fg:w="7"/><text x="13.1897%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (100 samples, 0.15%)</title><rect x="12.8070%" y="245" width="0.1508%" height="15" fill="rgb(205,98,50)" fg:x="8495" fg:w="100"/><text x="13.0570%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (105 samples, 0.16%)</title><rect x="12.8040%" y="277" width="0.1583%" height="15" fill="rgb(205,185,37)" fg:x="8493" fg:w="105"/><text x="13.0540%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (103 samples, 0.16%)</title><rect x="12.8070%" y="261" width="0.1553%" height="15" fill="rgb(238,207,15)" fg:x="8495" fg:w="103"/><text x="13.0570%" y="271.50"></text></g><g><title>httpmq-rs`http::header::map::HeaderMap&lt;T&gt;::insert (208 samples, 0.31%)</title><rect x="12.6668%" y="293" width="0.3136%" height="15" fill="rgb(213,199,42)" fg:x="8402" fg:w="208"/><text x="12.9168%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="12.9683%" y="277" width="0.0121%" height="15" fill="rgb(235,201,11)" fg:x="8602" fg:w="8"/><text x="13.2183%" y="287.50"></text></g><g><title>httpmq-rs`http::header::map::hash_elem_using (8 samples, 0.01%)</title><rect x="12.9804%" y="293" width="0.0121%" height="15" fill="rgb(207,46,11)" fg:x="8610" fg:w="8"/><text x="13.2304%" y="303.50"></text></g><g><title>httpmq-rs`http::header::value::is_visible_ascii (11 samples, 0.02%)</title><rect x="12.9924%" y="293" width="0.0166%" height="15" fill="rgb(241,35,35)" fg:x="8618" fg:w="11"/><text x="13.2424%" y="303.50"></text></g><g><title>httpmq-rs`mime::Source::as_ref (10 samples, 0.02%)</title><rect x="13.0165%" y="293" width="0.0151%" height="15" fill="rgb(243,32,47)" fg:x="8634" fg:w="10"/><text x="13.2665%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.02%)</title><rect x="13.0995%" y="245" width="0.0241%" height="15" fill="rgb(247,202,23)" fg:x="8689" fg:w="16"/><text x="13.3495%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (51 samples, 0.08%)</title><rect x="13.0482%" y="261" width="0.0769%" height="15" fill="rgb(219,102,11)" fg:x="8655" fg:w="51"/><text x="13.2982%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (63 samples, 0.09%)</title><rect x="13.0316%" y="293" width="0.0950%" height="15" fill="rgb(243,110,44)" fg:x="8644" fg:w="63"/><text x="13.2816%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (52 samples, 0.08%)</title><rect x="13.0482%" y="277" width="0.0784%" height="15" fill="rgb(222,74,54)" fg:x="8655" fg:w="52"/><text x="13.2982%" y="287.50"></text></g><g><title>httpmq-rs`&lt;alloc::borrow::Cow&lt;str&gt; as axum_core::response::IntoResponse&gt;::into_response (363 samples, 0.55%)</title><rect x="12.6020%" y="309" width="0.5473%" height="15" fill="rgb(216,99,12)" fg:x="8359" fg:w="363"/><text x="12.8520%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (14 samples, 0.02%)</title><rect x="13.2442%" y="245" width="0.0211%" height="15" fill="rgb(226,22,26)" fg:x="8785" fg:w="14"/><text x="13.4942%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (60 samples, 0.09%)</title><rect x="13.1884%" y="261" width="0.0905%" height="15" fill="rgb(217,163,10)" fg:x="8748" fg:w="60"/><text x="13.4384%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.01%)</title><rect x="13.2653%" y="245" width="0.0136%" height="15" fill="rgb(213,25,53)" fg:x="8799" fg:w="9"/><text x="13.5153%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (65 samples, 0.10%)</title><rect x="13.1839%" y="277" width="0.0980%" height="15" fill="rgb(252,105,26)" fg:x="8745" fg:w="65"/><text x="13.4339%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (80 samples, 0.12%)</title><rect x="13.1658%" y="293" width="0.1206%" height="15" fill="rgb(220,39,43)" fg:x="8733" fg:w="80"/><text x="13.4158%" y="303.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::clone::Clone&gt;::clone (104 samples, 0.16%)</title><rect x="13.1492%" y="309" width="0.1568%" height="15" fill="rgb(229,68,48)" fg:x="8722" fg:w="104"/><text x="13.3992%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="13.2894%" y="293" width="0.0166%" height="15" fill="rgb(252,8,32)" fg:x="8815" fg:w="11"/><text x="13.5394%" y="303.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (20 samples, 0.03%)</title><rect x="13.3060%" y="309" width="0.0302%" height="15" fill="rgb(223,20,43)" fg:x="8826" fg:w="20"/><text x="13.5560%" y="319.50"></text></g><g><title>httpmq-rs`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (14 samples, 0.02%)</title><rect x="13.3361%" y="309" width="0.0211%" height="15" fill="rgb(229,81,49)" fg:x="8846" fg:w="14"/><text x="13.5861%" y="319.50"></text></g><g><title>httpmq-rs`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (10 samples, 0.02%)</title><rect x="13.4055%" y="293" width="0.0151%" height="15" fill="rgb(236,28,36)" fg:x="8892" fg:w="10"/><text x="13.6555%" y="303.50"></text></g><g><title>httpmq-rs`&lt;form_urlencoded::Parse as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="13.5532%" y="261" width="0.0106%" height="15" fill="rgb(249,185,26)" fg:x="8990" fg:w="7"/><text x="13.8032%" y="271.50"></text></g><g><title>httpmq-rs`&lt;serde_urlencoded::de::Part as serde::de::Deserializer&gt;::deserialize_any (18 samples, 0.03%)</title><rect x="13.5638%" y="261" width="0.0271%" height="15" fill="rgb(249,174,33)" fg:x="8997" fg:w="18"/><text x="13.8138%" y="271.50"></text></g><g><title>httpmq-rs`alloc::string::String::from_utf8_lossy (8 samples, 0.01%)</title><rect x="13.8487%" y="229" width="0.0121%" height="15" fill="rgb(233,201,37)" fg:x="9186" fg:w="8"/><text x="14.0987%" y="239.50"></text></g><g><title>httpmq-rs`&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (133 samples, 0.20%)</title><rect x="14.1955%" y="197" width="0.2005%" height="15" fill="rgb(221,78,26)" fg:x="9416" fg:w="133"/><text x="14.4455%" y="207.50"></text></g><g><title>httpmq-rs`alloc::string::String::from_utf8_lossy (156 samples, 0.24%)</title><rect x="14.1623%" y="213" width="0.2352%" height="15" fill="rgb(250,127,30)" fg:x="9394" fg:w="156"/><text x="14.4123%" y="223.50"></text></g><g><title>httpmq-rs`core::str::lossy::Utf8Lossy::from_bytes (19 samples, 0.03%)</title><rect x="14.4035%" y="213" width="0.0286%" height="15" fill="rgb(230,49,44)" fg:x="9554" fg:w="19"/><text x="14.6535%" y="223.50"></text></g><g><title>httpmq-rs`percent_encoding::PercentDecode::if_any (8 samples, 0.01%)</title><rect x="14.4322%" y="213" width="0.0121%" height="15" fill="rgb(229,67,23)" fg:x="9573" fg:w="8"/><text x="14.6822%" y="223.50"></text></g><g><title>httpmq-rs`form_urlencoded::decode (563 samples, 0.85%)</title><rect x="13.8608%" y="229" width="0.8488%" height="15" fill="rgb(249,83,47)" fg:x="9194" fg:w="563"/><text x="14.1108%" y="239.50"></text></g><g><title>httpmq-rs`percent_encoding::_&lt;impl core::convert::From&lt;percent_encoding::PercentDecode&gt; for alloc::borrow::Cow&lt;[u8]&gt;&gt;::from (176 samples, 0.27%)</title><rect x="14.4442%" y="213" width="0.2653%" height="15" fill="rgb(215,43,3)" fg:x="9581" fg:w="176"/><text x="14.6942%" y="223.50"></text></g><g><title>httpmq-rs`percent_encoding::PercentDecode::if_any (165 samples, 0.25%)</title><rect x="14.4608%" y="197" width="0.2488%" height="15" fill="rgb(238,154,13)" fg:x="9592" fg:w="165"/><text x="14.7108%" y="207.50"></text></g><g><title>httpmq-rs`&lt;form_urlencoded::Parse as core::iter::traits::iterator::Iterator&gt;::next (732 samples, 1.10%)</title><rect x="13.6196%" y="245" width="1.1036%" height="15" fill="rgb(219,56,2)" fg:x="9034" fg:w="732"/><text x="13.8696%" y="255.50"></text></g><g><title>httpmq-rs`percent_encoding::_&lt;impl core::convert::From&lt;percent_encoding::PercentDecode&gt; for alloc::borrow::Cow&lt;[u8]&gt;&gt;::from (9 samples, 0.01%)</title><rect x="14.7096%" y="229" width="0.0136%" height="15" fill="rgb(233,0,4)" fg:x="9757" fg:w="9"/><text x="14.9596%" y="239.50"></text></g><g><title>httpmq-rs`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (816 samples, 1.23%)</title><rect x="13.5095%" y="277" width="1.2302%" height="15" fill="rgb(235,30,7)" fg:x="8961" fg:w="816"/><text x="13.7595%" y="287.50"></text></g><g><title>httpmq-rs`&lt;serde_urlencoded::de::PartIterator as core::iter::traits::iterator::Iterator&gt;::next (759 samples, 1.14%)</title><rect x="13.5955%" y="261" width="1.1443%" height="15" fill="rgb(250,79,13)" fg:x="9018" fg:w="759"/><text x="13.8455%" y="271.50"></text></g><g><title>httpmq-rs`form_urlencoded::decode (11 samples, 0.02%)</title><rect x="14.7231%" y="245" width="0.0166%" height="15" fill="rgb(211,146,34)" fg:x="9766" fg:w="11"/><text x="14.9731%" y="255.50"></text></g><g><title>httpmq-rs`&lt;serde_urlencoded::de::Part as serde::de::IntoDeserializer&gt;::into_deserializer (8 samples, 0.01%)</title><rect x="14.7457%" y="277" width="0.0121%" height="15" fill="rgb(228,22,38)" fg:x="9781" fg:w="8"/><text x="14.9957%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (131 samples, 0.20%)</title><rect x="14.7819%" y="245" width="0.1975%" height="15" fill="rgb(235,168,5)" fg:x="9805" fg:w="131"/><text x="15.0319%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (48 samples, 0.07%)</title><rect x="14.9071%" y="229" width="0.0724%" height="15" fill="rgb(221,155,16)" fg:x="9888" fg:w="48"/><text x="15.1571%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.02%)</title><rect x="14.9583%" y="213" width="0.0211%" height="15" fill="rgb(215,215,53)" fg:x="9922" fg:w="14"/><text x="15.2083%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (147 samples, 0.22%)</title><rect x="14.7593%" y="277" width="0.2216%" height="15" fill="rgb(223,4,10)" fg:x="9790" fg:w="147"/><text x="15.0093%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (137 samples, 0.21%)</title><rect x="14.7744%" y="261" width="0.2065%" height="15" fill="rgb(234,103,6)" fg:x="9800" fg:w="137"/><text x="15.0244%" y="271.50"></text></g><g><title>httpmq-rs`&lt;serde_urlencoded::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (1,073 samples, 1.62%)</title><rect x="13.4206%" y="293" width="1.6176%" height="15" fill="rgb(227,97,0)" fg:x="8902" fg:w="1073"/><text x="13.6706%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (35 samples, 0.05%)</title><rect x="14.9855%" y="277" width="0.0528%" height="15" fill="rgb(234,150,53)" fg:x="9940" fg:w="35"/><text x="15.2355%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="15.0533%" y="293" width="0.0106%" height="15" fill="rgb(228,201,54)" fg:x="9985" fg:w="7"/><text x="15.3033%" y="303.50"></text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,143 samples, 1.72%)</title><rect x="13.3573%" y="309" width="1.7232%" height="15" fill="rgb(222,22,37)" fg:x="8860" fg:w="1143"/><text x="13.6073%" y="319.50"></text></g><g><title>httpmq-rs`&lt;serde_urlencoded::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.01%)</title><rect x="15.0955%" y="309" width="0.0136%" height="15" fill="rgb(237,53,32)" fg:x="10013" fg:w="9"/><text x="15.3455%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (20 samples, 0.03%)</title><rect x="15.1784%" y="261" width="0.0302%" height="15" fill="rgb(233,25,53)" fg:x="10068" fg:w="20"/><text x="15.4284%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (13 samples, 0.02%)</title><rect x="15.1890%" y="245" width="0.0196%" height="15" fill="rgb(210,40,34)" fg:x="10075" fg:w="13"/><text x="15.4390%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.01%)</title><rect x="15.1950%" y="229" width="0.0136%" height="15" fill="rgb(241,220,44)" fg:x="10079" fg:w="9"/><text x="15.4450%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.01%)</title><rect x="15.1950%" y="213" width="0.0136%" height="15" fill="rgb(235,28,35)" fg:x="10079" fg:w="9"/><text x="15.4450%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.02%)</title><rect x="15.2116%" y="261" width="0.0151%" height="15" fill="rgb(210,56,17)" fg:x="10090" fg:w="10"/><text x="15.4616%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.02%)</title><rect x="15.2116%" y="245" width="0.0151%" height="15" fill="rgb(224,130,29)" fg:x="10090" fg:w="10"/><text x="15.4616%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (45 samples, 0.07%)</title><rect x="15.1603%" y="277" width="0.0678%" height="15" fill="rgb(235,212,8)" fg:x="10056" fg:w="45"/><text x="15.4103%" y="287.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (58 samples, 0.09%)</title><rect x="15.1453%" y="293" width="0.0874%" height="15" fill="rgb(223,33,50)" fg:x="10046" fg:w="58"/><text x="15.3953%" y="303.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (80 samples, 0.12%)</title><rect x="15.1287%" y="309" width="0.1206%" height="15" fill="rgb(219,149,13)" fg:x="10035" fg:w="80"/><text x="15.3787%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (11 samples, 0.02%)</title><rect x="15.2327%" y="293" width="0.0166%" height="15" fill="rgb(250,156,29)" fg:x="10104" fg:w="11"/><text x="15.4827%" y="303.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::new (7 samples, 0.01%)</title><rect x="15.2568%" y="309" width="0.0106%" height="15" fill="rgb(216,193,19)" fg:x="10120" fg:w="7"/><text x="15.5068%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.02%)</title><rect x="15.3714%" y="197" width="0.0226%" height="15" fill="rgb(216,135,14)" fg:x="10196" fg:w="15"/><text x="15.6214%" y="207.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (50 samples, 0.08%)</title><rect x="15.3216%" y="261" width="0.0754%" height="15" fill="rgb(241,47,5)" fg:x="10163" fg:w="50"/><text x="15.5716%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (47 samples, 0.07%)</title><rect x="15.3262%" y="245" width="0.0709%" height="15" fill="rgb(233,42,35)" fg:x="10166" fg:w="47"/><text x="15.5762%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (40 samples, 0.06%)</title><rect x="15.3367%" y="229" width="0.0603%" height="15" fill="rgb(231,13,6)" fg:x="10173" fg:w="40"/><text x="15.5867%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (38 samples, 0.06%)</title><rect x="15.3397%" y="213" width="0.0573%" height="15" fill="rgb(207,181,40)" fg:x="10175" fg:w="38"/><text x="15.5897%" y="223.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (59 samples, 0.09%)</title><rect x="15.3156%" y="277" width="0.0889%" height="15" fill="rgb(254,173,49)" fg:x="10159" fg:w="59"/><text x="15.5656%" y="287.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (9 samples, 0.01%)</title><rect x="15.4046%" y="277" width="0.0136%" height="15" fill="rgb(221,1,38)" fg:x="10218" fg:w="9"/><text x="15.6546%" y="287.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (78 samples, 0.12%)</title><rect x="15.3066%" y="293" width="0.1176%" height="15" fill="rgb(206,124,46)" fg:x="10153" fg:w="78"/><text x="15.5566%" y="303.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="15.4242%" y="293" width="0.0241%" height="15" fill="rgb(249,21,11)" fg:x="10231" fg:w="16"/><text x="15.6742%" y="303.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::pad_integral (17 samples, 0.03%)</title><rect x="15.4483%" y="293" width="0.0256%" height="15" fill="rgb(222,201,40)" fg:x="10247" fg:w="17"/><text x="15.6983%" y="303.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::pad_integral::write_prefix (7 samples, 0.01%)</title><rect x="15.4739%" y="293" width="0.0106%" height="15" fill="rgb(235,61,29)" fg:x="10264" fg:w="7"/><text x="15.7239%" y="303.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::pad_integral (7 samples, 0.01%)</title><rect x="15.4845%" y="293" width="0.0106%" height="15" fill="rgb(219,207,3)" fg:x="10271" fg:w="7"/><text x="15.7345%" y="303.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::pad_integral::write_prefix (7 samples, 0.01%)</title><rect x="15.4845%" y="277" width="0.0106%" height="15" fill="rgb(222,56,46)" fg:x="10271" fg:w="7"/><text x="15.7345%" y="287.50"></text></g><g><title>httpmq-rs`core::fmt::num::imp::_&lt;impl core::fmt::Display for i32&gt;::fmt (153 samples, 0.23%)</title><rect x="15.2674%" y="309" width="0.2307%" height="15" fill="rgb(239,76,54)" fg:x="10127" fg:w="153"/><text x="15.5174%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.02%)</title><rect x="15.5614%" y="261" width="0.0211%" height="15" fill="rgb(231,124,27)" fg:x="10322" fg:w="14"/><text x="15.8114%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.02%)</title><rect x="15.5674%" y="245" width="0.0151%" height="15" fill="rgb(249,195,6)" fg:x="10326" fg:w="10"/><text x="15.8174%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.02%)</title><rect x="15.5674%" y="229" width="0.0151%" height="15" fill="rgb(237,174,47)" fg:x="10326" fg:w="10"/><text x="15.8174%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (34 samples, 0.05%)</title><rect x="15.6352%" y="245" width="0.0513%" height="15" fill="rgb(206,201,31)" fg:x="10371" fg:w="34"/><text x="15.8852%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (70 samples, 0.11%)</title><rect x="15.5825%" y="261" width="0.1055%" height="15" fill="rgb(231,57,52)" fg:x="10336" fg:w="70"/><text x="15.8325%" y="271.50"></text></g><g><title>httpmq-rs`bytes::bytes::shared_drop (93 samples, 0.14%)</title><rect x="15.5508%" y="277" width="0.1402%" height="15" fill="rgb(248,177,22)" fg:x="10315" fg:w="93"/><text x="15.8008%" y="287.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="15.6985%" y="277" width="0.0241%" height="15" fill="rgb(215,211,37)" fg:x="10413" fg:w="16"/><text x="15.9485%" y="287.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::extract::matched_path::MatchedPath&gt; (20 samples, 0.03%)</title><rect x="15.7227%" y="277" width="0.0302%" height="15" fill="rgb(241,128,51)" fg:x="10429" fg:w="20"/><text x="15.9727%" y="287.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::option::Option&lt;axum::routing::UrlParams&gt;&gt; (10 samples, 0.02%)</title><rect x="15.7528%" y="277" width="0.0151%" height="15" fill="rgb(227,165,31)" fg:x="10449" fg:w="10"/><text x="16.0028%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (38 samples, 0.06%)</title><rect x="15.7739%" y="277" width="0.0573%" height="15" fill="rgb(228,167,24)" fg:x="10463" fg:w="38"/><text x="16.0239%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (38 samples, 0.06%)</title><rect x="15.8659%" y="261" width="0.0573%" height="15" fill="rgb(228,143,12)" fg:x="10524" fg:w="38"/><text x="16.1159%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (37 samples, 0.06%)</title><rect x="15.8674%" y="245" width="0.0558%" height="15" fill="rgb(249,149,8)" fg:x="10525" fg:w="37"/><text x="16.1174%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (61 samples, 0.09%)</title><rect x="15.8342%" y="277" width="0.0920%" height="15" fill="rgb(243,35,44)" fg:x="10503" fg:w="61"/><text x="16.0842%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (58 samples, 0.09%)</title><rect x="16.1086%" y="261" width="0.0874%" height="15" fill="rgb(246,89,9)" fg:x="10685" fg:w="58"/><text x="16.3586%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (65 samples, 0.10%)</title><rect x="16.3347%" y="245" width="0.0980%" height="15" fill="rgb(233,213,13)" fg:x="10835" fg:w="65"/><text x="16.5847%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (194 samples, 0.29%)</title><rect x="16.1960%" y="261" width="0.2925%" height="15" fill="rgb(233,141,41)" fg:x="10743" fg:w="194"/><text x="16.4460%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (37 samples, 0.06%)</title><rect x="16.4327%" y="245" width="0.0558%" height="15" fill="rgb(239,167,4)" fg:x="10900" fg:w="37"/><text x="16.6827%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (381 samples, 0.57%)</title><rect x="15.9262%" y="277" width="0.5744%" height="15" fill="rgb(209,217,16)" fg:x="10564" fg:w="381"/><text x="16.1762%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (8 samples, 0.01%)</title><rect x="16.4885%" y="261" width="0.0121%" height="15" fill="rgb(219,88,35)" fg:x="10937" fg:w="8"/><text x="16.7385%" y="271.50"></text></g><g><title>httpmq-rs`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (661 samples, 1.00%)</title><rect x="15.5146%" y="293" width="0.9965%" height="15" fill="rgb(220,193,23)" fg:x="10291" fg:w="661"/><text x="15.7646%" y="303.50"></text></g><g><title>httpmq-rs`bytes::bytes::promotable_even_drop (7 samples, 0.01%)</title><rect x="16.5157%" y="293" width="0.0106%" height="15" fill="rgb(230,90,52)" fg:x="10955" fg:w="7"/><text x="16.7657%" y="303.50"></text></g><g><title>httpmq-rs`bytes::bytes::static_drop (10 samples, 0.02%)</title><rect x="16.5292%" y="293" width="0.0151%" height="15" fill="rgb(252,106,19)" fg:x="10964" fg:w="10"/><text x="16.7792%" y="303.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::shared_v_drop (7 samples, 0.01%)</title><rect x="16.5443%" y="293" width="0.0106%" height="15" fill="rgb(206,74,20)" fg:x="10974" fg:w="7"/><text x="16.7943%" y="303.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt; (9 samples, 0.01%)</title><rect x="16.5549%" y="293" width="0.0136%" height="15" fill="rgb(230,138,44)" fg:x="10981" fg:w="9"/><text x="16.8049%" y="303.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::extract::request_parts::OriginalUri&gt; (7 samples, 0.01%)</title><rect x="16.5775%" y="293" width="0.0106%" height="15" fill="rgb(235,182,43)" fg:x="10996" fg:w="7"/><text x="16.8275%" y="303.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::routing::RouteId&gt; (15 samples, 0.02%)</title><rect x="16.5880%" y="293" width="0.0226%" height="15" fill="rgb(242,16,51)" fg:x="11003" fg:w="15"/><text x="16.8380%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`small_size (28 samples, 0.04%)</title><rect x="16.6559%" y="245" width="0.0422%" height="15" fill="rgb(248,9,4)" fg:x="11048" fg:w="28"/><text x="16.9059%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.05%)</title><rect x="16.6544%" y="261" width="0.0528%" height="15" fill="rgb(210,31,22)" fg:x="11047" fg:w="35"/><text x="16.9044%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (17 samples, 0.03%)</title><rect x="16.7523%" y="245" width="0.0256%" height="15" fill="rgb(239,54,39)" fg:x="11112" fg:w="17"/><text x="17.0023%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (61 samples, 0.09%)</title><rect x="16.7071%" y="261" width="0.0920%" height="15" fill="rgb(230,99,41)" fg:x="11082" fg:w="61"/><text x="16.9571%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (14 samples, 0.02%)</title><rect x="16.7780%" y="245" width="0.0211%" height="15" fill="rgb(253,106,12)" fg:x="11129" fg:w="14"/><text x="17.0280%" y="255.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::shared_v_drop (106 samples, 0.16%)</title><rect x="16.6423%" y="277" width="0.1598%" height="15" fill="rgb(213,46,41)" fg:x="11039" fg:w="106"/><text x="16.8923%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (30 samples, 0.05%)</title><rect x="16.8021%" y="277" width="0.0452%" height="15" fill="rgb(215,133,35)" fg:x="11145" fg:w="30"/><text x="17.0521%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (68 samples, 0.10%)</title><rect x="16.8488%" y="277" width="0.1025%" height="15" fill="rgb(213,28,5)" fg:x="11176" fg:w="68"/><text x="17.0988%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (58 samples, 0.09%)</title><rect x="16.8639%" y="261" width="0.0874%" height="15" fill="rgb(215,77,49)" fg:x="11186" fg:w="58"/><text x="17.1139%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (56 samples, 0.08%)</title><rect x="16.8669%" y="245" width="0.0844%" height="15" fill="rgb(248,100,22)" fg:x="11188" fg:w="56"/><text x="17.1169%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (36 samples, 0.05%)</title><rect x="17.0614%" y="261" width="0.0543%" height="15" fill="rgb(208,67,9)" fg:x="11317" fg:w="36"/><text x="17.3114%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (34 samples, 0.05%)</title><rect x="17.2152%" y="245" width="0.0513%" height="15" fill="rgb(219,133,21)" fg:x="11419" fg:w="34"/><text x="17.4652%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (124 samples, 0.19%)</title><rect x="17.1172%" y="261" width="0.1869%" height="15" fill="rgb(246,46,29)" fg:x="11354" fg:w="124"/><text x="17.3672%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (25 samples, 0.04%)</title><rect x="17.2664%" y="245" width="0.0377%" height="15" fill="rgb(246,185,52)" fg:x="11453" fg:w="25"/><text x="17.5164%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (241 samples, 0.36%)</title><rect x="16.9514%" y="277" width="0.3633%" height="15" fill="rgb(252,136,11)" fg:x="11244" fg:w="241"/><text x="17.2014%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (7 samples, 0.01%)</title><rect x="17.3041%" y="261" width="0.0106%" height="15" fill="rgb(219,138,53)" fg:x="11478" fg:w="7"/><text x="17.5541%" y="271.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (478 samples, 0.72%)</title><rect x="16.6182%" y="293" width="0.7206%" height="15" fill="rgb(211,51,23)" fg:x="11023" fg:w="478"/><text x="16.8682%" y="303.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (12 samples, 0.02%)</title><rect x="17.3388%" y="293" width="0.0181%" height="15" fill="rgb(247,221,28)" fg:x="11501" fg:w="12"/><text x="17.5888%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (15 samples, 0.02%)</title><rect x="17.3569%" y="293" width="0.0226%" height="15" fill="rgb(251,222,45)" fg:x="11513" fg:w="15"/><text x="17.6069%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.03%)</title><rect x="17.3825%" y="293" width="0.0332%" height="15" fill="rgb(217,162,53)" fg:x="11530" fg:w="22"/><text x="17.6325%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (12 samples, 0.02%)</title><rect x="17.3976%" y="277" width="0.0181%" height="15" fill="rgb(229,93,14)" fg:x="11540" fg:w="12"/><text x="17.6476%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (12 samples, 0.02%)</title><rect x="17.3976%" y="261" width="0.0181%" height="15" fill="rgb(209,67,49)" fg:x="11540" fg:w="12"/><text x="17.6476%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (15 samples, 0.02%)</title><rect x="17.4760%" y="277" width="0.0226%" height="15" fill="rgb(213,87,29)" fg:x="11592" fg:w="15"/><text x="17.7260%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (26 samples, 0.04%)</title><rect x="17.5544%" y="261" width="0.0392%" height="15" fill="rgb(205,151,52)" fg:x="11644" fg:w="26"/><text x="17.8044%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (83 samples, 0.13%)</title><rect x="17.4986%" y="277" width="0.1251%" height="15" fill="rgb(253,215,39)" fg:x="11607" fg:w="83"/><text x="17.7486%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (20 samples, 0.03%)</title><rect x="17.5936%" y="261" width="0.0302%" height="15" fill="rgb(221,220,41)" fg:x="11670" fg:w="20"/><text x="17.8436%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (139 samples, 0.21%)</title><rect x="17.4157%" y="293" width="0.2096%" height="15" fill="rgb(218,133,21)" fg:x="11552" fg:w="139"/><text x="17.6657%" y="303.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum_core::extract::RequestParts&lt;hyper::body::body::Body&gt;&gt; (1,418 samples, 2.14%)</title><rect x="15.4980%" y="309" width="2.1378%" height="15" fill="rgb(221,193,43)" fg:x="10280" fg:w="1418"/><text x="15.7480%" y="319.50">h..</text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;httpmq_rs::service::process::{{closure}}&gt;&gt; (7 samples, 0.01%)</title><rect x="17.6358%" y="309" width="0.0106%" height="15" fill="rgb(240,128,52)" fg:x="11698" fg:w="7"/><text x="17.8858%" y="319.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (8 samples, 0.01%)</title><rect x="17.6494%" y="309" width="0.0121%" height="15" fill="rgb(253,114,12)" fg:x="11707" fg:w="8"/><text x="17.8994%" y="319.50"></text></g><g><title>httpmq-rs`http::header::map::HeaderMap&lt;T&gt;::insert (10 samples, 0.02%)</title><rect x="17.6614%" y="309" width="0.0151%" height="15" fill="rgb(215,223,47)" fg:x="11715" fg:w="10"/><text x="17.9114%" y="319.50"></text></g><g><title>httpmq-rs`http::header::value::is_visible_ascii (13 samples, 0.02%)</title><rect x="17.6765%" y="309" width="0.0196%" height="15" fill="rgb(248,225,23)" fg:x="11725" fg:w="13"/><text x="17.9265%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (34 samples, 0.05%)</title><rect x="17.8062%" y="277" width="0.0513%" height="15" fill="rgb(250,108,0)" fg:x="11811" fg:w="34"/><text x="18.0562%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (31 samples, 0.05%)</title><rect x="17.8107%" y="261" width="0.0467%" height="15" fill="rgb(228,208,7)" fg:x="11814" fg:w="31"/><text x="18.0607%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (30 samples, 0.05%)</title><rect x="17.8122%" y="245" width="0.0452%" height="15" fill="rgb(244,45,10)" fg:x="11815" fg:w="30"/><text x="18.0622%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.02%)</title><rect x="17.8378%" y="229" width="0.0196%" height="15" fill="rgb(207,125,25)" fg:x="11832" fg:w="13"/><text x="18.0878%" y="239.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::clone::Clone&gt;::clone (48 samples, 0.07%)</title><rect x="17.7881%" y="293" width="0.0724%" height="15" fill="rgb(210,195,18)" fg:x="11799" fg:w="48"/><text x="18.0381%" y="303.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.01%)</title><rect x="17.8604%" y="293" width="0.0106%" height="15" fill="rgb(249,80,12)" fg:x="11847" fg:w="7"/><text x="18.1104%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (13 samples, 0.02%)</title><rect x="17.9569%" y="245" width="0.0196%" height="15" fill="rgb(221,65,9)" fg:x="11911" fg:w="13"/><text x="18.2069%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (7 samples, 0.01%)</title><rect x="17.9660%" y="229" width="0.0106%" height="15" fill="rgb(235,49,36)" fg:x="11917" fg:w="7"/><text x="18.2160%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (31 samples, 0.05%)</title><rect x="17.9403%" y="261" width="0.0467%" height="15" fill="rgb(225,32,20)" fg:x="11900" fg:w="31"/><text x="18.1903%" y="271.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (35 samples, 0.05%)</title><rect x="17.9373%" y="277" width="0.0528%" height="15" fill="rgb(215,141,46)" fg:x="11898" fg:w="35"/><text x="18.1873%" y="287.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (64 samples, 0.10%)</title><rect x="17.9087%" y="293" width="0.0965%" height="15" fill="rgb(250,160,47)" fg:x="11879" fg:w="64"/><text x="18.1587%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 0.02%)</title><rect x="17.9901%" y="277" width="0.0151%" height="15" fill="rgb(216,222,40)" fg:x="11933" fg:w="10"/><text x="18.2401%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (30 samples, 0.05%)</title><rect x="18.0655%" y="229" width="0.0452%" height="15" fill="rgb(234,217,39)" fg:x="11983" fg:w="30"/><text x="18.3155%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.04%)</title><rect x="18.0685%" y="213" width="0.0422%" height="15" fill="rgb(207,178,40)" fg:x="11985" fg:w="28"/><text x="18.3185%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (26 samples, 0.04%)</title><rect x="18.0715%" y="197" width="0.0392%" height="15" fill="rgb(221,136,13)" fg:x="11987" fg:w="26"/><text x="18.3215%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="18.0956%" y="181" width="0.0151%" height="15" fill="rgb(249,199,10)" fg:x="12003" fg:w="10"/><text x="18.3456%" y="191.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (32 samples, 0.05%)</title><rect x="18.0640%" y="245" width="0.0482%" height="15" fill="rgb(249,222,13)" fg:x="11982" fg:w="32"/><text x="18.3140%" y="255.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (40 samples, 0.06%)</title><rect x="18.0594%" y="261" width="0.0603%" height="15" fill="rgb(244,185,38)" fg:x="11979" fg:w="40"/><text x="18.3094%" y="271.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (49 samples, 0.07%)</title><rect x="18.0519%" y="277" width="0.0739%" height="15" fill="rgb(236,202,9)" fg:x="11974" fg:w="49"/><text x="18.3019%" y="287.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::pad_integral (16 samples, 0.02%)</title><rect x="18.1258%" y="277" width="0.0241%" height="15" fill="rgb(250,229,37)" fg:x="12023" fg:w="16"/><text x="18.3758%" y="287.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::pad_integral::write_prefix (7 samples, 0.01%)</title><rect x="18.1499%" y="277" width="0.0106%" height="15" fill="rgb(206,174,23)" fg:x="12039" fg:w="7"/><text x="18.3999%" y="287.50"></text></g><g><title>httpmq-rs`core::fmt::num::imp::_&lt;impl core::fmt::Display for i32&gt;::fmt (115 samples, 0.17%)</title><rect x="18.0097%" y="293" width="0.1734%" height="15" fill="rgb(211,33,43)" fg:x="11946" fg:w="115"/><text x="18.2597%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="18.1665%" y="277" width="0.0166%" height="15" fill="rgb(245,58,50)" fg:x="12050" fg:w="11"/><text x="18.4165%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (29 samples, 0.04%)</title><rect x="18.3775%" y="213" width="0.0437%" height="15" fill="rgb(244,68,36)" fg:x="12190" fg:w="29"/><text x="18.6275%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (90 samples, 0.14%)</title><rect x="18.2871%" y="229" width="0.1357%" height="15" fill="rgb(232,229,15)" fg:x="12130" fg:w="90"/><text x="18.5371%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (105 samples, 0.16%)</title><rect x="18.2675%" y="261" width="0.1583%" height="15" fill="rgb(254,30,23)" fg:x="12117" fg:w="105"/><text x="18.5175%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (94 samples, 0.14%)</title><rect x="18.2841%" y="245" width="0.1417%" height="15" fill="rgb(235,160,14)" fg:x="12128" fg:w="94"/><text x="18.5341%" y="255.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::clone::Clone&gt;::clone (114 samples, 0.17%)</title><rect x="18.2630%" y="277" width="0.1719%" height="15" fill="rgb(212,155,44)" fg:x="12114" fg:w="114"/><text x="18.5130%" y="287.50"></text></g><g><title>httpmq-rs`core::num::_&lt;impl core::str::traits::FromStr for i32&gt;::from_str (22 samples, 0.03%)</title><rect x="18.4589%" y="261" width="0.0332%" height="15" fill="rgb(226,2,50)" fg:x="12244" fg:w="22"/><text x="18.7089%" y="271.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 0.11%)</title><rect x="18.4348%" y="277" width="0.1101%" height="15" fill="rgb(234,177,6)" fg:x="12228" fg:w="73"/><text x="18.6848%" y="287.50"></text></g><g><title>httpmq-rs`core::str::converts::from_utf8 (35 samples, 0.05%)</title><rect x="18.4921%" y="261" width="0.0528%" height="15" fill="rgb(217,24,9)" fg:x="12266" fg:w="35"/><text x="18.7421%" y="271.50"></text></g><g><title>httpmq-rs`&lt;rocksdb::db_options::ReadOptions as core::default::Default&gt;::default (9 samples, 0.01%)</title><rect x="18.5449%" y="277" width="0.0136%" height="15" fill="rgb(220,13,46)" fg:x="12301" fg:w="9"/><text x="18.7949%" y="287.50"></text></g><g><title>httpmq-rs`__rdl_realloc (10 samples, 0.02%)</title><rect x="18.6157%" y="245" width="0.0151%" height="15" fill="rgb(239,221,27)" fg:x="12348" fg:w="10"/><text x="18.8657%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_good_size (7 samples, 0.01%)</title><rect x="18.6896%" y="213" width="0.0106%" height="15" fill="rgb(222,198,25)" fg:x="12397" fg:w="7"/><text x="18.9396%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="18.7062%" y="197" width="0.0121%" height="15" fill="rgb(211,99,13)" fg:x="12408" fg:w="8"/><text x="18.9562%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.01%)</title><rect x="18.7077%" y="181" width="0.0106%" height="15" fill="rgb(232,111,31)" fg:x="12409" fg:w="7"/><text x="18.9577%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (14 samples, 0.02%)</title><rect x="18.7002%" y="213" width="0.0211%" height="15" fill="rgb(245,82,37)" fg:x="12404" fg:w="14"/><text x="18.9502%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (33 samples, 0.05%)</title><rect x="18.6730%" y="229" width="0.0498%" height="15" fill="rgb(227,149,46)" fg:x="12386" fg:w="33"/><text x="18.9230%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (72 samples, 0.11%)</title><rect x="18.6383%" y="245" width="0.1085%" height="15" fill="rgb(218,36,50)" fg:x="12363" fg:w="72"/><text x="18.8883%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.02%)</title><rect x="18.7303%" y="229" width="0.0166%" height="15" fill="rgb(226,80,48)" fg:x="12424" fg:w="11"/><text x="18.9803%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.01%)</title><rect x="18.7348%" y="213" width="0.0121%" height="15" fill="rgb(238,224,15)" fg:x="12427" fg:w="8"/><text x="18.9848%" y="223.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (104 samples, 0.16%)</title><rect x="18.5931%" y="261" width="0.1568%" height="15" fill="rgb(241,136,10)" fg:x="12333" fg:w="104"/><text x="18.8431%" y="271.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (129 samples, 0.19%)</title><rect x="18.5735%" y="277" width="0.1945%" height="15" fill="rgb(208,32,45)" fg:x="12320" fg:w="129"/><text x="18.8235%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (12 samples, 0.02%)</title><rect x="18.7499%" y="261" width="0.0181%" height="15" fill="rgb(207,135,9)" fg:x="12437" fg:w="12"/><text x="18.9999%" y="271.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (13 samples, 0.02%)</title><rect x="18.7680%" y="277" width="0.0196%" height="15" fill="rgb(206,86,44)" fg:x="12449" fg:w="13"/><text x="19.0180%" y="287.50"></text></g><g><title>httpmq-rs`core::iter::traits::iterator::Iterator::unzip (13 samples, 0.02%)</title><rect x="18.7876%" y="277" width="0.0196%" height="15" fill="rgb(245,177,15)" fg:x="12462" fg:w="13"/><text x="19.0376%" y="287.50"></text></g><g><title>httpmq-rs`core::num::_&lt;impl core::str::traits::FromStr for i32&gt;::from_str (7 samples, 0.01%)</title><rect x="18.8072%" y="277" width="0.0106%" height="15" fill="rgb(206,64,50)" fg:x="12475" fg:w="7"/><text x="19.0572%" y="287.50"></text></g><g><title>httpmq-rs`core::str::converts::from_utf8 (10 samples, 0.02%)</title><rect x="18.8177%" y="277" width="0.0151%" height="15" fill="rgb(234,36,40)" fg:x="12482" fg:w="10"/><text x="19.0677%" y="287.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.01%)</title><rect x="18.8946%" y="261" width="0.0136%" height="15" fill="rgb(213,64,8)" fg:x="12533" fg:w="9"/><text x="19.1446%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::ReadOptions::ReadOptions (10 samples, 0.02%)</title><rect x="18.9203%" y="245" width="0.0151%" height="15" fill="rgb(210,75,36)" fg:x="12550" fg:w="10"/><text x="19.1703%" y="255.50"></text></g><g><title>libc+ (7 samples, 0.01%)</title><rect x="18.9429%" y="229" width="0.0106%" height="15" fill="rgb(229,88,21)" fg:x="12565" fg:w="7"/><text x="19.1929%" y="239.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (41 samples, 0.06%)</title><rect x="18.9534%" y="229" width="0.0618%" height="15" fill="rgb(252,204,47)" fg:x="12572" fg:w="41"/><text x="19.2034%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.06%)</title><rect x="18.9564%" y="213" width="0.0588%" height="15" fill="rgb(208,77,27)" fg:x="12574" fg:w="39"/><text x="19.2064%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.06%)</title><rect x="18.9580%" y="197" width="0.0573%" height="15" fill="rgb(221,76,26)" fg:x="12575" fg:w="38"/><text x="19.2080%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (38 samples, 0.06%)</title><rect x="18.9580%" y="181" width="0.0573%" height="15" fill="rgb(225,139,18)" fg:x="12575" fg:w="38"/><text x="19.2080%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.02%)</title><rect x="18.9911%" y="165" width="0.0241%" height="15" fill="rgb(230,137,11)" fg:x="12597" fg:w="16"/><text x="19.2411%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb_readoptions_create (67 samples, 0.10%)</title><rect x="18.9353%" y="245" width="0.1010%" height="15" fill="rgb(212,28,1)" fg:x="12560" fg:w="67"/><text x="19.1853%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (14 samples, 0.02%)</title><rect x="19.0152%" y="229" width="0.0211%" height="15" fill="rgb(248,164,17)" fg:x="12613" fg:w="14"/><text x="19.2652%" y="239.50"></text></g><g><title>libc+ (14 samples, 0.02%)</title><rect x="19.0363%" y="245" width="0.0211%" height="15" fill="rgb(222,171,42)" fg:x="12627" fg:w="14"/><text x="19.2863%" y="255.50"></text></g><g><title>httpmq-rs`&lt;rocksdb::db_options::ReadOptions as core::default::Default&gt;::default (103 samples, 0.16%)</title><rect x="18.9082%" y="261" width="0.1553%" height="15" fill="rgb(243,84,45)" fg:x="12542" fg:w="103"/><text x="19.1582%" y="271.50"></text></g><g><title>httpmq-rs`alloc::vec::source_iter_marker::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 0.01%)</title><rect x="19.0755%" y="261" width="0.0121%" height="15" fill="rgb(252,49,23)" fg:x="12653" fg:w="8"/><text x="19.3255%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (81 samples, 0.12%)</title><rect x="19.1238%" y="229" width="0.1221%" height="15" fill="rgb(215,19,7)" fg:x="12685" fg:w="81"/><text x="19.3738%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (70 samples, 0.11%)</title><rect x="19.1404%" y="213" width="0.1055%" height="15" fill="rgb(238,81,41)" fg:x="12696" fg:w="70"/><text x="19.3904%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (66 samples, 0.10%)</title><rect x="19.1464%" y="197" width="0.0995%" height="15" fill="rgb(210,199,37)" fg:x="12700" fg:w="66"/><text x="19.3964%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.02%)</title><rect x="19.2248%" y="181" width="0.0211%" height="15" fill="rgb(244,192,49)" fg:x="12752" fg:w="14"/><text x="19.4748%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (15 samples, 0.02%)</title><rect x="19.2519%" y="213" width="0.0226%" height="15" fill="rgb(226,211,11)" fg:x="12770" fg:w="15"/><text x="19.5019%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (12 samples, 0.02%)</title><rect x="19.2565%" y="197" width="0.0181%" height="15" fill="rgb(236,162,54)" fg:x="12773" fg:w="12"/><text x="19.5065%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.03%)</title><rect x="19.2459%" y="229" width="0.0302%" height="15" fill="rgb(220,229,9)" fg:x="12766" fg:w="20"/><text x="19.4959%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (43 samples, 0.06%)</title><rect x="19.2761%" y="229" width="0.0648%" height="15" fill="rgb(250,87,22)" fg:x="12786" fg:w="43"/><text x="19.5261%" y="239.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (169 samples, 0.25%)</title><rect x="19.0982%" y="245" width="0.2548%" height="15" fill="rgb(239,43,17)" fg:x="12668" fg:w="169"/><text x="19.3482%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (7 samples, 0.01%)</title><rect x="19.4494%" y="165" width="0.0106%" height="15" fill="rgb(231,177,25)" fg:x="12901" fg:w="7"/><text x="19.6994%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.03%)</title><rect x="19.4690%" y="165" width="0.0332%" height="15" fill="rgb(219,179,1)" fg:x="12914" fg:w="22"/><text x="19.7190%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.01%)</title><rect x="19.4916%" y="149" width="0.0106%" height="15" fill="rgb(238,219,53)" fg:x="12929" fg:w="7"/><text x="19.7416%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (80 samples, 0.12%)</title><rect x="19.3846%" y="181" width="0.1206%" height="15" fill="rgb(232,167,36)" fg:x="12858" fg:w="80"/><text x="19.6346%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (87 samples, 0.13%)</title><rect x="19.3756%" y="213" width="0.1312%" height="15" fill="rgb(244,19,51)" fg:x="12852" fg:w="87"/><text x="19.6256%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (83 samples, 0.13%)</title><rect x="19.3816%" y="197" width="0.1251%" height="15" fill="rgb(224,6,22)" fg:x="12856" fg:w="83"/><text x="19.6316%" y="207.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (92 samples, 0.14%)</title><rect x="19.3695%" y="229" width="0.1387%" height="15" fill="rgb(224,145,5)" fg:x="12848" fg:w="92"/><text x="19.6195%" y="239.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (108 samples, 0.16%)</title><rect x="19.3590%" y="245" width="0.1628%" height="15" fill="rgb(234,130,49)" fg:x="12841" fg:w="108"/><text x="19.6090%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (9 samples, 0.01%)</title><rect x="19.5082%" y="229" width="0.0136%" height="15" fill="rgb(254,6,2)" fg:x="12940" fg:w="9"/><text x="19.7582%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.02%)</title><rect x="19.5369%" y="245" width="0.0196%" height="15" fill="rgb(208,96,46)" fg:x="12959" fg:w="13"/><text x="19.7869%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.01%)</title><rect x="19.5429%" y="229" width="0.0136%" height="15" fill="rgb(239,3,39)" fg:x="12963" fg:w="9"/><text x="19.7929%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.01%)</title><rect x="19.5429%" y="213" width="0.0136%" height="15" fill="rgb(233,210,1)" fg:x="12963" fg:w="9"/><text x="19.7929%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (37 samples, 0.06%)</title><rect x="19.5565%" y="245" width="0.0558%" height="15" fill="rgb(244,137,37)" fg:x="12972" fg:w="37"/><text x="19.8065%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (24 samples, 0.04%)</title><rect x="19.5761%" y="229" width="0.0362%" height="15" fill="rgb(240,136,2)" fg:x="12985" fg:w="24"/><text x="19.8261%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.01%)</title><rect x="19.5987%" y="213" width="0.0136%" height="15" fill="rgb(239,18,37)" fg:x="13000" fg:w="9"/><text x="19.8487%" y="223.50"></text></g><g><title>httpmq-rs`core::iter::traits::iterator::Iterator::unzip (355 samples, 0.54%)</title><rect x="19.0876%" y="261" width="0.5352%" height="15" fill="rgb(218,185,22)" fg:x="12661" fg:w="355"/><text x="19.3376%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::DB::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (22 samples, 0.03%)</title><rect x="19.6228%" y="261" width="0.0332%" height="15" fill="rgb(225,218,4)" fg:x="13016" fg:w="22"/><text x="19.8728%" y="271.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.01%)</title><rect x="19.6710%" y="245" width="0.0136%" height="15" fill="rgb(230,182,32)" fg:x="13048" fg:w="9"/><text x="19.9210%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (9 samples, 0.01%)</title><rect x="19.7193%" y="213" width="0.0136%" height="15" fill="rgb(242,56,43)" fg:x="13080" fg:w="9"/><text x="19.9693%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.03%)</title><rect x="19.8218%" y="165" width="0.0286%" height="15" fill="rgb(233,99,24)" fg:x="13148" fg:w="19"/><text x="20.0718%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.01%)</title><rect x="19.8399%" y="149" width="0.0106%" height="15" fill="rgb(234,209,42)" fg:x="13160" fg:w="7"/><text x="20.0899%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (70 samples, 0.11%)</title><rect x="19.7464%" y="197" width="0.1055%" height="15" fill="rgb(227,7,12)" fg:x="13098" fg:w="70"/><text x="19.9964%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (67 samples, 0.10%)</title><rect x="19.7509%" y="181" width="0.1010%" height="15" fill="rgb(245,203,43)" fg:x="13101" fg:w="67"/><text x="20.0009%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (81 samples, 0.12%)</title><rect x="19.7329%" y="213" width="0.1221%" height="15" fill="rgb(238,205,33)" fg:x="13089" fg:w="81"/><text x="19.9829%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (28 samples, 0.04%)</title><rect x="19.8881%" y="197" width="0.0422%" height="15" fill="rgb(231,56,7)" fg:x="13192" fg:w="28"/><text x="20.1381%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (27 samples, 0.04%)</title><rect x="19.8896%" y="181" width="0.0407%" height="15" fill="rgb(244,186,29)" fg:x="13193" fg:w="27"/><text x="20.1396%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (54 samples, 0.08%)</title><rect x="19.8550%" y="213" width="0.0814%" height="15" fill="rgb(234,111,31)" fg:x="13170" fg:w="54"/><text x="20.1050%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (7 samples, 0.01%)</title><rect x="20.0072%" y="197" width="0.0106%" height="15" fill="rgb(241,149,10)" fg:x="13271" fg:w="7"/><text x="20.2572%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (33 samples, 0.05%)</title><rect x="20.0736%" y="181" width="0.0498%" height="15" fill="rgb(249,206,44)" fg:x="13315" fg:w="33"/><text x="20.3236%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (72 samples, 0.11%)</title><rect x="20.0193%" y="197" width="0.1085%" height="15" fill="rgb(251,153,30)" fg:x="13279" fg:w="72"/><text x="20.2693%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (128 samples, 0.19%)</title><rect x="19.9364%" y="213" width="0.1930%" height="15" fill="rgb(239,152,38)" fg:x="13224" fg:w="128"/><text x="20.1864%" y="223.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (298 samples, 0.45%)</title><rect x="19.7042%" y="229" width="0.4493%" height="15" fill="rgb(249,139,47)" fg:x="13070" fg:w="298"/><text x="19.9542%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.02%)</title><rect x="20.1384%" y="213" width="0.0151%" height="15" fill="rgb(244,64,35)" fg:x="13358" fg:w="10"/><text x="20.3884%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (49 samples, 0.07%)</title><rect x="20.1806%" y="197" width="0.0739%" height="15" fill="rgb(216,46,15)" fg:x="13386" fg:w="49"/><text x="20.4306%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (23 samples, 0.03%)</title><rect x="20.2198%" y="181" width="0.0347%" height="15" fill="rgb(250,74,19)" fg:x="13412" fg:w="23"/><text x="20.4698%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (55 samples, 0.08%)</title><rect x="20.1731%" y="229" width="0.0829%" height="15" fill="rgb(249,42,33)" fg:x="13381" fg:w="55"/><text x="20.4231%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (52 samples, 0.08%)</title><rect x="20.1776%" y="213" width="0.0784%" height="15" fill="rgb(242,149,17)" fg:x="13384" fg:w="52"/><text x="20.4276%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.03%)</title><rect x="20.2650%" y="229" width="0.0332%" height="15" fill="rgb(244,29,21)" fg:x="13442" fg:w="22"/><text x="20.5150%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (34 samples, 0.05%)</title><rect x="20.2982%" y="229" width="0.0513%" height="15" fill="rgb(220,130,37)" fg:x="13464" fg:w="34"/><text x="20.5482%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (29 samples, 0.04%)</title><rect x="20.3057%" y="213" width="0.0437%" height="15" fill="rgb(211,67,2)" fg:x="13469" fg:w="29"/><text x="20.5557%" y="223.50"></text></g><g><title>httpmq-rs`alloc::vec::source_iter_marker::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (485 samples, 0.73%)</title><rect x="19.6921%" y="245" width="0.7312%" height="15" fill="rgb(235,68,52)" fg:x="13062" fg:w="485"/><text x="19.9421%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (38 samples, 0.06%)</title><rect x="20.3660%" y="229" width="0.0573%" height="15" fill="rgb(246,142,3)" fg:x="13509" fg:w="38"/><text x="20.6160%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::db::convert_values (522 samples, 0.79%)</title><rect x="19.6560%" y="261" width="0.7870%" height="15" fill="rgb(241,25,7)" fg:x="13038" fg:w="522"/><text x="19.9060%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="20.4294%" y="245" width="0.0136%" height="15" fill="rgb(242,119,39)" fg:x="13551" fg:w="9"/><text x="20.6794%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::DefaultColumnFamily (10 samples, 0.02%)</title><rect x="20.5319%" y="229" width="0.0151%" height="15" fill="rgb(241,98,45)" fg:x="13619" fg:w="10"/><text x="20.7819%" y="239.50"></text></g><g><title>httpmq-rs`bool rocksdb::DBImpl::MultiCFSnapshot&lt;std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt; &gt;(rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, std::__1::function&lt;rocksdb::DBImpl::MultiGetColumnFamilyData* (std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::iterator&amp;)&gt;&amp;, std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair (15 samples, 0.02%)</title><rect x="20.5620%" y="213" width="0.0226%" height="15" fill="rgb(254,28,30)" fg:x="13639" fg:w="15"/><text x="20.8120%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::Cleanable (9 samples, 0.01%)</title><rect x="20.5846%" y="213" width="0.0136%" height="15" fill="rgb(241,142,54)" fg:x="13654" fg:w="9"/><text x="20.8346%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Instance (13 samples, 0.02%)</title><rect x="20.9691%" y="165" width="0.0196%" height="15" fill="rgb(222,85,15)" fg:x="13909" fg:w="13"/><text x="21.2191%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::StaticMeta::Swap (50 samples, 0.08%)</title><rect x="20.9887%" y="165" width="0.0754%" height="15" fill="rgb(210,85,47)" fg:x="13922" fg:w="50"/><text x="21.2387%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion (91 samples, 0.14%)</title><rect x="20.9419%" y="181" width="0.1372%" height="15" fill="rgb(224,206,25)" fg:x="13891" fg:w="91"/><text x="21.1919%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Swap (10 samples, 0.02%)</title><rect x="21.0641%" y="165" width="0.0151%" height="15" fill="rgb(243,201,19)" fg:x="13972" fg:w="10"/><text x="21.3141%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Instance (8 samples, 0.01%)</title><rect x="21.0671%" y="149" width="0.0121%" height="15" fill="rgb(236,59,4)" fg:x="13974" fg:w="8"/><text x="21.3171%" y="159.50"></text></g><g><title>httpmq-rs`bool rocksdb::DBImpl::MultiCFSnapshot&lt;std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt; &gt;(rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, std::__1::function&lt;rocksdb::DBImpl::MultiGetColumnFamilyData* (std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::iterator&amp;)&gt;&amp;, std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair (114 samples, 0.17%)</title><rect x="20.9284%" y="197" width="0.1719%" height="15" fill="rgb(254,179,45)" fg:x="13882" fg:w="114"/><text x="21.1784%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.01%)</title><rect x="21.0882%" y="181" width="0.0121%" height="15" fill="rgb(226,14,10)" fg:x="13988" fg:w="8"/><text x="21.3382%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (18 samples, 0.03%)</title><rect x="21.1138%" y="197" width="0.0271%" height="15" fill="rgb(244,27,41)" fg:x="14005" fg:w="18"/><text x="21.3638%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::CachableEntry&lt;rocksdb::Block&gt;::ReleaseCacheHandle (7 samples, 0.01%)</title><rect x="21.1409%" y="197" width="0.0106%" height="15" fill="rgb(235,35,32)" fg:x="14023" fg:w="7"/><text x="21.3909%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::LRU_Insert (10 samples, 0.02%)</title><rect x="21.1967%" y="165" width="0.0151%" height="15" fill="rgb(218,68,31)" fg:x="14060" fg:w="10"/><text x="21.4467%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (11 samples, 0.02%)</title><rect x="21.2148%" y="133" width="0.0166%" height="15" fill="rgb(207,120,37)" fg:x="14072" fg:w="11"/><text x="21.4648%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (14 samples, 0.02%)</title><rect x="21.2118%" y="149" width="0.0211%" height="15" fill="rgb(227,98,0)" fg:x="14070" fg:w="14"/><text x="21.4618%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Lock (28 samples, 0.04%)</title><rect x="21.2118%" y="165" width="0.0422%" height="15" fill="rgb(207,7,3)" fg:x="14070" fg:w="28"/><text x="21.4618%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (14 samples, 0.02%)</title><rect x="21.2329%" y="149" width="0.0211%" height="15" fill="rgb(206,98,19)" fg:x="14084" fg:w="14"/><text x="21.4829%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Unlock (11 samples, 0.02%)</title><rect x="21.2540%" y="165" width="0.0166%" height="15" fill="rgb(217,5,26)" fg:x="14098" fg:w="11"/><text x="21.5040%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (7 samples, 0.01%)</title><rect x="21.2600%" y="149" width="0.0106%" height="15" fill="rgb(235,190,38)" fg:x="14102" fg:w="7"/><text x="21.5100%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Release (59 samples, 0.09%)</title><rect x="21.1907%" y="181" width="0.0889%" height="15" fill="rgb(247,86,24)" fg:x="14056" fg:w="59"/><text x="21.4407%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Release (7 samples, 0.01%)</title><rect x="21.2796%" y="181" width="0.0106%" height="15" fill="rgb(205,101,16)" fg:x="14115" fg:w="7"/><text x="21.5296%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::~Cleanable (90 samples, 0.14%)</title><rect x="21.1575%" y="197" width="0.1357%" height="15" fill="rgb(246,168,33)" fg:x="14034" fg:w="90"/><text x="21.4075%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion (18 samples, 0.03%)</title><rect x="21.2932%" y="197" width="0.0271%" height="15" fill="rgb(231,114,1)" fg:x="14124" fg:w="18"/><text x="21.5432%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap (19 samples, 0.03%)</title><rect x="21.3354%" y="181" width="0.0286%" height="15" fill="rgb(207,184,53)" fg:x="14152" fg:w="19"/><text x="21.5854%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion (31 samples, 0.05%)</title><rect x="21.3203%" y="197" width="0.0467%" height="15" fill="rgb(224,95,51)" fg:x="14142" fg:w="31"/><text x="21.5703%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::EncodeVarint32 (10 samples, 0.02%)</title><rect x="21.3761%" y="197" width="0.0151%" height="15" fill="rgb(212,188,45)" fg:x="14179" fg:w="10"/><text x="21.6261%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::GetPerfLevel (18 samples, 0.03%)</title><rect x="21.3942%" y="197" width="0.0271%" height="15" fill="rgb(223,154,38)" fg:x="14191" fg:w="18"/><text x="21.6442%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::LookupKey::LookupKey (24 samples, 0.04%)</title><rect x="21.4274%" y="197" width="0.0362%" height="15" fill="rgb(251,22,52)" fg:x="14213" fg:w="24"/><text x="21.6774%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="21.4515%" y="181" width="0.0121%" height="15" fill="rgb(229,209,22)" fg:x="14229" fg:w="8"/><text x="21.7015%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (10 samples, 0.02%)</title><rect x="21.8420%" y="165" width="0.0151%" height="15" fill="rgb(234,138,34)" fg:x="14488" fg:w="10"/><text x="22.0920%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (14 samples, 0.02%)</title><rect x="21.8571%" y="165" width="0.0211%" height="15" fill="rgb(212,95,11)" fg:x="14498" fg:w="14"/><text x="22.1071%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (74 samples, 0.11%)</title><rect x="21.9671%" y="149" width="0.1116%" height="15" fill="rgb(240,179,47)" fg:x="14571" fg:w="74"/><text x="22.2171%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (46 samples, 0.07%)</title><rect x="22.0093%" y="133" width="0.0693%" height="15" fill="rgb(240,163,11)" fg:x="14599" fg:w="46"/><text x="22.2593%" y="143.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (12 samples, 0.02%)</title><rect x="22.0787%" y="149" width="0.0181%" height="15" fill="rgb(236,37,12)" fg:x="14645" fg:w="12"/><text x="22.3287%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (24 samples, 0.04%)</title><rect x="22.0968%" y="149" width="0.0362%" height="15" fill="rgb(232,164,16)" fg:x="14657" fg:w="24"/><text x="22.3468%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (180 samples, 0.27%)</title><rect x="21.8782%" y="165" width="0.2714%" height="15" fill="rgb(244,205,15)" fg:x="14512" fg:w="180"/><text x="22.1282%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (11 samples, 0.02%)</title><rect x="22.1329%" y="149" width="0.0166%" height="15" fill="rgb(223,117,47)" fg:x="14681" fg:w="11"/><text x="22.3829%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (9 samples, 0.01%)</title><rect x="22.2596%" y="149" width="0.0136%" height="15" fill="rgb(244,107,35)" fg:x="14765" fg:w="9"/><text x="22.5096%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::SaveValue (82 samples, 0.12%)</title><rect x="22.1571%" y="165" width="0.1236%" height="15" fill="rgb(205,140,8)" fg:x="14697" fg:w="82"/><text x="22.4071%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (483 samples, 0.73%)</title><rect x="21.5721%" y="181" width="0.7282%" height="15" fill="rgb(228,84,46)" fg:x="14309" fg:w="483"/><text x="21.8221%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="22.2837%" y="165" width="0.0166%" height="15" fill="rgb(254,188,9)" fg:x="14781" fg:w="11"/><text x="22.5337%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::NewRangeTombstoneIterator (13 samples, 0.02%)</title><rect x="22.3018%" y="181" width="0.0196%" height="15" fill="rgb(206,112,54)" fg:x="14793" fg:w="13"/><text x="22.5518%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableRep::KeyComparator::decode_key (20 samples, 0.03%)</title><rect x="22.3214%" y="181" width="0.0302%" height="15" fill="rgb(216,84,49)" fg:x="14806" fg:w="20"/><text x="22.5714%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (615 samples, 0.93%)</title><rect x="21.4636%" y="197" width="0.9272%" height="15" fill="rgb(214,194,35)" fg:x="14237" fg:w="615"/><text x="21.7136%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (19 samples, 0.03%)</title><rect x="22.3621%" y="181" width="0.0286%" height="15" fill="rgb(249,28,3)" fg:x="14833" fg:w="19"/><text x="22.6121%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::NewRangeTombstoneIterator (11 samples, 0.02%)</title><rect x="22.3907%" y="197" width="0.0166%" height="15" fill="rgb(222,56,52)" fg:x="14852" fg:w="11"/><text x="22.6407%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (19 samples, 0.03%)</title><rect x="22.4073%" y="197" width="0.0286%" height="15" fill="rgb(245,217,50)" fg:x="14863" fg:w="19"/><text x="22.6573%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (8 samples, 0.01%)</title><rect x="22.7737%" y="181" width="0.0121%" height="15" fill="rgb(213,201,24)" fg:x="15106" fg:w="8"/><text x="23.0237%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (39 samples, 0.06%)</title><rect x="22.8536%" y="165" width="0.0588%" height="15" fill="rgb(248,116,28)" fg:x="15159" fg:w="39"/><text x="23.1036%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (22 samples, 0.03%)</title><rect x="22.8792%" y="149" width="0.0332%" height="15" fill="rgb(219,72,43)" fg:x="15176" fg:w="22"/><text x="23.1292%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (7 samples, 0.01%)</title><rect x="22.9651%" y="133" width="0.0106%" height="15" fill="rgb(209,138,14)" fg:x="15233" fg:w="7"/><text x="23.2151%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FindFileInRange (38 samples, 0.06%)</title><rect x="22.9335%" y="149" width="0.0573%" height="15" fill="rgb(222,18,33)" fg:x="15212" fg:w="38"/><text x="23.1835%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FilePicker::PrepareNextLevel (59 samples, 0.09%)</title><rect x="22.9124%" y="165" width="0.0889%" height="15" fill="rgb(213,199,7)" fg:x="15198" fg:w="59"/><text x="23.1624%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FindFileInRange (19 samples, 0.03%)</title><rect x="23.0013%" y="165" width="0.0286%" height="15" fill="rgb(250,110,10)" fg:x="15257" fg:w="19"/><text x="23.2513%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FilePicker::GetNextFile (180 samples, 0.27%)</title><rect x="22.7857%" y="181" width="0.2714%" height="15" fill="rgb(248,123,6)" fg:x="15114" fg:w="180"/><text x="23.0357%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (17 samples, 0.03%)</title><rect x="23.0315%" y="165" width="0.0256%" height="15" fill="rgb(206,91,31)" fg:x="15277" fg:w="17"/><text x="23.2815%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FilePicker::PrepareNextLevel (17 samples, 0.03%)</title><rect x="23.0571%" y="181" width="0.0256%" height="15" fill="rgb(211,154,13)" fg:x="15294" fg:w="17"/><text x="23.3071%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::Get (9 samples, 0.01%)</title><rect x="23.0827%" y="181" width="0.0136%" height="15" fill="rgb(225,148,7)" fg:x="15311" fg:w="9"/><text x="23.3327%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::NewRangeTombstoneIterator (20 samples, 0.03%)</title><rect x="23.0963%" y="181" width="0.0302%" height="15" fill="rgb(220,160,43)" fg:x="15320" fg:w="20"/><text x="23.3463%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::FileIndexer::GetNextLevelIndex (16 samples, 0.02%)</title><rect x="23.1340%" y="181" width="0.0241%" height="15" fill="rgb(213,52,39)" fg:x="15345" fg:w="16"/><text x="23.3840%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="23.1777%" y="165" width="0.0106%" height="15" fill="rgb(243,137,7)" fg:x="15374" fg:w="7"/><text x="23.4277%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (60 samples, 0.09%)</title><rect x="23.1581%" y="181" width="0.0905%" height="15" fill="rgb(230,79,13)" fg:x="15361" fg:w="60"/><text x="23.4081%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (40 samples, 0.06%)</title><rect x="23.1883%" y="165" width="0.0603%" height="15" fill="rgb(247,105,23)" fg:x="15381" fg:w="40"/><text x="23.4383%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::BinarySearchIndexReader::NewIterator (26 samples, 0.04%)</title><rect x="23.3360%" y="165" width="0.0392%" height="15" fill="rgb(223,179,41)" fg:x="15479" fg:w="26"/><text x="23.5860%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::Block::NewIndexIterator (34 samples, 0.05%)</title><rect x="23.7054%" y="133" width="0.0513%" height="15" fill="rgb(218,9,34)" fg:x="15724" fg:w="34"/><text x="23.9554%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::Initialize (17 samples, 0.03%)</title><rect x="23.7310%" y="117" width="0.0256%" height="15" fill="rgb(222,106,8)" fg:x="15741" fg:w="17"/><text x="23.9810%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry (15 samples, 0.02%)</title><rect x="23.7566%" y="133" width="0.0226%" height="15" fill="rgb(211,220,0)" fg:x="15758" fg:w="15"/><text x="24.0066%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::BinarySearchIndexReader::NewIterator (86 samples, 0.13%)</title><rect x="23.6571%" y="149" width="0.1297%" height="15" fill="rgb(229,52,16)" fg:x="15692" fg:w="86"/><text x="23.9071%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry (27 samples, 0.04%)</title><rect x="23.8018%" y="149" width="0.0407%" height="15" fill="rgb(212,155,18)" fg:x="15788" fg:w="27"/><text x="24.0518%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Valid (11 samples, 0.02%)</title><rect x="23.8425%" y="149" width="0.0166%" height="15" fill="rgb(242,21,14)" fg:x="15815" fg:w="11"/><text x="24.0925%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::NextImpl (12 samples, 0.02%)</title><rect x="23.8953%" y="133" width="0.0181%" height="15" fill="rgb(222,19,48)" fg:x="15850" fg:w="12"/><text x="24.1453%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (8 samples, 0.01%)</title><rect x="24.4607%" y="101" width="0.0121%" height="15" fill="rgb(232,45,27)" fg:x="16225" fg:w="8"/><text x="24.7107%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (72 samples, 0.11%)</title><rect x="24.5888%" y="85" width="0.1085%" height="15" fill="rgb(249,103,42)" fg:x="16310" fg:w="72"/><text x="24.8388%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (42 samples, 0.06%)</title><rect x="24.6340%" y="69" width="0.0633%" height="15" fill="rgb(246,81,33)" fg:x="16340" fg:w="42"/><text x="24.8840%" y="79.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (11 samples, 0.02%)</title><rect x="24.6974%" y="85" width="0.0166%" height="15" fill="rgb(252,33,42)" fg:x="16382" fg:w="11"/><text x="24.9474%" y="95.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.02%)</title><rect x="24.7139%" y="85" width="0.0196%" height="15" fill="rgb(209,212,41)" fg:x="16393" fg:w="13"/><text x="24.9639%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (183 samples, 0.28%)</title><rect x="24.4727%" y="101" width="0.2759%" height="15" fill="rgb(207,154,6)" fg:x="16233" fg:w="183"/><text x="24.7227%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (10 samples, 0.02%)</title><rect x="24.7335%" y="85" width="0.0151%" height="15" fill="rgb(223,64,47)" fg:x="16406" fg:w="10"/><text x="24.9835%" y="95.50"></text></g><g><title>httpmq-rs`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::BinarySeek&lt;rocksdb::DecodeKeyV4&gt; (547 samples, 0.82%)</title><rect x="23.9451%" y="117" width="0.8247%" height="15" fill="rgb(211,161,38)" fg:x="15883" fg:w="547"/><text x="24.1951%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.02%)</title><rect x="24.7546%" y="101" width="0.0151%" height="15" fill="rgb(219,138,40)" fg:x="16420" fg:w="10"/><text x="25.0046%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (8 samples, 0.01%)</title><rect x="24.7697%" y="117" width="0.0121%" height="15" fill="rgb(241,228,46)" fg:x="16430" fg:w="8"/><text x="25.0197%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::GetVarint64Ptr (10 samples, 0.02%)</title><rect x="24.8466%" y="85" width="0.0151%" height="15" fill="rgb(223,209,38)" fg:x="16481" fg:w="10"/><text x="25.0966%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::DecodeCurrentValue (45 samples, 0.07%)</title><rect x="24.8360%" y="101" width="0.0678%" height="15" fill="rgb(236,164,45)" fg:x="16474" fg:w="45"/><text x="25.0860%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::IndexValue::DecodeFrom (28 samples, 0.04%)</title><rect x="24.8617%" y="85" width="0.0422%" height="15" fill="rgb(231,15,5)" fg:x="16491" fg:w="28"/><text x="25.1117%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::GetVarint64Ptr (7 samples, 0.01%)</title><rect x="24.8933%" y="69" width="0.0106%" height="15" fill="rgb(252,35,15)" fg:x="16512" fg:w="7"/><text x="25.1433%" y="79.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::ParseNextIndexKey (85 samples, 0.13%)</title><rect x="24.7893%" y="117" width="0.1281%" height="15" fill="rgb(248,181,18)" fg:x="16443" fg:w="85"/><text x="25.0393%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::IndexValue::DecodeFrom (9 samples, 0.01%)</title><rect x="24.9039%" y="101" width="0.0136%" height="15" fill="rgb(233,39,42)" fg:x="16519" fg:w="9"/><text x="25.1539%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::SeekImpl (675 samples, 1.02%)</title><rect x="23.9134%" y="133" width="1.0176%" height="15" fill="rgb(238,110,33)" fg:x="15862" fg:w="675"/><text x="24.1634%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Seek (710 samples, 1.07%)</title><rect x="23.8682%" y="149" width="1.0704%" height="15" fill="rgb(233,195,10)" fg:x="15832" fg:w="710"/><text x="24.1182%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::CachableEntry&lt;rocksdb::UncompressionDict&gt;::ReleaseResource (13 samples, 0.02%)</title><rect x="24.9386%" y="149" width="0.0196%" height="15" fill="rgb(254,105,3)" fg:x="16542" fg:w="13"/><text x="25.1886%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::Block::NewDataIterator (17 samples, 0.03%)</title><rect x="25.0607%" y="133" width="0.0256%" height="15" fill="rgb(221,225,9)" fg:x="16623" fg:w="17"/><text x="25.3107%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (11 samples, 0.02%)</title><rect x="25.0938%" y="133" width="0.0166%" height="15" fill="rgb(224,227,45)" fg:x="16645" fg:w="11"/><text x="25.3438%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Lookup (9 samples, 0.01%)</title><rect x="25.2325%" y="101" width="0.0136%" height="15" fill="rgb(229,198,43)" fg:x="16737" fg:w="9"/><text x="25.4825%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::GetUsage (8 samples, 0.01%)</title><rect x="25.2461%" y="101" width="0.0121%" height="15" fill="rgb(206,209,35)" fg:x="16746" fg:w="8"/><text x="25.4961%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Lookup (7 samples, 0.01%)</title><rect x="25.2582%" y="101" width="0.0106%" height="15" fill="rgb(245,195,53)" fg:x="16754" fg:w="7"/><text x="25.5082%" y="111.50"></text></g><g><title>httpmq-rs`ROCKSDB_XXH3p_64bits (11 samples, 0.02%)</title><rect x="25.3396%" y="85" width="0.0166%" height="15" fill="rgb(240,92,26)" fg:x="16808" fg:w="11"/><text x="25.5896%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::UpdateCacheHitMetrics (43 samples, 0.06%)</title><rect x="25.3562%" y="85" width="0.0648%" height="15" fill="rgb(207,40,23)" fg:x="16819" fg:w="43"/><text x="25.6062%" y="95.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (12 samples, 0.02%)</title><rect x="25.4029%" y="69" width="0.0181%" height="15" fill="rgb(223,111,35)" fg:x="16850" fg:w="12"/><text x="25.6529%" y="79.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCache::GetShard (8 samples, 0.01%)</title><rect x="25.4300%" y="85" width="0.0121%" height="15" fill="rgb(229,147,28)" fg:x="16868" fg:w="8"/><text x="25.6800%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (28 samples, 0.04%)</title><rect x="25.4798%" y="37" width="0.0422%" height="15" fill="rgb(211,29,28)" fg:x="16901" fg:w="28"/><text x="25.7298%" y="47.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (31 samples, 0.05%)</title><rect x="25.4768%" y="53" width="0.0467%" height="15" fill="rgb(228,72,33)" fg:x="16899" fg:w="31"/><text x="25.7268%" y="63.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Lock (63 samples, 0.09%)</title><rect x="25.4768%" y="69" width="0.0950%" height="15" fill="rgb(205,214,31)" fg:x="16899" fg:w="63"/><text x="25.7268%" y="79.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (31 samples, 0.05%)</title><rect x="25.5250%" y="53" width="0.0467%" height="15" fill="rgb(224,111,15)" fg:x="16931" fg:w="31"/><text x="25.7750%" y="63.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (25 samples, 0.04%)</title><rect x="25.5718%" y="53" width="0.0377%" height="15" fill="rgb(253,21,26)" fg:x="16962" fg:w="25"/><text x="25.8218%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (25 samples, 0.04%)</title><rect x="25.5718%" y="37" width="0.0377%" height="15" fill="rgb(245,139,43)" fg:x="16962" fg:w="25"/><text x="25.8218%" y="47.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Unlock (47 samples, 0.07%)</title><rect x="25.5718%" y="69" width="0.0709%" height="15" fill="rgb(252,170,7)" fg:x="16962" fg:w="47"/><text x="25.8218%" y="79.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (22 samples, 0.03%)</title><rect x="25.6094%" y="53" width="0.0332%" height="15" fill="rgb(231,118,14)" fg:x="16987" fg:w="22"/><text x="25.8594%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (13 samples, 0.02%)</title><rect x="25.6426%" y="69" width="0.0196%" height="15" fill="rgb(238,83,0)" fg:x="17009" fg:w="13"/><text x="25.8926%" y="79.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (12 samples, 0.02%)</title><rect x="25.6622%" y="69" width="0.0181%" height="15" fill="rgb(221,39,39)" fg:x="17022" fg:w="12"/><text x="25.9122%" y="79.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Lookup (160 samples, 0.24%)</title><rect x="25.4421%" y="85" width="0.2412%" height="15" fill="rgb(222,119,46)" fg:x="16876" fg:w="160"/><text x="25.6921%" y="95.50"></text></g><g><title>httpmq-rs`ROCKSDB_XXH3p_64bits (12 samples, 0.02%)</title><rect x="25.7240%" y="69" width="0.0181%" height="15" fill="rgb(222,165,49)" fg:x="17063" fg:w="12"/><text x="25.9740%" y="79.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Lookup (43 samples, 0.06%)</title><rect x="25.6833%" y="85" width="0.0648%" height="15" fill="rgb(219,113,52)" fg:x="17036" fg:w="43"/><text x="25.9333%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry (325 samples, 0.49%)</title><rect x="25.2687%" y="101" width="0.4900%" height="15" fill="rgb(214,7,15)" fg:x="16761" fg:w="325"/><text x="25.5187%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (410 samples, 0.62%)</title><rect x="25.1466%" y="117" width="0.6181%" height="15" fill="rgb(235,32,4)" fg:x="16680" fg:w="410"/><text x="25.3966%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (449 samples, 0.68%)</title><rect x="25.1104%" y="133" width="0.6769%" height="15" fill="rgb(238,90,54)" fg:x="16656" fg:w="449"/><text x="25.3604%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (15 samples, 0.02%)</title><rect x="25.7647%" y="117" width="0.0226%" height="15" fill="rgb(213,208,19)" fg:x="17090" fg:w="15"/><text x="26.0147%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (550 samples, 0.83%)</title><rect x="24.9687%" y="149" width="0.8292%" height="15" fill="rgb(233,156,4)" fg:x="16562" fg:w="550"/><text x="25.2187%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Valid (7 samples, 0.01%)</title><rect x="25.8265%" y="133" width="0.0106%" height="15" fill="rgb(207,194,5)" fg:x="17131" fg:w="7"/><text x="26.0765%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::NextImpl (17 samples, 0.03%)</title><rect x="25.8401%" y="133" width="0.0256%" height="15" fill="rgb(206,111,30)" fg:x="17140" fg:w="17"/><text x="26.0901%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (14 samples, 0.02%)</title><rect x="25.9652%" y="85" width="0.0211%" height="15" fill="rgb(243,70,54)" fg:x="17223" fg:w="14"/><text x="26.2152%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 0.01%)</title><rect x="25.9728%" y="69" width="0.0136%" height="15" fill="rgb(242,28,8)" fg:x="17228" fg:w="9"/><text x="26.2228%" y="79.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::CompareCurrentKey (25 samples, 0.04%)</title><rect x="25.9577%" y="101" width="0.0377%" height="15" fill="rgb(219,106,18)" fg:x="17218" fg:w="25"/><text x="26.2077%" y="111.50"></text></g><g><title>httpmq-rs`bool rocksdb::BlockIter&lt;rocksdb::Slice&gt;::BinarySeek&lt;rocksdb::DecodeKey&gt; (66 samples, 0.10%)</title><rect x="25.8974%" y="117" width="0.0995%" height="15" fill="rgb(244,222,10)" fg:x="17178" fg:w="66"/><text x="26.1474%" y="127.50"></text></g><g><title>httpmq-rs`bool rocksdb::DataBlockIter::ParseNextDataKey&lt;rocksdb::DecodeEntry&gt; (28 samples, 0.04%)</title><rect x="25.9969%" y="117" width="0.0422%" height="15" fill="rgb(236,179,52)" fg:x="17244" fg:w="28"/><text x="26.2469%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (8 samples, 0.01%)</title><rect x="26.0512%" y="101" width="0.0121%" height="15" fill="rgb(213,23,39)" fg:x="17280" fg:w="8"/><text x="26.3012%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.01%)</title><rect x="26.0512%" y="85" width="0.0121%" height="15" fill="rgb(238,48,10)" fg:x="17280" fg:w="8"/><text x="26.3012%" y="95.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="26.0632%" y="101" width="0.0106%" height="15" fill="rgb(251,196,23)" fg:x="17288" fg:w="7"/><text x="26.3132%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::CompareCurrentKey (26 samples, 0.04%)</title><rect x="26.0391%" y="117" width="0.0392%" height="15" fill="rgb(250,152,24)" fg:x="17272" fg:w="26"/><text x="26.2891%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.02%)</title><rect x="26.0828%" y="117" width="0.0151%" height="15" fill="rgb(209,150,17)" fg:x="17301" fg:w="10"/><text x="26.3328%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::SeekImpl (158 samples, 0.24%)</title><rect x="25.8657%" y="133" width="0.2382%" height="15" fill="rgb(234,202,34)" fg:x="17157" fg:w="158"/><text x="26.1157%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::SeekForGet (205 samples, 0.31%)</title><rect x="25.7979%" y="149" width="0.3091%" height="15" fill="rgb(253,148,53)" fg:x="17112" fg:w="205"/><text x="26.0479%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::SeekImpl (14 samples, 0.02%)</title><rect x="26.1069%" y="149" width="0.0211%" height="15" fill="rgb(218,129,16)" fg:x="17317" fg:w="14"/><text x="26.3569%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::~DataBlockIter (18 samples, 0.03%)</title><rect x="26.1281%" y="149" width="0.0271%" height="15" fill="rgb(216,85,19)" fg:x="17331" fg:w="18"/><text x="26.3781%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (10 samples, 0.02%)</title><rect x="26.2306%" y="133" width="0.0151%" height="15" fill="rgb(235,228,7)" fg:x="17399" fg:w="10"/><text x="26.4806%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::GetContext::SaveValue (66 samples, 0.10%)</title><rect x="26.1552%" y="149" width="0.0995%" height="15" fill="rgb(245,175,0)" fg:x="17349" fg:w="66"/><text x="26.4052%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::SeekImpl (12 samples, 0.02%)</title><rect x="26.2547%" y="149" width="0.0181%" height="15" fill="rgb(208,168,36)" fg:x="17415" fg:w="12"/><text x="26.5047%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::~IndexBlockIter (7 samples, 0.01%)</title><rect x="26.2728%" y="149" width="0.0106%" height="15" fill="rgb(246,171,24)" fg:x="17427" fg:w="7"/><text x="26.5228%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::ParseInternalKey (9 samples, 0.01%)</title><rect x="26.2833%" y="149" width="0.0136%" height="15" fill="rgb(215,142,24)" fg:x="17434" fg:w="9"/><text x="26.5333%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (15 samples, 0.02%)</title><rect x="26.2969%" y="149" width="0.0226%" height="15" fill="rgb(250,187,7)" fg:x="17443" fg:w="15"/><text x="26.5469%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::Get (1,989 samples, 3.00%)</title><rect x="23.3752%" y="165" width="2.9986%" height="15" fill="rgb(228,66,33)" fg:x="15505" fg:w="1989"/><text x="23.6252%" y="175.50">htt..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (33 samples, 0.05%)</title><rect x="26.3240%" y="149" width="0.0498%" height="15" fill="rgb(234,215,21)" fg:x="17461" fg:w="33"/><text x="26.5740%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::NewRangeTombstoneIterator (11 samples, 0.02%)</title><rect x="26.3738%" y="165" width="0.0166%" height="15" fill="rgb(222,191,20)" fg:x="17494" fg:w="11"/><text x="26.6238%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (7 samples, 0.01%)</title><rect x="26.3934%" y="165" width="0.0106%" height="15" fill="rgb(245,79,54)" fg:x="17507" fg:w="7"/><text x="26.6434%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Seek (16 samples, 0.02%)</title><rect x="26.4039%" y="165" width="0.0241%" height="15" fill="rgb(240,10,37)" fg:x="17514" fg:w="16"/><text x="26.6539%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (8 samples, 0.01%)</title><rect x="26.4341%" y="165" width="0.0121%" height="15" fill="rgb(214,192,32)" fg:x="17534" fg:w="8"/><text x="26.6841%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::SeekForGet (18 samples, 0.03%)</title><rect x="26.4462%" y="165" width="0.0271%" height="15" fill="rgb(209,36,54)" fg:x="17542" fg:w="18"/><text x="26.6962%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::GetContext::SaveValue (15 samples, 0.02%)</title><rect x="26.4808%" y="165" width="0.0226%" height="15" fill="rgb(220,10,11)" fg:x="17565" fg:w="15"/><text x="26.7308%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::TableCache::Get (2,175 samples, 3.28%)</title><rect x="23.2531%" y="181" width="3.2790%" height="15" fill="rgb(221,106,17)" fg:x="15424" fg:w="2175"/><text x="23.5031%" y="191.50">htt..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="26.5215%" y="165" width="0.0106%" height="15" fill="rgb(251,142,44)" fg:x="17592" fg:w="7"/><text x="26.7715%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (12 samples, 0.02%)</title><rect x="26.5336%" y="181" width="0.0181%" height="15" fill="rgb(238,13,15)" fg:x="17600" fg:w="12"/><text x="26.7836%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (2,719 samples, 4.10%)</title><rect x="22.4541%" y="197" width="4.0991%" height="15" fill="rgb(208,107,27)" fg:x="14894" fg:w="2719"/><text x="22.7041%" y="207.50">http..</text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Handler::SingleDelete (34 samples, 0.05%)</title><rect x="26.5532%" y="197" width="0.0513%" height="15" fill="rgb(205,136,37)" fg:x="17613" fg:w="34"/><text x="26.8032%" y="207.50"></text></g><g><title>httpmq-rs`std::__1::__function::__func&lt;rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;*, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;*)::$_0, std::__1::allocator&lt;rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string (9 samples, 0.01%)</title><rect x="26.6045%" y="197" width="0.0136%" height="15" fill="rgb(250,205,27)" fg:x="17647" fg:w="9"/><text x="26.8545%" y="207.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (50 samples, 0.08%)</title><rect x="26.6256%" y="181" width="0.0754%" height="15" fill="rgb(210,80,43)" fg:x="17661" fg:w="50"/><text x="26.8756%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (49 samples, 0.07%)</title><rect x="26.6271%" y="165" width="0.0739%" height="15" fill="rgb(247,160,36)" fg:x="17662" fg:w="49"/><text x="26.8771%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (46 samples, 0.07%)</title><rect x="26.6316%" y="149" width="0.0693%" height="15" fill="rgb(234,13,49)" fg:x="17665" fg:w="46"/><text x="26.8816%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (45 samples, 0.07%)</title><rect x="26.6331%" y="133" width="0.0678%" height="15" fill="rgb(234,122,0)" fg:x="17666" fg:w="45"/><text x="26.8831%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (11 samples, 0.02%)</title><rect x="26.6844%" y="117" width="0.0166%" height="15" fill="rgb(207,146,38)" fg:x="17700" fg:w="11"/><text x="26.9344%" y="127.50"></text></g><g><title>httpmq-rs`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::__rehash (57 samples, 0.09%)</title><rect x="26.6180%" y="197" width="0.0859%" height="15" fill="rgb(207,177,25)" fg:x="17656" fg:w="57"/><text x="26.8680%" y="207.50"></text></g><g><title>httpmq-rs`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::rehash (36 samples, 0.05%)</title><rect x="26.7040%" y="197" width="0.0543%" height="15" fill="rgb(211,178,42)" fg:x="17713" fg:w="36"/><text x="26.9540%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::__next_prime (32 samples, 0.05%)</title><rect x="26.7100%" y="181" width="0.0482%" height="15" fill="rgb(230,69,54)" fg:x="17717" fg:w="32"/><text x="26.9600%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.06%)</title><rect x="26.7643%" y="165" width="0.0588%" height="15" fill="rgb(214,135,41)" fg:x="17753" fg:w="39"/><text x="27.0143%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (37 samples, 0.06%)</title><rect x="26.7673%" y="149" width="0.0558%" height="15" fill="rgb(237,67,25)" fg:x="17755" fg:w="37"/><text x="27.0173%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (35 samples, 0.05%)</title><rect x="26.7703%" y="133" width="0.0528%" height="15" fill="rgb(222,189,50)" fg:x="17757" fg:w="35"/><text x="27.0203%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.02%)</title><rect x="26.8004%" y="117" width="0.0226%" height="15" fill="rgb(245,148,34)" fg:x="17777" fg:w="15"/><text x="27.0504%" y="127.50"></text></g><g><title>httpmq-rs`std::__1::vector&lt;rocksdb::Status, std::__1::allocator&lt;rocksdb::Status&gt; &gt;::vector (44 samples, 0.07%)</title><rect x="26.7582%" y="197" width="0.0663%" height="15" fill="rgb(222,29,6)" fg:x="17749" fg:w="44"/><text x="27.0082%" y="207.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (41 samples, 0.06%)</title><rect x="26.7628%" y="181" width="0.0618%" height="15" fill="rgb(221,189,43)" fg:x="17752" fg:w="41"/><text x="27.0128%" y="191.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (14 samples, 0.02%)</title><rect x="26.8246%" y="197" width="0.0211%" height="15" fill="rgb(207,36,27)" fg:x="17793" fg:w="14"/><text x="27.0746%" y="207.50"></text></g><g><title>libc+ (23 samples, 0.03%)</title><rect x="26.8457%" y="197" width="0.0347%" height="15" fill="rgb(217,90,24)" fg:x="17807" fg:w="23"/><text x="27.0957%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external (14 samples, 0.02%)</title><rect x="26.8834%" y="197" width="0.0211%" height="15" fill="rgb(224,66,35)" fg:x="17832" fg:w="14"/><text x="27.1334%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="26.8939%" y="181" width="0.0106%" height="15" fill="rgb(221,13,50)" fg:x="17839" fg:w="7"/><text x="27.1439%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.02%)</title><rect x="26.9467%" y="133" width="0.0211%" height="15" fill="rgb(236,68,49)" fg:x="17874" fg:w="14"/><text x="27.1967%" y="143.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (43 samples, 0.06%)</title><rect x="26.9045%" y="197" width="0.0648%" height="15" fill="rgb(229,146,28)" fg:x="17846" fg:w="43"/><text x="27.1545%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (42 samples, 0.06%)</title><rect x="26.9060%" y="181" width="0.0633%" height="15" fill="rgb(225,31,38)" fg:x="17847" fg:w="42"/><text x="27.1560%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (39 samples, 0.06%)</title><rect x="26.9105%" y="165" width="0.0588%" height="15" fill="rgb(250,208,3)" fg:x="17850" fg:w="39"/><text x="27.1605%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (38 samples, 0.06%)</title><rect x="26.9120%" y="149" width="0.0573%" height="15" fill="rgb(246,54,23)" fg:x="17851" fg:w="38"/><text x="27.1620%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (45 samples, 0.07%)</title><rect x="26.9693%" y="197" width="0.0678%" height="15" fill="rgb(243,76,11)" fg:x="17889" fg:w="45"/><text x="27.2193%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.05%)</title><rect x="27.0417%" y="197" width="0.0498%" height="15" fill="rgb(245,21,50)" fg:x="17937" fg:w="33"/><text x="27.2917%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (20 samples, 0.03%)</title><rect x="27.0613%" y="181" width="0.0302%" height="15" fill="rgb(228,9,43)" fg:x="17950" fg:w="20"/><text x="27.3113%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.03%)</title><rect x="27.0628%" y="165" width="0.0286%" height="15" fill="rgb(208,100,47)" fg:x="17951" fg:w="19"/><text x="27.3128%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.02%)</title><rect x="27.1653%" y="165" width="0.0181%" height="15" fill="rgb(232,26,8)" fg:x="18019" fg:w="12"/><text x="27.4153%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (31 samples, 0.05%)</title><rect x="27.1412%" y="181" width="0.0467%" height="15" fill="rgb(216,166,38)" fg:x="18003" fg:w="31"/><text x="27.3912%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (66 samples, 0.10%)</title><rect x="27.0914%" y="197" width="0.0995%" height="15" fill="rgb(251,202,51)" fg:x="17970" fg:w="66"/><text x="27.3414%" y="207.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (13 samples, 0.02%)</title><rect x="27.1939%" y="197" width="0.0196%" height="15" fill="rgb(254,216,34)" fg:x="18038" fg:w="13"/><text x="27.4439%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.03%)</title><rect x="27.2135%" y="197" width="0.0271%" height="15" fill="rgb(251,32,27)" fg:x="18051" fg:w="18"/><text x="27.4635%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;*, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (4,400 samples, 6.63%)</title><rect x="20.6088%" y="213" width="6.6334%" height="15" fill="rgb(208,127,28)" fg:x="13670" fg:w="4400"/><text x="20.8588%" y="223.50">httpmq-rs..</text></g><g><title>httpmq-rs`rocksdb::LogFileImpl::LogNumber (25 samples, 0.04%)</title><rect x="27.2422%" y="213" width="0.0377%" height="15" fill="rgb(224,137,22)" fg:x="18070" fg:w="25"/><text x="27.4922%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::LookupKey::LookupKey (22 samples, 0.03%)</title><rect x="27.2799%" y="213" width="0.0332%" height="15" fill="rgb(254,70,32)" fg:x="18095" fg:w="22"/><text x="27.5299%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (10 samples, 0.02%)</title><rect x="27.3130%" y="213" width="0.0151%" height="15" fill="rgb(229,75,37)" fg:x="18117" fg:w="10"/><text x="27.5630%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (16 samples, 0.02%)</title><rect x="27.3356%" y="213" width="0.0241%" height="15" fill="rgb(252,64,23)" fg:x="18132" fg:w="16"/><text x="27.5856%" y="223.50"></text></g><g><title>httpmq-rs`std::__1::__function::__func&lt;rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;*, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;*)::$_0, std::__1::allocator&lt;rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string (8 samples, 0.01%)</title><rect x="27.3598%" y="213" width="0.0121%" height="15" fill="rgb(232,162,48)" fg:x="18148" fg:w="8"/><text x="27.6098%" y="223.50"></text></g><g><title>httpmq-rs`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::rehash (9 samples, 0.01%)</title><rect x="27.3718%" y="213" width="0.0136%" height="15" fill="rgb(246,160,12)" fg:x="18156" fg:w="9"/><text x="27.6218%" y="223.50"></text></g><g><title>libc+ (35 samples, 0.05%)</title><rect x="27.3944%" y="213" width="0.0528%" height="15" fill="rgb(247,166,0)" fg:x="18171" fg:w="35"/><text x="27.6444%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.02%)</title><rect x="27.4562%" y="213" width="0.0196%" height="15" fill="rgb(249,219,21)" fg:x="18212" fg:w="13"/><text x="27.7062%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="27.4834%" y="213" width="0.0106%" height="15" fill="rgb(205,209,3)" fg:x="18230" fg:w="7"/><text x="27.7334%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (4,611 samples, 6.95%)</title><rect x="20.5470%" y="229" width="6.9515%" height="15" fill="rgb(243,44,1)" fg:x="13629" fg:w="4611"/><text x="20.7970%" y="239.50">httpmq-rs..</text></g><g><title>libc++abi.dylib`operator new(unsigned long) (46 samples, 0.07%)</title><rect x="27.5015%" y="229" width="0.0693%" height="15" fill="rgb(206,159,16)" fg:x="18242" fg:w="46"/><text x="27.7515%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.07%)</title><rect x="27.5045%" y="213" width="0.0663%" height="15" fill="rgb(244,77,30)" fg:x="18244" fg:w="44"/><text x="27.7545%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (44 samples, 0.07%)</title><rect x="27.5045%" y="197" width="0.0663%" height="15" fill="rgb(218,69,12)" fg:x="18244" fg:w="44"/><text x="27.7545%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (42 samples, 0.06%)</title><rect x="27.5075%" y="181" width="0.0633%" height="15" fill="rgb(212,87,7)" fg:x="18246" fg:w="42"/><text x="27.7575%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.02%)</title><rect x="27.5497%" y="165" width="0.0211%" height="15" fill="rgb(245,114,25)" fg:x="18274" fg:w="14"/><text x="27.7997%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.01%)</title><rect x="27.5588%" y="149" width="0.0121%" height="15" fill="rgb(210,61,42)" fg:x="18280" fg:w="8"/><text x="27.8088%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.02%)</title><rect x="27.6160%" y="197" width="0.0181%" height="15" fill="rgb(211,52,33)" fg:x="18318" fg:w="12"/><text x="27.8660%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (46 samples, 0.07%)</title><rect x="27.5768%" y="229" width="0.0693%" height="15" fill="rgb(234,58,33)" fg:x="18292" fg:w="46"/><text x="27.8268%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (37 samples, 0.06%)</title><rect x="27.5904%" y="213" width="0.0558%" height="15" fill="rgb(220,115,36)" fg:x="18301" fg:w="37"/><text x="27.8404%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.01%)</title><rect x="27.6341%" y="197" width="0.0121%" height="15" fill="rgb(243,153,54)" fg:x="18330" fg:w="8"/><text x="27.8841%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::DB::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (4,735 samples, 7.14%)</title><rect x="20.5123%" y="245" width="7.1384%" height="15" fill="rgb(251,47,18)" fg:x="13606" fg:w="4735"/><text x="20.7623%" y="255.50">httpmq-rs`..</text></g><g><title>httpmq-rs`rocksdb::DBImpl::DefaultColumnFamily (20 samples, 0.03%)</title><rect x="27.6507%" y="245" width="0.0302%" height="15" fill="rgb(242,102,42)" fg:x="18341" fg:w="20"/><text x="27.9007%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (8 samples, 0.01%)</title><rect x="27.6809%" y="245" width="0.0121%" height="15" fill="rgb(234,31,38)" fg:x="18361" fg:w="8"/><text x="27.9309%" y="255.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (27 samples, 0.04%)</title><rect x="27.6944%" y="229" width="0.0407%" height="15" fill="rgb(221,117,51)" fg:x="18370" fg:w="27"/><text x="27.9444%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.04%)</title><rect x="27.6944%" y="213" width="0.0407%" height="15" fill="rgb(212,20,18)" fg:x="18370" fg:w="27"/><text x="27.9444%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (23 samples, 0.03%)</title><rect x="27.7005%" y="197" width="0.0347%" height="15" fill="rgb(245,133,36)" fg:x="18374" fg:w="23"/><text x="27.9505%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.03%)</title><rect x="27.7020%" y="181" width="0.0332%" height="15" fill="rgb(212,6,19)" fg:x="18375" fg:w="22"/><text x="27.9520%" y="191.50"></text></g><g><title>httpmq-rs`std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::vector (49 samples, 0.07%)</title><rect x="27.6929%" y="245" width="0.0739%" height="15" fill="rgb(218,1,36)" fg:x="18369" fg:w="49"/><text x="27.9429%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (21 samples, 0.03%)</title><rect x="27.7351%" y="229" width="0.0317%" height="15" fill="rgb(246,84,54)" fg:x="18397" fg:w="21"/><text x="27.9851%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.03%)</title><rect x="27.8346%" y="181" width="0.0256%" height="15" fill="rgb(242,110,6)" fg:x="18463" fg:w="17"/><text x="28.0846%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (54 samples, 0.08%)</title><rect x="27.7804%" y="229" width="0.0814%" height="15" fill="rgb(214,47,5)" fg:x="18427" fg:w="54"/><text x="28.0304%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (50 samples, 0.08%)</title><rect x="27.7864%" y="213" width="0.0754%" height="15" fill="rgb(218,159,25)" fg:x="18431" fg:w="50"/><text x="28.0364%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (45 samples, 0.07%)</title><rect x="27.7939%" y="197" width="0.0678%" height="15" fill="rgb(215,211,28)" fg:x="18436" fg:w="45"/><text x="28.0439%" y="207.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (58 samples, 0.09%)</title><rect x="27.7759%" y="245" width="0.0874%" height="15" fill="rgb(238,59,32)" fg:x="18424" fg:w="58"/><text x="28.0259%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (9 samples, 0.01%)</title><rect x="27.9673%" y="197" width="0.0136%" height="15" fill="rgb(226,82,3)" fg:x="18551" fg:w="9"/><text x="28.2173%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (115 samples, 0.17%)</title><rect x="27.8693%" y="245" width="0.1734%" height="15" fill="rgb(240,164,32)" fg:x="18486" fg:w="115"/><text x="28.1193%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (102 samples, 0.15%)</title><rect x="27.8889%" y="229" width="0.1538%" height="15" fill="rgb(232,46,7)" fg:x="18499" fg:w="102"/><text x="28.1389%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (97 samples, 0.15%)</title><rect x="27.8965%" y="213" width="0.1462%" height="15" fill="rgb(229,129,53)" fg:x="18504" fg:w="97"/><text x="28.1465%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.06%)</title><rect x="27.9854%" y="197" width="0.0573%" height="15" fill="rgb(234,188,29)" fg:x="18563" fg:w="38"/><text x="28.2354%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.01%)</title><rect x="28.0306%" y="181" width="0.0121%" height="15" fill="rgb(246,141,4)" fg:x="18593" fg:w="8"/><text x="28.2806%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (20 samples, 0.03%)</title><rect x="28.0653%" y="229" width="0.0302%" height="15" fill="rgb(229,23,39)" fg:x="18616" fg:w="20"/><text x="28.3153%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (18 samples, 0.03%)</title><rect x="28.0683%" y="213" width="0.0271%" height="15" fill="rgb(206,12,3)" fg:x="18618" fg:w="18"/><text x="28.3183%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.05%)</title><rect x="28.0472%" y="245" width="0.0498%" height="15" fill="rgb(252,226,20)" fg:x="18604" fg:w="33"/><text x="28.2972%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (7 samples, 0.01%)</title><rect x="28.1392%" y="229" width="0.0106%" height="15" fill="rgb(216,123,35)" fg:x="18665" fg:w="7"/><text x="28.3892%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (26 samples, 0.04%)</title><rect x="28.2206%" y="213" width="0.0392%" height="15" fill="rgb(212,68,40)" fg:x="18719" fg:w="26"/><text x="28.4706%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (80 samples, 0.12%)</title><rect x="28.1558%" y="229" width="0.1206%" height="15" fill="rgb(254,125,32)" fg:x="18676" fg:w="80"/><text x="28.4058%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (11 samples, 0.02%)</title><rect x="28.2598%" y="213" width="0.0166%" height="15" fill="rgb(253,97,22)" fg:x="18745" fg:w="11"/><text x="28.5098%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (122 samples, 0.18%)</title><rect x="28.0970%" y="245" width="0.1839%" height="15" fill="rgb(241,101,14)" fg:x="18637" fg:w="122"/><text x="28.3470%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb_multi_get (5,211 samples, 7.86%)</title><rect x="20.4429%" y="261" width="7.8561%" height="15" fill="rgb(238,103,29)" fg:x="13560" fg:w="5211"/><text x="20.6929%" y="271.50">httpmq-rs`r..</text></g><g><title>httpmq-rs`rocksdb_readoptions_create (8 samples, 0.01%)</title><rect x="28.2990%" y="261" width="0.0121%" height="15" fill="rgb(233,195,47)" fg:x="18771" fg:w="8"/><text x="28.5490%" y="271.50"></text></g><g><title>httpmq-rs`std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::vector (10 samples, 0.02%)</title><rect x="28.3186%" y="261" width="0.0151%" height="15" fill="rgb(246,218,30)" fg:x="18784" fg:w="10"/><text x="28.5686%" y="271.50"></text></g><g><title>libc+ (11 samples, 0.02%)</title><rect x="28.3337%" y="261" width="0.0166%" height="15" fill="rgb(219,145,47)" fg:x="18794" fg:w="11"/><text x="28.5837%" y="271.50"></text></g><g><title>libc++abi.dylib`operator delete(void*) (7 samples, 0.01%)</title><rect x="28.3502%" y="261" width="0.0106%" height="15" fill="rgb(243,12,26)" fg:x="18805" fg:w="7"/><text x="28.6002%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (10 samples, 0.02%)</title><rect x="28.3653%" y="261" width="0.0151%" height="15" fill="rgb(214,87,16)" fg:x="18815" fg:w="10"/><text x="28.6153%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.01%)</title><rect x="28.4950%" y="213" width="0.0136%" height="15" fill="rgb(208,99,42)" fg:x="18901" fg:w="9"/><text x="28.7450%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (48 samples, 0.07%)</title><rect x="28.5085%" y="213" width="0.0724%" height="15" fill="rgb(253,99,2)" fg:x="18910" fg:w="48"/><text x="28.7585%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (21 samples, 0.03%)</title><rect x="28.5492%" y="197" width="0.0317%" height="15" fill="rgb(220,168,23)" fg:x="18937" fg:w="21"/><text x="28.7992%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (134 samples, 0.20%)</title><rect x="28.4121%" y="229" width="0.2020%" height="15" fill="rgb(242,38,24)" fg:x="18846" fg:w="134"/><text x="28.6621%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (14 samples, 0.02%)</title><rect x="28.5930%" y="213" width="0.0211%" height="15" fill="rgb(225,182,9)" fg:x="18966" fg:w="14"/><text x="28.8430%" y="223.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memset (18 samples, 0.03%)</title><rect x="28.6141%" y="229" width="0.0271%" height="15" fill="rgb(243,178,37)" fg:x="18980" fg:w="18"/><text x="28.8641%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (184 samples, 0.28%)</title><rect x="28.3804%" y="261" width="0.2774%" height="15" fill="rgb(232,139,19)" fg:x="18825" fg:w="184"/><text x="28.6304%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (173 samples, 0.26%)</title><rect x="28.3970%" y="245" width="0.2608%" height="15" fill="rgb(225,201,24)" fg:x="18836" fg:w="173"/><text x="28.6470%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="28.6412%" y="229" width="0.0166%" height="15" fill="rgb(221,47,46)" fg:x="18998" fg:w="11"/><text x="28.8912%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (49 samples, 0.07%)</title><rect x="28.6578%" y="261" width="0.0739%" height="15" fill="rgb(249,23,13)" fg:x="19009" fg:w="49"/><text x="28.9078%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (42 samples, 0.06%)</title><rect x="28.6683%" y="245" width="0.0633%" height="15" fill="rgb(219,9,5)" fg:x="19016" fg:w="42"/><text x="28.9183%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (39 samples, 0.06%)</title><rect x="28.6729%" y="229" width="0.0588%" height="15" fill="rgb(254,171,16)" fg:x="19019" fg:w="39"/><text x="28.9229%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.02%)</title><rect x="28.7091%" y="213" width="0.0226%" height="15" fill="rgb(230,171,20)" fg:x="19043" fg:w="15"/><text x="28.9591%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (9 samples, 0.01%)</title><rect x="28.7317%" y="261" width="0.0136%" height="15" fill="rgb(210,71,41)" fg:x="19058" fg:w="9"/><text x="28.9817%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (40 samples, 0.06%)</title><rect x="28.8116%" y="245" width="0.0603%" height="15" fill="rgb(206,173,20)" fg:x="19111" fg:w="40"/><text x="29.0616%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (37 samples, 0.06%)</title><rect x="28.8161%" y="229" width="0.0558%" height="15" fill="rgb(233,88,34)" fg:x="19114" fg:w="37"/><text x="29.0661%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (81 samples, 0.12%)</title><rect x="28.7543%" y="261" width="0.1221%" height="15" fill="rgb(223,209,46)" fg:x="19073" fg:w="81"/><text x="29.0043%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (14 samples, 0.02%)</title><rect x="28.9895%" y="245" width="0.0211%" height="15" fill="rgb(250,43,18)" fg:x="19229" fg:w="14"/><text x="29.2395%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (61 samples, 0.09%)</title><rect x="29.1734%" y="229" width="0.0920%" height="15" fill="rgb(208,13,10)" fg:x="19351" fg:w="61"/><text x="29.4234%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (201 samples, 0.30%)</title><rect x="29.0136%" y="245" width="0.3030%" height="15" fill="rgb(212,200,36)" fg:x="19245" fg:w="201"/><text x="29.2636%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (34 samples, 0.05%)</title><rect x="29.2654%" y="229" width="0.0513%" height="15" fill="rgb(225,90,30)" fg:x="19412" fg:w="34"/><text x="29.5154%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (295 samples, 0.44%)</title><rect x="28.8764%" y="261" width="0.4447%" height="15" fill="rgb(236,182,39)" fg:x="19154" fg:w="295"/><text x="29.1264%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_calloc (8 samples, 0.01%)</title><rect x="29.3287%" y="261" width="0.0121%" height="15" fill="rgb(212,144,35)" fg:x="19454" fg:w="8"/><text x="29.5787%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::multi_get (6,979 samples, 10.52%)</title><rect x="18.8328%" y="277" width="10.5215%" height="15" fill="rgb(228,63,44)" fg:x="12492" fg:w="6979"/><text x="19.0828%" y="287.50">httpmq-rs`rocks..</text></g><g><title>httpmq-rs`rocksdb::db::convert_values (15 samples, 0.02%)</title><rect x="29.3543%" y="277" width="0.0226%" height="15" fill="rgb(228,109,6)" fg:x="19471" fg:w="15"/><text x="29.6043%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (26 samples, 0.04%)</title><rect x="29.4840%" y="229" width="0.0392%" height="15" fill="rgb(238,117,24)" fg:x="19557" fg:w="26"/><text x="29.7340%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (79 samples, 0.12%)</title><rect x="29.4056%" y="277" width="0.1191%" height="15" fill="rgb(242,26,26)" fg:x="19505" fg:w="79"/><text x="29.6556%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (74 samples, 0.11%)</title><rect x="29.4131%" y="261" width="0.1116%" height="15" fill="rgb(221,92,48)" fg:x="19510" fg:w="74"/><text x="29.6631%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (73 samples, 0.11%)</title><rect x="29.4146%" y="245" width="0.1101%" height="15" fill="rgb(209,209,32)" fg:x="19511" fg:w="73"/><text x="29.6646%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`calloc (9 samples, 0.01%)</title><rect x="29.5247%" y="277" width="0.0136%" height="15" fill="rgb(221,70,22)" fg:x="19584" fg:w="9"/><text x="29.7747%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.01%)</title><rect x="29.5382%" y="277" width="0.0106%" height="15" fill="rgb(248,145,5)" fg:x="19593" fg:w="7"/><text x="29.7882%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.03%)</title><rect x="29.5850%" y="261" width="0.0271%" height="15" fill="rgb(226,116,26)" fg:x="19624" fg:w="18"/><text x="29.8350%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (14 samples, 0.02%)</title><rect x="29.5910%" y="245" width="0.0211%" height="15" fill="rgb(244,5,17)" fg:x="19628" fg:w="14"/><text x="29.8410%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (43 samples, 0.06%)</title><rect x="29.5488%" y="277" width="0.0648%" height="15" fill="rgb(252,159,33)" fg:x="19600" fg:w="43"/><text x="29.7988%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (10 samples, 0.02%)</title><rect x="29.6664%" y="261" width="0.0151%" height="15" fill="rgb(206,71,0)" fg:x="19678" fg:w="10"/><text x="29.9164%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (32 samples, 0.05%)</title><rect x="29.7900%" y="245" width="0.0482%" height="15" fill="rgb(233,118,54)" fg:x="19760" fg:w="32"/><text x="30.0400%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (139 samples, 0.21%)</title><rect x="29.6845%" y="261" width="0.2096%" height="15" fill="rgb(234,83,48)" fg:x="19690" fg:w="139"/><text x="29.9345%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (37 samples, 0.06%)</title><rect x="29.8382%" y="245" width="0.0558%" height="15" fill="rgb(228,3,54)" fg:x="19792" fg:w="37"/><text x="30.0882%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (188 samples, 0.28%)</title><rect x="29.6136%" y="277" width="0.2834%" height="15" fill="rgb(226,155,13)" fg:x="19643" fg:w="188"/><text x="29.8636%" y="287.50"></text></g><g><title>httpmq-rs`httpmq_rs::service::httpmq_read_metadata (7,787 samples, 11.74%)</title><rect x="18.1831%" y="293" width="11.7396%" height="15" fill="rgb(241,28,37)" fg:x="12061" fg:w="7787"/><text x="18.4331%" y="303.50">httpmq-rs`httpmq_..</text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::multi_get (11 samples, 0.02%)</title><rect x="29.9227%" y="293" width="0.0166%" height="15" fill="rgb(233,93,10)" fg:x="19848" fg:w="11"/><text x="30.1727%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.02%)</title><rect x="30.0086%" y="181" width="0.0211%" height="15" fill="rgb(225,113,19)" fg:x="19905" fg:w="14"/><text x="30.2586%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.01%)</title><rect x="30.0191%" y="165" width="0.0106%" height="15" fill="rgb(241,2,18)" fg:x="19912" fg:w="7"/><text x="30.2691%" y="175.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (37 samples, 0.06%)</title><rect x="29.9754%" y="245" width="0.0558%" height="15" fill="rgb(228,207,21)" fg:x="19883" fg:w="37"/><text x="30.2254%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.05%)</title><rect x="29.9769%" y="229" width="0.0543%" height="15" fill="rgb(213,211,35)" fg:x="19884" fg:w="36"/><text x="30.2269%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (34 samples, 0.05%)</title><rect x="29.9799%" y="213" width="0.0513%" height="15" fill="rgb(209,83,10)" fg:x="19886" fg:w="34"/><text x="30.2299%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (33 samples, 0.05%)</title><rect x="29.9815%" y="197" width="0.0498%" height="15" fill="rgb(209,164,1)" fg:x="19887" fg:w="33"/><text x="30.2315%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb_writeoptions_create (41 samples, 0.06%)</title><rect x="29.9739%" y="261" width="0.0618%" height="15" fill="rgb(213,184,43)" fg:x="19882" fg:w="41"/><text x="30.2239%" y="271.50"></text></g><g><title>httpmq-rs`&lt;rocksdb::db_options::WriteOptions as core::default::Default&gt;::default (44 samples, 0.07%)</title><rect x="29.9739%" y="277" width="0.0663%" height="15" fill="rgb(231,61,34)" fg:x="19882" fg:w="44"/><text x="30.2239%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::DB::Put (7 samples, 0.01%)</title><rect x="30.0448%" y="277" width="0.0106%" height="15" fill="rgb(235,75,3)" fg:x="19929" fg:w="7"/><text x="30.2948%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::DefaultColumnFamily (8 samples, 0.01%)</title><rect x="30.1413%" y="245" width="0.0121%" height="15" fill="rgb(220,106,47)" fg:x="19993" fg:w="8"/><text x="30.3913%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyHandleImpl::GetID (13 samples, 0.02%)</title><rect x="30.1940%" y="213" width="0.0196%" height="15" fill="rgb(210,196,33)" fg:x="20028" fg:w="13"/><text x="30.4440%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::PreprocessWrite (14 samples, 0.02%)</title><rect x="30.7956%" y="181" width="0.0211%" height="15" fill="rgb(229,154,42)" fg:x="20427" fg:w="14"/><text x="31.0456%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::SuperVersionContext::Clean (8 samples, 0.01%)</title><rect x="30.8257%" y="165" width="0.0121%" height="15" fill="rgb(228,114,26)" fg:x="20447" fg:w="8"/><text x="31.0757%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteContext::~WriteContext (15 samples, 0.02%)</title><rect x="30.8167%" y="181" width="0.0226%" height="15" fill="rgb(208,144,1)" fg:x="20441" fg:w="15"/><text x="31.0667%" y="191.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (15 samples, 0.02%)</title><rect x="30.8709%" y="133" width="0.0226%" height="15" fill="rgb(239,112,37)" fg:x="20477" fg:w="15"/><text x="31.1209%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="30.8740%" y="117" width="0.0196%" height="15" fill="rgb(210,96,50)" fg:x="20479" fg:w="13"/><text x="31.1240%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Append (29 samples, 0.04%)</title><rect x="30.8589%" y="149" width="0.0437%" height="15" fill="rgb(222,178,2)" fg:x="20469" fg:w="29"/><text x="31.1089%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MergeBatch (34 samples, 0.05%)</title><rect x="30.8589%" y="165" width="0.0513%" height="15" fill="rgb(226,74,18)" fg:x="20469" fg:w="34"/><text x="31.1089%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::Flush (7 samples, 0.01%)</title><rect x="30.9614%" y="133" width="0.0106%" height="15" fill="rgb(225,67,54)" fg:x="20537" fg:w="7"/><text x="31.2114%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::Append (14 samples, 0.02%)</title><rect x="31.0850%" y="101" width="0.0211%" height="15" fill="rgb(251,92,32)" fg:x="20619" fg:w="14"/><text x="31.3350%" y="111.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="31.1091%" y="101" width="0.0106%" height="15" fill="rgb(228,149,22)" fg:x="20635" fg:w="7"/><text x="31.3591%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::WriteBuffered (1,424 samples, 2.15%)</title><rect x="31.0594%" y="117" width="2.1468%" height="15" fill="rgb(243,54,13)" fg:x="20602" fg:w="1424"/><text x="31.3094%" y="127.50">h..</text></g><g><title>libsystem_kernel.dylib`write (1,384 samples, 2.09%)</title><rect x="31.1197%" y="101" width="2.0865%" height="15" fill="rgb(243,180,28)" fg:x="20642" fg:w="1384"/><text x="31.3697%" y="111.50">l..</text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Flush (1,479 samples, 2.23%)</title><rect x="30.9825%" y="133" width="2.2297%" height="15" fill="rgb(208,167,24)" fg:x="20551" fg:w="1479"/><text x="31.2325%" y="143.50">h..</text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::use_direct_io (7 samples, 0.01%)</title><rect x="33.2363%" y="117" width="0.0106%" height="15" fill="rgb(245,73,45)" fg:x="22046" fg:w="7"/><text x="33.4863%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Append (33 samples, 0.05%)</title><rect x="33.2469%" y="117" width="0.0498%" height="15" fill="rgb(237,203,48)" fg:x="22053" fg:w="33"/><text x="33.4969%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.02%)</title><rect x="33.2755%" y="101" width="0.0211%" height="15" fill="rgb(211,197,16)" fg:x="22072" fg:w="14"/><text x="33.5255%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::crc32c::Extend (72 samples, 0.11%)</title><rect x="33.2966%" y="117" width="0.1085%" height="15" fill="rgb(243,99,51)" fg:x="22086" fg:w="72"/><text x="33.5466%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::log::Writer::AddRecord (1,638 samples, 2.47%)</title><rect x="30.9403%" y="149" width="2.4694%" height="15" fill="rgb(215,123,29)" fg:x="20523" fg:w="1638"/><text x="31.1903%" y="159.50">ht..</text></g><g><title>httpmq-rs`rocksdb::log::Writer::EmitPhysicalRecord (127 samples, 0.19%)</title><rect x="33.2183%" y="133" width="0.1915%" height="15" fill="rgb(239,186,37)" fg:x="22034" fg:w="127"/><text x="33.4683%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteToWAL (1,659 samples, 2.50%)</title><rect x="30.9101%" y="165" width="2.5011%" height="15" fill="rgb(252,136,39)" fg:x="20503" fg:w="1659"/><text x="31.1601%" y="175.50">ht..</text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Clear (16 samples, 0.02%)</title><rect x="33.4112%" y="165" width="0.0241%" height="15" fill="rgb(223,213,32)" fg:x="22162" fg:w="16"/><text x="33.6612%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::resize (10 samples, 0.02%)</title><rect x="33.4203%" y="149" width="0.0151%" height="15" fill="rgb(233,115,5)" fg:x="22168" fg:w="10"/><text x="33.6703%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteToWAL (1,730 samples, 2.61%)</title><rect x="30.8393%" y="181" width="2.6081%" height="15" fill="rgb(207,226,44)" fg:x="20456" fg:w="1730"/><text x="31.0893%" y="191.50">ht..</text></g><g><title>httpmq-rs`rocksdb::InstrumentedMutex::Lock (14 samples, 0.02%)</title><rect x="33.4489%" y="181" width="0.0211%" height="15" fill="rgb(208,126,0)" fg:x="22187" fg:w="14"/><text x="33.6989%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Count (19 samples, 0.03%)</title><rect x="33.4941%" y="181" width="0.0286%" height="15" fill="rgb(244,66,21)" fg:x="22217" fg:w="19"/><text x="33.7441%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::ApproximateMemoryUsage (17 samples, 0.03%)</title><rect x="34.1123%" y="165" width="0.0256%" height="15" fill="rgb(222,97,12)" fg:x="22627" fg:w="17"/><text x="34.3623%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::UpdateFlushState (18 samples, 0.03%)</title><rect x="34.1379%" y="165" width="0.0271%" height="15" fill="rgb(219,213,19)" fg:x="22644" fg:w="18"/><text x="34.3879%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCF (21 samples, 0.03%)</title><rect x="34.1650%" y="165" width="0.0317%" height="15" fill="rgb(252,169,30)" fg:x="22662" fg:w="21"/><text x="34.4150%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.01%)</title><rect x="34.2223%" y="133" width="0.0136%" height="15" fill="rgb(206,32,51)" fg:x="22700" fg:w="9"/><text x="34.4723%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.01%)</title><rect x="34.2238%" y="117" width="0.0121%" height="15" fill="rgb(250,172,42)" fg:x="22701" fg:w="8"/><text x="34.4738%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.03%)</title><rect x="34.2087%" y="149" width="0.0302%" height="15" fill="rgb(209,34,43)" fg:x="22691" fg:w="20"/><text x="34.4587%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (46 samples, 0.07%)</title><rect x="34.2389%" y="149" width="0.0693%" height="15" fill="rgb(223,11,35)" fg:x="22711" fg:w="46"/><text x="34.4889%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (33 samples, 0.05%)</title><rect x="34.2585%" y="133" width="0.0498%" height="15" fill="rgb(251,219,26)" fg:x="22724" fg:w="33"/><text x="34.5085%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::~MemTableInserter (78 samples, 0.12%)</title><rect x="34.1967%" y="165" width="0.1176%" height="15" fill="rgb(231,119,3)" fg:x="22683" fg:w="78"/><text x="34.4467%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Handler::Continue (13 samples, 0.02%)</title><rect x="34.3188%" y="165" width="0.0196%" height="15" fill="rgb(216,97,11)" fg:x="22764" fg:w="13"/><text x="34.5688%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOTS (8 samples, 0.01%)</title><rect x="34.4108%" y="133" width="0.0121%" height="15" fill="rgb(223,59,9)" fg:x="22825" fg:w="8"/><text x="34.6608%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Allocate (24 samples, 0.04%)</title><rect x="34.4786%" y="117" width="0.0362%" height="15" fill="rgb(233,93,31)" fg:x="22870" fg:w="24"/><text x="34.7286%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyMemTablesImpl::GetMemTable (8 samples, 0.01%)</title><rect x="34.5284%" y="117" width="0.0121%" height="15" fill="rgb(239,81,33)" fg:x="22903" fg:w="8"/><text x="34.7784%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyMemTablesImpl::Seek (17 samples, 0.03%)</title><rect x="34.5404%" y="117" width="0.0256%" height="15" fill="rgb(213,120,34)" fg:x="22911" fg:w="17"/><text x="34.7904%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::HistogramImpl::max (10 samples, 0.02%)</title><rect x="34.5691%" y="117" width="0.0151%" height="15" fill="rgb(243,49,53)" fg:x="22930" fg:w="10"/><text x="34.8191%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (10 samples, 0.02%)</title><rect x="34.7047%" y="85" width="0.0151%" height="15" fill="rgb(247,216,33)" fg:x="23020" fg:w="10"/><text x="34.9547%" y="95.50"></text></g><g><title>httpmq-rs`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (28 samples, 0.04%)</title><rect x="34.6791%" y="101" width="0.0422%" height="15" fill="rgb(226,26,14)" fg:x="23003" fg:w="28"/><text x="34.9291%" y="111.50"></text></g><g><title>httpmq-rs`char* rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::&apos;lambda&apos;()&gt;(unsigned long, bool, rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::&apos;lambda&apos; (11 samples, 0.02%)</title><rect x="34.7515%" y="85" width="0.0166%" height="15" fill="rgb(215,49,53)" fg:x="23051" fg:w="11"/><text x="35.0015%" y="95.50"></text></g><g><title>httpmq-rs`char* rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::&apos;lambda&apos;()&gt;(unsigned long, bool, rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::&apos;lambda&apos; (43 samples, 0.06%)</title><rect x="34.7681%" y="69" width="0.0648%" height="15" fill="rgb(245,162,40)" fg:x="23062" fg:w="43"/><text x="35.0181%" y="79.50"></text></g><g><title>httpmq-rs`rocksdb::ConcurrentArena::AllocateAligned (48 samples, 0.07%)</title><rect x="34.7681%" y="85" width="0.0724%" height="15" fill="rgb(229,68,17)" fg:x="23062" fg:w="48"/><text x="35.0181%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Allocate (88 samples, 0.13%)</title><rect x="34.7258%" y="101" width="0.1327%" height="15" fill="rgb(213,182,10)" fg:x="23034" fg:w="88"/><text x="34.9758%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (51 samples, 0.08%)</title><rect x="35.1615%" y="53" width="0.0769%" height="15" fill="rgb(245,125,30)" fg:x="23323" fg:w="51"/><text x="35.4115%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (39 samples, 0.06%)</title><rect x="35.1796%" y="37" width="0.0588%" height="15" fill="rgb(232,202,2)" fg:x="23335" fg:w="39"/><text x="35.4296%" y="47.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.02%)</title><rect x="35.2414%" y="53" width="0.0151%" height="15" fill="rgb(237,140,51)" fg:x="23376" fg:w="10"/><text x="35.4914%" y="63.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (107 samples, 0.16%)</title><rect x="35.1058%" y="69" width="0.1613%" height="15" fill="rgb(236,157,25)" fg:x="23286" fg:w="107"/><text x="35.3558%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (7 samples, 0.01%)</title><rect x="35.2565%" y="53" width="0.0106%" height="15" fill="rgb(219,209,0)" fg:x="23386" fg:w="7"/><text x="35.5065%" y="63.50"></text></g><g><title>httpmq-rs`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList (279 samples, 0.42%)</title><rect x="34.8630%" y="85" width="0.4206%" height="15" fill="rgb(240,116,54)" fg:x="23125" fg:w="279"/><text x="35.1130%" y="95.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.01%)</title><rect x="35.2701%" y="69" width="0.0136%" height="15" fill="rgb(216,10,36)" fg:x="23395" fg:w="9"/><text x="35.5201%" y="79.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (13 samples, 0.02%)</title><rect x="35.2837%" y="85" width="0.0196%" height="15" fill="rgb(222,72,44)" fg:x="23404" fg:w="13"/><text x="35.5337%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::InsertKeyConcurrently (310 samples, 0.47%)</title><rect x="34.8585%" y="101" width="0.4674%" height="15" fill="rgb(232,159,9)" fg:x="23122" fg:w="310"/><text x="35.1085%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableRep::KeyComparator::decode_key (15 samples, 0.02%)</title><rect x="35.3033%" y="85" width="0.0226%" height="15" fill="rgb(210,39,32)" fg:x="23417" fg:w="15"/><text x="35.5533%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::ConcurrentArena::AllocateAligned (26 samples, 0.04%)</title><rect x="35.3259%" y="101" width="0.0392%" height="15" fill="rgb(216,194,45)" fg:x="23432" fg:w="26"/><text x="35.5759%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::EncodeVarint32 (9 samples, 0.01%)</title><rect x="35.3651%" y="101" width="0.0136%" height="15" fill="rgb(218,18,35)" fg:x="23458" fg:w="9"/><text x="35.6151%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOTS (546 samples, 0.82%)</title><rect x="34.5841%" y="117" width="0.8231%" height="15" fill="rgb(207,83,51)" fg:x="22940" fg:w="546"/><text x="34.8341%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.02%)</title><rect x="35.3862%" y="101" width="0.0211%" height="15" fill="rgb(225,63,43)" fg:x="23472" fg:w="14"/><text x="35.6362%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::SeekToColumnFamily (12 samples, 0.02%)</title><rect x="35.4118%" y="117" width="0.0181%" height="15" fill="rgb(207,57,36)" fg:x="23489" fg:w="12"/><text x="35.6618%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyMemTablesImpl::Seek (7 samples, 0.01%)</title><rect x="35.4193%" y="101" width="0.0106%" height="15" fill="rgb(216,99,33)" fg:x="23494" fg:w="7"/><text x="35.6693%" y="111.50"></text></g><g><title>libc+ (8 samples, 0.01%)</title><rect x="35.4314%" y="117" width="0.0121%" height="15" fill="rgb(225,42,16)" fg:x="23502" fg:w="8"/><text x="35.6814%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (71 samples, 0.11%)</title><rect x="35.4751%" y="85" width="0.1070%" height="15" fill="rgb(220,201,45)" fg:x="23531" fg:w="71"/><text x="35.7251%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (67 samples, 0.10%)</title><rect x="35.4811%" y="69" width="0.1010%" height="15" fill="rgb(225,33,4)" fg:x="23535" fg:w="67"/><text x="35.7311%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (18 samples, 0.03%)</title><rect x="35.5550%" y="53" width="0.0271%" height="15" fill="rgb(224,33,50)" fg:x="23584" fg:w="18"/><text x="35.8050%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.01%)</title><rect x="35.5716%" y="37" width="0.0106%" height="15" fill="rgb(246,198,51)" fg:x="23595" fg:w="7"/><text x="35.8216%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (94 samples, 0.14%)</title><rect x="35.4450%" y="101" width="0.1417%" height="15" fill="rgb(205,22,4)" fg:x="23511" fg:w="94"/><text x="35.6950%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.01%)</title><rect x="35.5867%" y="101" width="0.0121%" height="15" fill="rgb(206,3,8)" fg:x="23605" fg:w="8"/><text x="35.8367%" y="111.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (109 samples, 0.16%)</title><rect x="35.4435%" y="117" width="0.1643%" height="15" fill="rgb(251,23,15)" fg:x="23510" fg:w="109"/><text x="35.6935%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (14 samples, 0.02%)</title><rect x="35.6138%" y="117" width="0.0211%" height="15" fill="rgb(252,88,28)" fg:x="23623" fg:w="14"/><text x="35.8638%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOTS (813 samples, 1.23%)</title><rect x="34.4258%" y="133" width="1.2257%" height="15" fill="rgb(212,127,14)" fg:x="22835" fg:w="813"/><text x="34.6758%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="35.6349%" y="117" width="0.0166%" height="15" fill="rgb(247,145,37)" fg:x="23637" fg:w="11"/><text x="35.8849%" y="127.50"></text></g><g><title>httpmq-rs`void std::__1::__tree_balance_after_insert&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;(std::__1::__tree_node_base&lt;void*&gt;*, std::__1::__tree_node_base (7 samples, 0.01%)</title><rect x="35.6606%" y="133" width="0.0106%" height="15" fill="rgb(209,117,53)" fg:x="23654" fg:w="7"/><text x="35.9106%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCF (846 samples, 1.28%)</title><rect x="34.4047%" y="149" width="1.2754%" height="15" fill="rgb(212,90,42)" fg:x="22821" fg:w="846"/><text x="34.6547%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOTS (11 samples, 0.02%)</title><rect x="35.6801%" y="149" width="0.0166%" height="15" fill="rgb(218,164,37)" fg:x="23667" fg:w="11"/><text x="35.9301%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Iterate (928 samples, 1.40%)</title><rect x="34.3384%" y="165" width="1.3990%" height="15" fill="rgb(246,65,34)" fg:x="22777" fg:w="928"/><text x="34.5884%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::ReadRecordFromWriteBatch (27 samples, 0.04%)</title><rect x="35.6967%" y="149" width="0.0407%" height="15" fill="rgb(231,100,33)" fg:x="23678" fg:w="27"/><text x="35.9467%" y="159.50"></text></g><g><title>httpmq-rs`std::__1::__tree&lt;std::__1::pair&lt;int, unsigned long long&gt;, std::__1::less&lt;std::__1::pair&lt;int, unsigned long long&gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;int, unsigned long long&gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::pair (16 samples, 0.02%)</title><rect x="35.7374%" y="165" width="0.0241%" height="15" fill="rgb(228,126,14)" fg:x="23705" fg:w="16"/><text x="35.9874%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::InsertInto (1,501 samples, 2.26%)</title><rect x="33.5228%" y="181" width="2.2629%" height="15" fill="rgb(215,173,21)" fg:x="22236" fg:w="1501"/><text x="33.7728%" y="191.50">h..</text></g><g><title>libc+ (17 samples, 0.03%)</title><rect x="41.5040%" y="165" width="0.0256%" height="15" fill="rgb(210,6,40)" fg:x="27530" fg:w="17"/><text x="41.7540%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::chrono::steady_clock::now (12 samples, 0.02%)</title><rect x="41.5296%" y="165" width="0.0181%" height="15" fill="rgb(212,48,18)" fg:x="27547" fg:w="12"/><text x="41.7796%" y="175.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (12 samples, 0.02%)</title><rect x="41.5296%" y="149" width="0.0181%" height="15" fill="rgb(230,214,11)" fg:x="27547" fg:w="12"/><text x="41.7796%" y="159.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (9 samples, 0.01%)</title><rect x="41.5341%" y="133" width="0.0136%" height="15" fill="rgb(254,105,39)" fg:x="27550" fg:w="9"/><text x="41.7841%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1,511 samples, 2.28%)</title><rect x="41.5552%" y="149" width="2.2780%" height="15" fill="rgb(245,158,5)" fg:x="27564" fg:w="1511"/><text x="41.8052%" y="159.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_check_init_slow (10 samples, 0.02%)</title><rect x="43.8784%" y="133" width="0.0151%" height="15" fill="rgb(249,208,11)" fg:x="29105" fg:w="10"/><text x="44.1284%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (28 samples, 0.04%)</title><rect x="43.9041%" y="117" width="0.0422%" height="15" fill="rgb(210,39,28)" fg:x="29122" fg:w="28"/><text x="44.1541%" y="127.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (34 samples, 0.05%)</title><rect x="43.9025%" y="133" width="0.0513%" height="15" fill="rgb(211,56,53)" fg:x="29121" fg:w="34"/><text x="44.1525%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (14 samples, 0.02%)</title><rect x="43.9538%" y="133" width="0.0211%" height="15" fill="rgb(226,201,30)" fg:x="29155" fg:w="14"/><text x="44.2038%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (100 samples, 0.15%)</title><rect x="43.8422%" y="149" width="0.1508%" height="15" fill="rgb(239,101,34)" fg:x="29081" fg:w="100"/><text x="44.0922%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (12 samples, 0.02%)</title><rect x="43.9749%" y="133" width="0.0181%" height="15" fill="rgb(226,209,5)" fg:x="29169" fg:w="12"/><text x="44.2249%" y="143.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock (1,626 samples, 2.45%)</title><rect x="41.5477%" y="165" width="2.4513%" height="15" fill="rgb(250,105,47)" fg:x="27559" fg:w="1626"/><text x="41.7977%" y="175.50">li..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (29 samples, 0.04%)</title><rect x="44.0066%" y="149" width="0.0437%" height="15" fill="rgb(230,72,3)" fg:x="29190" fg:w="29"/><text x="44.2566%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_check_init_slow (27 samples, 0.04%)</title><rect x="44.0096%" y="133" width="0.0407%" height="15" fill="rgb(232,218,39)" fg:x="29192" fg:w="27"/><text x="44.2596%" y="143.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (35 samples, 0.05%)</title><rect x="43.9990%" y="165" width="0.0528%" height="15" fill="rgb(248,166,6)" fg:x="29185" fg:w="35"/><text x="44.2490%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::unlock (9 samples, 0.01%)</title><rect x="44.0518%" y="165" width="0.0136%" height="15" fill="rgb(247,89,20)" fg:x="29220" fg:w="9"/><text x="44.3018%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (9 samples, 0.01%)</title><rect x="44.0518%" y="149" width="0.0136%" height="15" fill="rgb(248,130,54)" fg:x="29220" fg:w="9"/><text x="44.3018%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="44.0654%" y="165" width="0.0166%" height="15" fill="rgb(234,196,4)" fg:x="29229" fg:w="11"/><text x="44.3154%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (112 samples, 0.17%)</title><rect x="44.0865%" y="165" width="0.1689%" height="15" fill="rgb(250,143,31)" fg:x="29243" fg:w="112"/><text x="44.3365%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (8 samples, 0.01%)</title><rect x="44.2553%" y="165" width="0.0121%" height="15" fill="rgb(211,110,34)" fg:x="29355" fg:w="8"/><text x="44.5053%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_wait (12 samples, 0.02%)</title><rect x="44.2719%" y="165" width="0.0181%" height="15" fill="rgb(215,124,48)" fg:x="29366" fg:w="12"/><text x="44.5219%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (7 samples, 0.01%)</title><rect x="44.2900%" y="165" width="0.0106%" height="15" fill="rgb(216,46,13)" fg:x="29378" fg:w="7"/><text x="44.5400%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::AwaitState (5,664 samples, 8.54%)</title><rect x="35.7917%" y="181" width="8.5390%" height="15" fill="rgb(205,184,25)" fg:x="23741" fg:w="5664"/><text x="36.0417%" y="191.50">httpmq-rs`ro..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (20 samples, 0.03%)</title><rect x="44.3006%" y="165" width="0.0302%" height="15" fill="rgb(228,1,10)" fg:x="29385" fg:w="20"/><text x="44.5506%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`_mach_continuous_time (15 samples, 0.02%)</title><rect x="47.3987%" y="85" width="0.0226%" height="15" fill="rgb(213,116,27)" fg:x="31440" fg:w="15"/><text x="47.6487%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (13 samples, 0.02%)</title><rect x="47.4017%" y="69" width="0.0196%" height="15" fill="rgb(241,95,50)" fg:x="31442" fg:w="13"/><text x="47.6517%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`mach_continuous_time (16 samples, 0.02%)</title><rect x="47.3987%" y="101" width="0.0241%" height="15" fill="rgb(238,48,32)" fg:x="31440" fg:w="16"/><text x="47.6487%" y="111.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (31 samples, 0.05%)</title><rect x="47.3775%" y="117" width="0.0467%" height="15" fill="rgb(235,113,49)" fg:x="31426" fg:w="31"/><text x="47.6275%" y="127.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (52 samples, 0.08%)</title><rect x="47.3640%" y="133" width="0.0784%" height="15" fill="rgb(205,127,43)" fg:x="31417" fg:w="52"/><text x="47.6140%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (10 samples, 0.02%)</title><rect x="47.4273%" y="117" width="0.0151%" height="15" fill="rgb(250,162,2)" fg:x="31459" fg:w="10"/><text x="47.6773%" y="127.50"></text></g><g><title>libc++.1.dylib`std::__1::chrono::steady_clock::now (55 samples, 0.08%)</title><rect x="47.3640%" y="149" width="0.0829%" height="15" fill="rgb(220,13,41)" fg:x="31417" fg:w="55"/><text x="47.6140%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (359 samples, 0.54%)</title><rect x="47.4590%" y="149" width="0.5412%" height="15" fill="rgb(249,221,25)" fg:x="31480" fg:w="359"/><text x="47.7090%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::AwaitState (2,414 samples, 3.64%)</title><rect x="44.3699%" y="165" width="3.6393%" height="15" fill="rgb(215,208,19)" fg:x="29431" fg:w="2414"/><text x="44.6199%" y="175.50">http..</text></g><g><title>httpmq-rs`rocksdb::WriteThread::CompleteParallelMemTableWriter (2,450 samples, 3.69%)</title><rect x="44.3307%" y="181" width="3.6936%" height="15" fill="rgb(236,175,2)" fg:x="29405" fg:w="2450"/><text x="44.5807%" y="191.50">http..</text></g><g><title>httpmq-rs`rocksdb::WriteThread::EnterAsBatchGroupLeader (24 samples, 0.04%)</title><rect x="48.0243%" y="181" width="0.0362%" height="15" fill="rgb(241,52,2)" fg:x="31855" fg:w="24"/><text x="48.2743%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (169 samples, 0.25%)</title><rect x="48.1102%" y="133" width="0.2548%" height="15" fill="rgb(248,140,14)" fg:x="31912" fg:w="169"/><text x="48.3602%" y="143.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::notify_one (180 samples, 0.27%)</title><rect x="48.1087%" y="149" width="0.2714%" height="15" fill="rgb(253,22,42)" fg:x="31911" fg:w="180"/><text x="48.3587%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::unlock (7 samples, 0.01%)</title><rect x="48.3861%" y="149" width="0.0106%" height="15" fill="rgb(234,61,47)" fg:x="32095" fg:w="7"/><text x="48.6361%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (7 samples, 0.01%)</title><rect x="48.3861%" y="133" width="0.0106%" height="15" fill="rgb(208,226,15)" fg:x="32095" fg:w="7"/><text x="48.6361%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (7 samples, 0.01%)</title><rect x="48.3861%" y="117" width="0.0106%" height="15" fill="rgb(217,221,4)" fg:x="32095" fg:w="7"/><text x="48.6361%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::ExitAsBatchGroupLeader (226 samples, 0.34%)</title><rect x="48.0650%" y="165" width="0.3407%" height="15" fill="rgb(212,174,34)" fg:x="31882" fg:w="226"/><text x="48.3150%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::ExitAsBatchGroupFollower (231 samples, 0.35%)</title><rect x="48.0605%" y="181" width="0.3483%" height="15" fill="rgb(253,83,4)" fg:x="31879" fg:w="231"/><text x="48.3105%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (73 samples, 0.11%)</title><rect x="48.4238%" y="149" width="0.1101%" height="15" fill="rgb(250,195,49)" fg:x="32120" fg:w="73"/><text x="48.6738%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::notify_one (77 samples, 0.12%)</title><rect x="48.4238%" y="165" width="0.1161%" height="15" fill="rgb(241,192,25)" fg:x="32120" fg:w="77"/><text x="48.6738%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::ExitAsBatchGroupLeader (92 samples, 0.14%)</title><rect x="48.4087%" y="181" width="0.1387%" height="15" fill="rgb(208,124,10)" fg:x="32110" fg:w="92"/><text x="48.6587%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::JoinBatchGroup (31 samples, 0.05%)</title><rect x="48.5474%" y="181" width="0.0467%" height="15" fill="rgb(222,33,0)" fg:x="32202" fg:w="31"/><text x="48.7974%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::__1::atomic (31 samples, 0.05%)</title><rect x="48.5474%" y="165" width="0.0467%" height="15" fill="rgb(234,209,28)" fg:x="32202" fg:w="31"/><text x="48.7974%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (458 samples, 0.69%)</title><rect x="48.5987%" y="149" width="0.6905%" height="15" fill="rgb(224,11,23)" fg:x="32236" fg:w="458"/><text x="48.8487%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::notify_one (475 samples, 0.72%)</title><rect x="48.5972%" y="165" width="0.7161%" height="15" fill="rgb(232,99,1)" fg:x="32235" fg:w="475"/><text x="48.8472%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (13 samples, 0.02%)</title><rect x="49.2937%" y="149" width="0.0196%" height="15" fill="rgb(237,95,45)" fg:x="32697" fg:w="13"/><text x="49.5437%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (14 samples, 0.02%)</title><rect x="49.3133%" y="165" width="0.0211%" height="15" fill="rgb(208,109,11)" fg:x="32710" fg:w="14"/><text x="49.5633%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (14 samples, 0.02%)</title><rect x="49.3133%" y="149" width="0.0211%" height="15" fill="rgb(216,190,48)" fg:x="32710" fg:w="14"/><text x="49.5633%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (12 samples, 0.02%)</title><rect x="49.3344%" y="149" width="0.0181%" height="15" fill="rgb(251,171,36)" fg:x="32724" fg:w="12"/><text x="49.5844%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (12 samples, 0.02%)</title><rect x="49.3344%" y="133" width="0.0181%" height="15" fill="rgb(230,62,22)" fg:x="32724" fg:w="12"/><text x="49.5844%" y="143.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::unlock (14 samples, 0.02%)</title><rect x="49.3344%" y="165" width="0.0211%" height="15" fill="rgb(225,114,35)" fg:x="32724" fg:w="14"/><text x="49.5844%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::LaunchParallelMemTableWriters (513 samples, 0.77%)</title><rect x="48.5942%" y="181" width="0.7734%" height="15" fill="rgb(215,118,42)" fg:x="32233" fg:w="513"/><text x="48.8442%" y="191.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (35 samples, 0.05%)</title><rect x="49.3887%" y="181" width="0.0528%" height="15" fill="rgb(243,119,21)" fg:x="32760" fg:w="35"/><text x="49.6387%" y="191.50"></text></g><g><title>libc+ (36 samples, 0.05%)</title><rect x="49.4414%" y="181" width="0.0543%" height="15" fill="rgb(252,177,53)" fg:x="32795" fg:w="36"/><text x="49.6914%" y="191.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::~condition_variable (20 samples, 0.03%)</title><rect x="49.5032%" y="181" width="0.0302%" height="15" fill="rgb(237,209,29)" fg:x="32836" fg:w="20"/><text x="49.7532%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_destroy (20 samples, 0.03%)</title><rect x="49.5032%" y="165" width="0.0302%" height="15" fill="rgb(212,65,23)" fg:x="32836" fg:w="20"/><text x="49.7532%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::~mutex (23 samples, 0.03%)</title><rect x="49.5394%" y="181" width="0.0347%" height="15" fill="rgb(230,222,46)" fg:x="32860" fg:w="23"/><text x="49.7894%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (23 samples, 0.03%)</title><rect x="49.5394%" y="165" width="0.0347%" height="15" fill="rgb(215,135,32)" fg:x="32860" fg:w="23"/><text x="49.7894%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (38 samples, 0.06%)</title><rect x="49.5741%" y="181" width="0.0573%" height="15" fill="rgb(246,101,22)" fg:x="32883" fg:w="38"/><text x="49.8241%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_destroy (10 samples, 0.02%)</title><rect x="49.6314%" y="181" width="0.0151%" height="15" fill="rgb(206,107,13)" fg:x="32921" fg:w="10"/><text x="49.8814%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteImpl (12,873 samples, 19.41%)</title><rect x="30.2498%" y="197" width="19.4072%" height="15" fill="rgb(250,100,44)" fg:x="20065" fg:w="12873"/><text x="30.4998%" y="207.50">httpmq-rs`rocksdb::DBImpl::Wri..</text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::InsertInto (7 samples, 0.01%)</title><rect x="49.6736%" y="197" width="0.0106%" height="15" fill="rgb(231,147,38)" fg:x="32949" fg:w="7"/><text x="49.9236%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::CompleteParallelMemTableWriter (10 samples, 0.02%)</title><rect x="49.6872%" y="197" width="0.0151%" height="15" fill="rgb(229,8,40)" fg:x="32958" fg:w="10"/><text x="49.9372%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::JoinBatchGroup (11 samples, 0.02%)</title><rect x="49.7023%" y="197" width="0.0166%" height="15" fill="rgb(221,135,30)" fg:x="32968" fg:w="11"/><text x="49.9523%" y="207.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (15 samples, 0.02%)</title><rect x="49.7203%" y="197" width="0.0226%" height="15" fill="rgb(249,193,18)" fg:x="32980" fg:w="15"/><text x="49.9703%" y="207.50"></text></g><g><title>libc+ (17 samples, 0.03%)</title><rect x="49.7430%" y="197" width="0.0256%" height="15" fill="rgb(209,133,39)" fg:x="32995" fg:w="17"/><text x="49.9930%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::Write (12,981 samples, 19.57%)</title><rect x="30.2136%" y="213" width="19.5700%" height="15" fill="rgb(232,100,14)" fg:x="20041" fg:w="12981"/><text x="30.4636%" y="223.50">httpmq-rs`rocksdb::DBImpl::Write</text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="49.7731%" y="197" width="0.0106%" height="15" fill="rgb(224,185,1)" fg:x="33015" fg:w="7"/><text x="50.0231%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::EncodeVarint32 (7 samples, 0.01%)</title><rect x="49.8033%" y="197" width="0.0106%" height="15" fill="rgb(223,139,8)" fg:x="33035" fg:w="7"/><text x="50.0533%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (19 samples, 0.03%)</title><rect x="49.8681%" y="181" width="0.0286%" height="15" fill="rgb(232,213,38)" fg:x="33078" fg:w="19"/><text x="50.1181%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="49.8801%" y="165" width="0.0166%" height="15" fill="rgb(207,94,22)" fg:x="33086" fg:w="11"/><text x="50.1301%" y="175.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (8 samples, 0.01%)</title><rect x="49.9013%" y="181" width="0.0121%" height="15" fill="rgb(219,183,54)" fg:x="33100" fg:w="8"/><text x="50.1513%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Put (59 samples, 0.09%)</title><rect x="49.8304%" y="197" width="0.0889%" height="15" fill="rgb(216,185,54)" fg:x="33053" fg:w="59"/><text x="50.0804%" y="207.50"></text></g><g><title>libc+ (16 samples, 0.02%)</title><rect x="49.9193%" y="197" width="0.0241%" height="15" fill="rgb(254,217,39)" fg:x="33112" fg:w="16"/><text x="50.1693%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Put (108 samples, 0.16%)</title><rect x="49.7897%" y="213" width="0.1628%" height="15" fill="rgb(240,178,23)" fg:x="33026" fg:w="108"/><text x="50.0397%" y="223.50"></text></g><g><title>libc+ (25 samples, 0.04%)</title><rect x="49.9555%" y="197" width="0.0377%" height="15" fill="rgb(218,11,47)" fg:x="33136" fg:w="25"/><text x="50.2055%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.03%)</title><rect x="50.0324%" y="117" width="0.0256%" height="15" fill="rgb(218,51,51)" fg:x="33187" fg:w="17"/><text x="50.2824%" y="127.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::reserve (45 samples, 0.07%)</title><rect x="49.9932%" y="197" width="0.0678%" height="15" fill="rgb(238,126,27)" fg:x="33161" fg:w="45"/><text x="50.2432%" y="207.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (39 samples, 0.06%)</title><rect x="50.0023%" y="181" width="0.0588%" height="15" fill="rgb(249,202,22)" fg:x="33167" fg:w="39"/><text x="50.2523%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.06%)</title><rect x="50.0023%" y="165" width="0.0588%" height="15" fill="rgb(254,195,49)" fg:x="33167" fg:w="39"/><text x="50.2523%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (37 samples, 0.06%)</title><rect x="50.0053%" y="149" width="0.0558%" height="15" fill="rgb(208,123,14)" fg:x="33169" fg:w="37"/><text x="50.2553%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (36 samples, 0.05%)</title><rect x="50.0068%" y="133" width="0.0543%" height="15" fill="rgb(224,200,8)" fg:x="33170" fg:w="36"/><text x="50.2568%" y="143.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (16 samples, 0.02%)</title><rect x="50.0686%" y="181" width="0.0241%" height="15" fill="rgb(217,61,36)" fg:x="33211" fg:w="16"/><text x="50.3186%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="50.0807%" y="165" width="0.0121%" height="15" fill="rgb(206,35,45)" fg:x="33219" fg:w="8"/><text x="50.3307%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::resize (29 samples, 0.04%)</title><rect x="50.0611%" y="197" width="0.0437%" height="15" fill="rgb(217,65,33)" fg:x="33206" fg:w="29"/><text x="50.3111%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::WriteBatch (109 samples, 0.16%)</title><rect x="49.9525%" y="213" width="0.1643%" height="15" fill="rgb(222,158,48)" fg:x="33134" fg:w="109"/><text x="50.2025%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (10 samples, 0.02%)</title><rect x="50.1183%" y="197" width="0.0151%" height="15" fill="rgb(254,2,54)" fg:x="33244" fg:w="10"/><text x="50.3683%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (47 samples, 0.07%)</title><rect x="50.1455%" y="181" width="0.0709%" height="15" fill="rgb(250,143,38)" fg:x="33262" fg:w="47"/><text x="50.3955%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (47 samples, 0.07%)</title><rect x="50.1455%" y="165" width="0.0709%" height="15" fill="rgb(248,25,0)" fg:x="33262" fg:w="47"/><text x="50.3955%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (56 samples, 0.08%)</title><rect x="50.1334%" y="197" width="0.0844%" height="15" fill="rgb(206,152,27)" fg:x="33254" fg:w="56"/><text x="50.3834%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (19 samples, 0.03%)</title><rect x="50.3098%" y="165" width="0.0286%" height="15" fill="rgb(240,77,30)" fg:x="33371" fg:w="19"/><text x="50.5598%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (92 samples, 0.14%)</title><rect x="50.2178%" y="197" width="0.1387%" height="15" fill="rgb(231,5,3)" fg:x="33310" fg:w="92"/><text x="50.4678%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (61 samples, 0.09%)</title><rect x="50.2646%" y="181" width="0.0920%" height="15" fill="rgb(207,226,32)" fg:x="33341" fg:w="61"/><text x="50.5146%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (12 samples, 0.02%)</title><rect x="50.3385%" y="165" width="0.0181%" height="15" fill="rgb(222,207,47)" fg:x="33390" fg:w="12"/><text x="50.5885%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::~WriteBatch (171 samples, 0.26%)</title><rect x="50.1168%" y="213" width="0.2578%" height="15" fill="rgb(229,115,45)" fg:x="33243" fg:w="171"/><text x="50.3668%" y="223.50"></text></g><g><title>libc+ (18 samples, 0.03%)</title><rect x="50.3807%" y="213" width="0.0271%" height="15" fill="rgb(224,191,6)" fg:x="33418" fg:w="18"/><text x="50.6307%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.01%)</title><rect x="50.4184%" y="213" width="0.0121%" height="15" fill="rgb(230,227,24)" fg:x="33443" fg:w="8"/><text x="50.6684%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::DB::Put (13,447 samples, 20.27%)</title><rect x="30.1594%" y="229" width="20.2726%" height="15" fill="rgb(228,80,19)" fg:x="20005" fg:w="13447"/><text x="30.4094%" y="239.50">httpmq-rs`rocksdb::DB::Put</text></g><g><title>httpmq-rs`rocksdb::DBImpl::Write (8 samples, 0.01%)</title><rect x="50.4319%" y="229" width="0.0121%" height="15" fill="rgb(247,229,0)" fg:x="33452" fg:w="8"/><text x="50.6819%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Put (10 samples, 0.02%)</title><rect x="50.4440%" y="229" width="0.0151%" height="15" fill="rgb(237,194,15)" fg:x="33460" fg:w="10"/><text x="50.6940%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::WriteBatch (17 samples, 0.03%)</title><rect x="50.4591%" y="229" width="0.0256%" height="15" fill="rgb(219,203,20)" fg:x="33470" fg:w="17"/><text x="50.7091%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::DB::Put (13,533 samples, 20.40%)</title><rect x="30.1051%" y="261" width="20.4022%" height="15" fill="rgb(234,128,8)" fg:x="19969" fg:w="13533"/><text x="30.3551%" y="271.50">httpmq-rs`rocksdb::DB::Put</text></g><g><title>httpmq-rs`rocksdb::DBImpl::Put (13,501 samples, 20.35%)</title><rect x="30.1533%" y="245" width="20.3540%" height="15" fill="rgb(248,202,8)" fg:x="20001" fg:w="13501"/><text x="30.4033%" y="255.50">httpmq-rs`rocksdb::DBImpl::Put</text></g><g><title>httpmq-rs`rocksdb::WriteBatch::~WriteBatch (15 samples, 0.02%)</title><rect x="50.4847%" y="229" width="0.0226%" height="15" fill="rgb(206,104,37)" fg:x="33487" fg:w="15"/><text x="50.7347%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::DefaultColumnFamily (8 samples, 0.01%)</title><rect x="50.5073%" y="261" width="0.0121%" height="15" fill="rgb(223,8,27)" fg:x="33502" fg:w="8"/><text x="50.7573%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb_put (13,587 samples, 20.48%)</title><rect x="30.0553%" y="277" width="20.4836%" height="15" fill="rgb(216,217,28)" fg:x="19936" fg:w="13587"/><text x="30.3053%" y="287.50">httpmq-rs`rocksdb_put</text></g><g><title>httpmq-rs`rocksdb::DBImpl::Put (13 samples, 0.02%)</title><rect x="50.5194%" y="261" width="0.0196%" height="15" fill="rgb(249,199,1)" fg:x="33510" fg:w="13"/><text x="50.7694%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (17 samples, 0.03%)</title><rect x="50.5405%" y="277" width="0.0256%" height="15" fill="rgb(240,85,17)" fg:x="33524" fg:w="17"/><text x="50.7905%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (25 samples, 0.04%)</title><rect x="50.5812%" y="261" width="0.0377%" height="15" fill="rgb(206,108,45)" fg:x="33551" fg:w="25"/><text x="50.8312%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (24 samples, 0.04%)</title><rect x="50.5827%" y="245" width="0.0362%" height="15" fill="rgb(245,210,41)" fg:x="33552" fg:w="24"/><text x="50.8327%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.05%)</title><rect x="50.5676%" y="277" width="0.0528%" height="15" fill="rgb(206,13,37)" fg:x="33542" fg:w="35"/><text x="50.8176%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (17 samples, 0.03%)</title><rect x="50.6988%" y="261" width="0.0256%" height="15" fill="rgb(250,61,18)" fg:x="33629" fg:w="17"/><text x="50.9488%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (36 samples, 0.05%)</title><rect x="50.8043%" y="245" width="0.0543%" height="15" fill="rgb(235,172,48)" fg:x="33699" fg:w="36"/><text x="51.0543%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (104 samples, 0.16%)</title><rect x="50.7244%" y="261" width="0.1568%" height="15" fill="rgb(249,201,17)" fg:x="33646" fg:w="104"/><text x="50.9744%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.02%)</title><rect x="50.8586%" y="245" width="0.0226%" height="15" fill="rgb(219,208,6)" fg:x="33735" fg:w="15"/><text x="51.1086%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (178 samples, 0.27%)</title><rect x="50.6204%" y="277" width="0.2684%" height="15" fill="rgb(248,31,23)" fg:x="33577" fg:w="178"/><text x="50.8704%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::put (13,902 samples, 20.96%)</title><rect x="29.9392%" y="293" width="20.9585%" height="15" fill="rgb(245,15,42)" fg:x="19859" fg:w="13902"/><text x="30.1892%" y="303.50">httpmq-rs`rocksdb::db::DBWithThre..</text></g><g><title>httpmq-rs`rocksdb_writeoptions_destroy (10 samples, 0.02%)</title><rect x="50.8993%" y="293" width="0.0151%" height="15" fill="rgb(222,217,39)" fg:x="33762" fg:w="10"/><text x="51.1493%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.02%)</title><rect x="50.9762%" y="277" width="0.0166%" height="15" fill="rgb(210,219,27)" fg:x="33813" fg:w="11"/><text x="51.2262%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.02%)</title><rect x="50.9777%" y="261" width="0.0151%" height="15" fill="rgb(252,166,36)" fg:x="33814" fg:w="10"/><text x="51.2277%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (37 samples, 0.06%)</title><rect x="50.9385%" y="293" width="0.0558%" height="15" fill="rgb(245,132,34)" fg:x="33788" fg:w="37"/><text x="51.1885%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (16 samples, 0.02%)</title><rect x="51.0214%" y="277" width="0.0241%" height="15" fill="rgb(236,54,3)" fg:x="33843" fg:w="16"/><text x="51.2714%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.02%)</title><rect x="51.0711%" y="261" width="0.0151%" height="15" fill="rgb(241,173,43)" fg:x="33876" fg:w="10"/><text x="51.3211%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (31 samples, 0.05%)</title><rect x="51.0455%" y="277" width="0.0467%" height="15" fill="rgb(215,190,9)" fg:x="33859" fg:w="31"/><text x="51.2955%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (68 samples, 0.10%)</title><rect x="50.9943%" y="293" width="0.1025%" height="15" fill="rgb(242,101,16)" fg:x="33825" fg:w="68"/><text x="51.2443%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.01%)</title><rect x="51.0968%" y="293" width="0.0106%" height="15" fill="rgb(223,190,21)" fg:x="33893" fg:w="7"/><text x="51.3468%" y="303.50"></text></g><g><title>httpmq-rs`httpmq_rs::service::httpmq_now_putpos (22,171 samples, 33.42%)</title><rect x="17.7036%" y="309" width="33.4248%" height="15" fill="rgb(215,228,25)" fg:x="11743" fg:w="22171"/><text x="17.9536%" y="319.50">httpmq-rs`httpmq_rs::service::httpmq_now_putpos</text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.03%)</title><rect x="51.2340%" y="213" width="0.0332%" height="15" fill="rgb(225,36,22)" fg:x="33984" fg:w="22"/><text x="51.4840%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (24 samples, 0.04%)</title><rect x="51.2325%" y="229" width="0.0362%" height="15" fill="rgb(251,106,46)" fg:x="33983" fg:w="24"/><text x="51.4825%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.04%)</title><rect x="51.2294%" y="245" width="0.0407%" height="15" fill="rgb(208,90,1)" fg:x="33981" fg:w="27"/><text x="51.4794%" y="255.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (31 samples, 0.05%)</title><rect x="51.2279%" y="261" width="0.0467%" height="15" fill="rgb(243,10,4)" fg:x="33980" fg:w="31"/><text x="51.4779%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb_writeoptions_create (35 samples, 0.05%)</title><rect x="51.2264%" y="277" width="0.0528%" height="15" fill="rgb(212,137,27)" fg:x="33979" fg:w="35"/><text x="51.4764%" y="287.50"></text></g><g><title>httpmq-rs`&lt;rocksdb::db_options::WriteOptions as core::default::Default&gt;::default (44 samples, 0.07%)</title><rect x="51.2264%" y="293" width="0.0663%" height="15" fill="rgb(231,220,49)" fg:x="33979" fg:w="44"/><text x="51.4764%" y="303.50"></text></g><g><title>libc+ (9 samples, 0.01%)</title><rect x="51.2792%" y="277" width="0.0136%" height="15" fill="rgb(237,96,20)" fg:x="34014" fg:w="9"/><text x="51.5292%" y="287.50"></text></g><g><title>httpmq-rs`SaveError(char**, rocksdb::Status const&amp;) (7 samples, 0.01%)</title><rect x="51.2928%" y="293" width="0.0106%" height="15" fill="rgb(239,229,30)" fg:x="34023" fg:w="7"/><text x="51.5428%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb::DB::Put (9 samples, 0.01%)</title><rect x="51.3033%" y="293" width="0.0136%" height="15" fill="rgb(219,65,33)" fg:x="34030" fg:w="9"/><text x="51.5533%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyHandleImpl::GetID (12 samples, 0.02%)</title><rect x="51.4179%" y="229" width="0.0181%" height="15" fill="rgb(243,134,7)" fg:x="34106" fg:w="12"/><text x="51.6679%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::PreprocessWrite (17 samples, 0.03%)</title><rect x="52.1310%" y="197" width="0.0256%" height="15" fill="rgb(216,177,54)" fg:x="34579" fg:w="17"/><text x="52.3810%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteContext::~WriteContext (9 samples, 0.01%)</title><rect x="52.1566%" y="197" width="0.0136%" height="15" fill="rgb(211,160,20)" fg:x="34596" fg:w="9"/><text x="52.4066%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (25 samples, 0.04%)</title><rect x="52.2124%" y="149" width="0.0377%" height="15" fill="rgb(239,85,39)" fg:x="34633" fg:w="25"/><text x="52.4624%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.03%)</title><rect x="52.2154%" y="133" width="0.0347%" height="15" fill="rgb(232,125,22)" fg:x="34635" fg:w="23"/><text x="52.4654%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Append (43 samples, 0.06%)</title><rect x="52.1898%" y="165" width="0.0648%" height="15" fill="rgb(244,57,34)" fg:x="34618" fg:w="43"/><text x="52.4398%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MergeBatch (51 samples, 0.08%)</title><rect x="52.1822%" y="181" width="0.0769%" height="15" fill="rgb(214,203,32)" fg:x="34613" fg:w="51"/><text x="52.4322%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::GetFileSize (10 samples, 0.02%)</title><rect x="52.3858%" y="133" width="0.0151%" height="15" fill="rgb(207,58,43)" fg:x="34748" fg:w="10"/><text x="52.6358%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::Append (15 samples, 0.02%)</title><rect x="52.4385%" y="117" width="0.0226%" height="15" fill="rgb(215,193,15)" fg:x="34783" fg:w="15"/><text x="52.6885%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::WriteBuffered (1,950 samples, 2.94%)</title><rect x="52.4039%" y="133" width="2.9398%" height="15" fill="rgb(232,15,44)" fg:x="34760" fg:w="1950"/><text x="52.6539%" y="143.50">ht..</text></g><g><title>libsystem_kernel.dylib`write (1,907 samples, 2.87%)</title><rect x="52.4687%" y="117" width="2.8750%" height="15" fill="rgb(212,3,48)" fg:x="34803" fg:w="1907"/><text x="52.7187%" y="127.50">li..</text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Flush (2,008 samples, 3.03%)</title><rect x="52.3224%" y="149" width="3.0272%" height="15" fill="rgb(218,128,7)" fg:x="34706" fg:w="2008"/><text x="52.5724%" y="159.50">htt..</text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::WriteBuffered (10 samples, 0.02%)</title><rect x="55.3497%" y="149" width="0.0151%" height="15" fill="rgb(226,216,39)" fg:x="36714" fg:w="10"/><text x="55.5997%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::FSWritableFile::PrepareWrite (9 samples, 0.01%)</title><rect x="55.3783%" y="133" width="0.0136%" height="15" fill="rgb(243,47,51)" fg:x="36733" fg:w="9"/><text x="55.6283%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::use_direct_io (8 samples, 0.01%)</title><rect x="55.3919%" y="133" width="0.0121%" height="15" fill="rgb(241,183,40)" fg:x="36742" fg:w="8"/><text x="55.6419%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Append (50 samples, 0.08%)</title><rect x="55.4040%" y="133" width="0.0754%" height="15" fill="rgb(231,217,32)" fg:x="36750" fg:w="50"/><text x="55.6540%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (29 samples, 0.04%)</title><rect x="55.4356%" y="117" width="0.0437%" height="15" fill="rgb(229,61,38)" fg:x="36771" fg:w="29"/><text x="55.6856%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::crc32c::Extend (197 samples, 0.30%)</title><rect x="55.4793%" y="133" width="0.2970%" height="15" fill="rgb(225,210,5)" fg:x="36800" fg:w="197"/><text x="55.7293%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::log::Writer::AddRecord (2,318 samples, 3.49%)</title><rect x="52.2863%" y="165" width="3.4946%" height="15" fill="rgb(231,79,45)" fg:x="34682" fg:w="2318"/><text x="52.5363%" y="175.50">htt..</text></g><g><title>httpmq-rs`rocksdb::log::Writer::EmitPhysicalRecord (273 samples, 0.41%)</title><rect x="55.3693%" y="149" width="0.4116%" height="15" fill="rgb(224,100,7)" fg:x="36727" fg:w="273"/><text x="55.6193%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteToWAL (2,338 samples, 3.52%)</title><rect x="52.2591%" y="181" width="3.5247%" height="15" fill="rgb(241,198,18)" fg:x="34664" fg:w="2338"/><text x="52.5091%" y="191.50">htt..</text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Clear (16 samples, 0.02%)</title><rect x="55.7839%" y="181" width="0.0241%" height="15" fill="rgb(252,97,53)" fg:x="37002" fg:w="16"/><text x="56.0339%" y="191.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::resize (8 samples, 0.01%)</title><rect x="55.7959%" y="165" width="0.0121%" height="15" fill="rgb(220,88,7)" fg:x="37010" fg:w="8"/><text x="56.0459%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteToWAL (2,429 samples, 3.66%)</title><rect x="52.1702%" y="197" width="3.6619%" height="15" fill="rgb(213,176,14)" fg:x="34605" fg:w="2429"/><text x="52.4202%" y="207.50">http..</text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Lock (8 samples, 0.01%)</title><rect x="55.8381%" y="181" width="0.0121%" height="15" fill="rgb(246,73,7)" fg:x="37038" fg:w="8"/><text x="56.0881%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (8 samples, 0.01%)</title><rect x="55.8381%" y="165" width="0.0121%" height="15" fill="rgb(245,64,36)" fg:x="37038" fg:w="8"/><text x="56.0881%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.01%)</title><rect x="55.8593%" y="181" width="0.0136%" height="15" fill="rgb(245,80,10)" fg:x="37052" fg:w="9"/><text x="56.1093%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::InstrumentedMutex::Lock (30 samples, 0.05%)</title><rect x="55.8321%" y="197" width="0.0452%" height="15" fill="rgb(232,107,50)" fg:x="37034" fg:w="30"/><text x="56.0821%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Count (13 samples, 0.02%)</title><rect x="55.8969%" y="197" width="0.0196%" height="15" fill="rgb(253,3,0)" fg:x="37077" fg:w="13"/><text x="56.1469%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::ApproximateMemoryUsage (11 samples, 0.02%)</title><rect x="56.4487%" y="181" width="0.0166%" height="15" fill="rgb(212,99,53)" fg:x="37443" fg:w="11"/><text x="56.6987%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::UpdateFlushState (23 samples, 0.03%)</title><rect x="56.4653%" y="181" width="0.0347%" height="15" fill="rgb(249,111,54)" fg:x="37454" fg:w="23"/><text x="56.7153%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCF (15 samples, 0.02%)</title><rect x="56.5000%" y="181" width="0.0226%" height="15" fill="rgb(249,55,30)" fg:x="37477" fg:w="15"/><text x="56.7500%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.02%)</title><rect x="56.5452%" y="149" width="0.0241%" height="15" fill="rgb(237,47,42)" fg:x="37507" fg:w="16"/><text x="56.7952%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (14 samples, 0.02%)</title><rect x="56.5482%" y="133" width="0.0211%" height="15" fill="rgb(211,20,18)" fg:x="37509" fg:w="14"/><text x="56.7982%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.04%)</title><rect x="56.5347%" y="165" width="0.0392%" height="15" fill="rgb(231,203,46)" fg:x="37500" fg:w="26"/><text x="56.7847%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (44 samples, 0.07%)</title><rect x="56.5738%" y="165" width="0.0663%" height="15" fill="rgb(237,142,3)" fg:x="37526" fg:w="44"/><text x="56.8238%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (33 samples, 0.05%)</title><rect x="56.5904%" y="149" width="0.0498%" height="15" fill="rgb(241,107,1)" fg:x="37537" fg:w="33"/><text x="56.8404%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::~MemTableInserter (84 samples, 0.13%)</title><rect x="56.5226%" y="181" width="0.1266%" height="15" fill="rgb(229,83,13)" fg:x="37492" fg:w="84"/><text x="56.7726%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Handler::Continue (20 samples, 0.03%)</title><rect x="56.6568%" y="181" width="0.0302%" height="15" fill="rgb(241,91,40)" fg:x="37581" fg:w="20"/><text x="56.9068%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::GetVarint32PtrFallback (12 samples, 0.02%)</title><rect x="56.7548%" y="165" width="0.0181%" height="15" fill="rgb(225,3,45)" fg:x="37646" fg:w="12"/><text x="57.0048%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOTS (9 samples, 0.01%)</title><rect x="56.7819%" y="149" width="0.0136%" height="15" fill="rgb(244,223,14)" fg:x="37664" fg:w="9"/><text x="57.0319%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Allocate (21 samples, 0.03%)</title><rect x="56.8573%" y="133" width="0.0317%" height="15" fill="rgb(224,124,37)" fg:x="37714" fg:w="21"/><text x="57.1073%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyMemTablesImpl::Seek (10 samples, 0.02%)</title><rect x="56.9115%" y="133" width="0.0151%" height="15" fill="rgb(251,171,30)" fg:x="37750" fg:w="10"/><text x="57.1615%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (15 samples, 0.02%)</title><rect x="57.0442%" y="85" width="0.0226%" height="15" fill="rgb(236,46,54)" fg:x="37838" fg:w="15"/><text x="57.2942%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (11 samples, 0.02%)</title><rect x="57.0502%" y="69" width="0.0166%" height="15" fill="rgb(245,213,5)" fg:x="37842" fg:w="11"/><text x="57.3002%" y="79.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (25 samples, 0.04%)</title><rect x="57.0412%" y="101" width="0.0377%" height="15" fill="rgb(230,144,27)" fg:x="37836" fg:w="25"/><text x="57.2912%" y="111.50"></text></g><g><title>httpmq-rs`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (55 samples, 0.08%)</title><rect x="56.9990%" y="117" width="0.0829%" height="15" fill="rgb(220,86,6)" fg:x="37808" fg:w="55"/><text x="57.2490%" y="127.50"></text></g><g><title>httpmq-rs`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList (7 samples, 0.01%)</title><rect x="57.0819%" y="117" width="0.0106%" height="15" fill="rgb(240,20,13)" fg:x="37863" fg:w="7"/><text x="57.3319%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::ConcurrentArena::AllocateAligned (36 samples, 0.05%)</title><rect x="57.1347%" y="101" width="0.0543%" height="15" fill="rgb(217,89,34)" fg:x="37898" fg:w="36"/><text x="57.3847%" y="111.50"></text></g><g><title>httpmq-rs`char* rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::&apos;lambda&apos;()&gt;(unsigned long, bool, rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::&apos;lambda&apos; (34 samples, 0.05%)</title><rect x="57.1377%" y="85" width="0.0513%" height="15" fill="rgb(229,13,5)" fg:x="37900" fg:w="34"/><text x="57.3877%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Allocate (76 samples, 0.11%)</title><rect x="57.0925%" y="117" width="0.1146%" height="15" fill="rgb(244,67,35)" fg:x="37870" fg:w="76"/><text x="57.3425%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.01%)</title><rect x="57.1950%" y="101" width="0.0121%" height="15" fill="rgb(221,40,2)" fg:x="37938" fg:w="8"/><text x="57.4450%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (16 samples, 0.02%)</title><rect x="57.6925%" y="85" width="0.0241%" height="15" fill="rgb(237,157,21)" fg:x="38268" fg:w="16"/><text x="57.9425%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (115 samples, 0.17%)</title><rect x="57.8176%" y="69" width="0.1734%" height="15" fill="rgb(222,94,11)" fg:x="38351" fg:w="115"/><text x="58.0676%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (80 samples, 0.12%)</title><rect x="57.8704%" y="53" width="0.1206%" height="15" fill="rgb(249,113,6)" fg:x="38386" fg:w="80"/><text x="58.1204%" y="63.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (9 samples, 0.01%)</title><rect x="57.9910%" y="69" width="0.0136%" height="15" fill="rgb(238,137,36)" fg:x="38466" fg:w="9"/><text x="58.2410%" y="79.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (28 samples, 0.04%)</title><rect x="58.0046%" y="69" width="0.0422%" height="15" fill="rgb(210,102,26)" fg:x="38475" fg:w="28"/><text x="58.2546%" y="79.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (225 samples, 0.34%)</title><rect x="57.7166%" y="85" width="0.3392%" height="15" fill="rgb(218,30,30)" fg:x="38284" fg:w="225"/><text x="57.9666%" y="95.50"></text></g><g><title>httpmq-rs`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList (577 samples, 0.87%)</title><rect x="57.2116%" y="101" width="0.8699%" height="15" fill="rgb(214,67,26)" fg:x="37949" fg:w="577"/><text x="57.4616%" y="111.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.02%)</title><rect x="58.0588%" y="85" width="0.0226%" height="15" fill="rgb(251,9,53)" fg:x="38511" fg:w="15"/><text x="58.3088%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (16 samples, 0.02%)</title><rect x="58.0814%" y="101" width="0.0241%" height="15" fill="rgb(228,204,25)" fg:x="38526" fg:w="16"/><text x="58.3314%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::InsertKeyConcurrently (605 samples, 0.91%)</title><rect x="57.2070%" y="117" width="0.9121%" height="15" fill="rgb(207,153,8)" fg:x="37946" fg:w="605"/><text x="57.4570%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableRep::KeyComparator::decode_key (9 samples, 0.01%)</title><rect x="58.1056%" y="101" width="0.0136%" height="15" fill="rgb(242,9,16)" fg:x="38542" fg:w="9"/><text x="58.3556%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::ConcurrentArena::AllocateAligned (13 samples, 0.02%)</title><rect x="58.1191%" y="117" width="0.0196%" height="15" fill="rgb(217,211,10)" fg:x="38551" fg:w="13"/><text x="58.3691%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::EncodeVarint32 (7 samples, 0.01%)</title><rect x="58.1387%" y="117" width="0.0106%" height="15" fill="rgb(219,228,52)" fg:x="38564" fg:w="7"/><text x="58.3887%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::Random::GetTLSInstance (10 samples, 0.02%)</title><rect x="58.1523%" y="117" width="0.0151%" height="15" fill="rgb(231,92,29)" fg:x="38573" fg:w="10"/><text x="58.4023%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOTS (1,006 samples, 1.52%)</title><rect x="56.9357%" y="133" width="1.5166%" height="15" fill="rgb(232,8,23)" fg:x="37766" fg:w="1006"/><text x="57.1857%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (189 samples, 0.28%)</title><rect x="58.1674%" y="117" width="0.2849%" height="15" fill="rgb(216,211,34)" fg:x="38583" fg:w="189"/><text x="58.4174%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::CheckMemtableFull (10 samples, 0.02%)</title><rect x="58.4523%" y="133" width="0.0151%" height="15" fill="rgb(236,151,0)" fg:x="38772" fg:w="10"/><text x="58.7023%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::SeekToColumnFamily (16 samples, 0.02%)</title><rect x="58.4674%" y="133" width="0.0241%" height="15" fill="rgb(209,168,3)" fg:x="38782" fg:w="16"/><text x="58.7174%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyMemTablesImpl::Seek (12 samples, 0.02%)</title><rect x="58.4734%" y="117" width="0.0181%" height="15" fill="rgb(208,129,28)" fg:x="38786" fg:w="12"/><text x="58.7234%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (81 samples, 0.12%)</title><rect x="58.5247%" y="101" width="0.1221%" height="15" fill="rgb(229,78,22)" fg:x="38820" fg:w="81"/><text x="58.7747%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (76 samples, 0.11%)</title><rect x="58.5322%" y="85" width="0.1146%" height="15" fill="rgb(228,187,13)" fg:x="38825" fg:w="76"/><text x="58.7822%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (34 samples, 0.05%)</title><rect x="58.5955%" y="69" width="0.0513%" height="15" fill="rgb(240,119,24)" fg:x="38867" fg:w="34"/><text x="58.8455%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (104 samples, 0.16%)</title><rect x="58.4975%" y="117" width="0.1568%" height="15" fill="rgb(209,194,42)" fg:x="38802" fg:w="104"/><text x="58.7475%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (12 samples, 0.02%)</title><rect x="58.6543%" y="117" width="0.0181%" height="15" fill="rgb(247,200,46)" fg:x="38906" fg:w="12"/><text x="58.9043%" y="127.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (121 samples, 0.18%)</title><rect x="58.4960%" y="133" width="0.1824%" height="15" fill="rgb(218,76,16)" fg:x="38801" fg:w="121"/><text x="58.7460%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (10 samples, 0.02%)</title><rect x="58.6830%" y="133" width="0.0151%" height="15" fill="rgb(225,21,48)" fg:x="38925" fg:w="10"/><text x="58.9330%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOTS (1,270 samples, 1.91%)</title><rect x="56.7955%" y="149" width="1.9146%" height="15" fill="rgb(239,223,50)" fg:x="37673" fg:w="1270"/><text x="57.0455%" y="159.50">h..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="58.6980%" y="133" width="0.0121%" height="15" fill="rgb(244,45,21)" fg:x="38935" fg:w="8"/><text x="58.9480%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCF (1,299 samples, 1.96%)</title><rect x="56.7729%" y="165" width="1.9584%" height="15" fill="rgb(232,33,43)" fg:x="37658" fg:w="1299"/><text x="57.0229%" y="175.50">h..</text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Iterate (1,392 samples, 2.10%)</title><rect x="56.6869%" y="181" width="2.0986%" height="15" fill="rgb(209,8,3)" fg:x="37601" fg:w="1392"/><text x="56.9369%" y="191.50">h..</text></g><g><title>httpmq-rs`rocksdb::ReadRecordFromWriteBatch (31 samples, 0.05%)</title><rect x="58.7387%" y="165" width="0.0467%" height="15" fill="rgb(214,25,53)" fg:x="38962" fg:w="31"/><text x="58.9887%" y="175.50"></text></g><g><title>httpmq-rs`std::__1::__tree&lt;std::__1::pair&lt;int, unsigned long long&gt;, std::__1::less&lt;std::__1::pair&lt;int, unsigned long long&gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;int, unsigned long long&gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::pair (9 samples, 0.01%)</title><rect x="58.7855%" y="181" width="0.0136%" height="15" fill="rgb(254,186,54)" fg:x="38993" fg:w="9"/><text x="59.0355%" y="191.50"></text></g><g><title>libc+ (8 samples, 0.01%)</title><rect x="58.7991%" y="181" width="0.0121%" height="15" fill="rgb(208,174,49)" fg:x="39002" fg:w="8"/><text x="59.0491%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::InsertInto (1,935 samples, 2.92%)</title><rect x="55.9165%" y="197" width="2.9172%" height="15" fill="rgb(233,191,51)" fg:x="37090" fg:w="1935"/><text x="56.1665%" y="207.50">ht..</text></g><g><title>libc+ (8 samples, 0.01%)</title><rect x="64.7450%" y="181" width="0.0121%" height="15" fill="rgb(222,134,10)" fg:x="42946" fg:w="8"/><text x="64.9950%" y="191.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (7 samples, 0.01%)</title><rect x="64.7586%" y="149" width="0.0106%" height="15" fill="rgb(230,226,20)" fg:x="42955" fg:w="7"/><text x="65.0086%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::chrono::steady_clock::now (9 samples, 0.01%)</title><rect x="64.7571%" y="181" width="0.0136%" height="15" fill="rgb(251,111,25)" fg:x="42954" fg:w="9"/><text x="65.0071%" y="191.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (9 samples, 0.01%)</title><rect x="64.7571%" y="165" width="0.0136%" height="15" fill="rgb(224,40,46)" fg:x="42954" fg:w="9"/><text x="65.0071%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1,474 samples, 2.22%)</title><rect x="64.7872%" y="165" width="2.2222%" height="15" fill="rgb(236,108,47)" fg:x="42974" fg:w="1474"/><text x="65.0372%" y="175.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_check_init_slow (8 samples, 0.01%)</title><rect x="67.0712%" y="149" width="0.0121%" height="15" fill="rgb(234,93,0)" fg:x="44489" fg:w="8"/><text x="67.3212%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (7 samples, 0.01%)</title><rect x="67.0833%" y="149" width="0.0106%" height="15" fill="rgb(224,213,32)" fg:x="44497" fg:w="7"/><text x="67.3333%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (43 samples, 0.06%)</title><rect x="67.0953%" y="133" width="0.0648%" height="15" fill="rgb(251,11,48)" fg:x="44505" fg:w="43"/><text x="67.3453%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (47 samples, 0.07%)</title><rect x="67.0938%" y="149" width="0.0709%" height="15" fill="rgb(236,173,5)" fg:x="44504" fg:w="47"/><text x="67.3438%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (13 samples, 0.02%)</title><rect x="67.1647%" y="149" width="0.0196%" height="15" fill="rgb(230,95,12)" fg:x="44551" fg:w="13"/><text x="67.4147%" y="159.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (119 samples, 0.18%)</title><rect x="67.0154%" y="165" width="0.1794%" height="15" fill="rgb(232,209,1)" fg:x="44452" fg:w="119"/><text x="67.2654%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (7 samples, 0.01%)</title><rect x="67.1843%" y="149" width="0.0106%" height="15" fill="rgb(232,6,1)" fg:x="44564" fg:w="7"/><text x="67.4343%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock (1,611 samples, 2.43%)</title><rect x="64.7706%" y="181" width="2.4287%" height="15" fill="rgb(210,224,50)" fg:x="42963" fg:w="1611"/><text x="65.0206%" y="191.50">li..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (34 samples, 0.05%)</title><rect x="67.2084%" y="165" width="0.0513%" height="15" fill="rgb(228,127,35)" fg:x="44580" fg:w="34"/><text x="67.4584%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_check_init_slow (31 samples, 0.05%)</title><rect x="67.2129%" y="149" width="0.0467%" height="15" fill="rgb(245,102,45)" fg:x="44583" fg:w="31"/><text x="67.4629%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (44 samples, 0.07%)</title><rect x="67.1993%" y="181" width="0.0663%" height="15" fill="rgb(214,1,49)" fg:x="44574" fg:w="44"/><text x="67.4493%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.02%)</title><rect x="67.2717%" y="181" width="0.0226%" height="15" fill="rgb(226,163,40)" fg:x="44622" fg:w="15"/><text x="67.5217%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (84 samples, 0.13%)</title><rect x="67.2958%" y="181" width="0.1266%" height="15" fill="rgb(239,212,28)" fg:x="44638" fg:w="84"/><text x="67.5458%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (8 samples, 0.01%)</title><rect x="67.4225%" y="181" width="0.0121%" height="15" fill="rgb(220,20,13)" fg:x="44722" fg:w="8"/><text x="67.6725%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::AwaitState (5,738 samples, 8.65%)</title><rect x="58.8367%" y="197" width="8.6506%" height="15" fill="rgb(210,164,35)" fg:x="39027" fg:w="5738"/><text x="59.0867%" y="207.50">httpmq-rs`ro..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (25 samples, 0.04%)</title><rect x="67.4496%" y="181" width="0.0377%" height="15" fill="rgb(248,109,41)" fg:x="44740" fg:w="25"/><text x="67.6996%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_continuous_time (10 samples, 0.02%)</title><rect x="70.3125%" y="117" width="0.0151%" height="15" fill="rgb(238,23,50)" fg:x="46639" fg:w="10"/><text x="70.5625%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`_mach_continuous_time (10 samples, 0.02%)</title><rect x="70.3125%" y="101" width="0.0151%" height="15" fill="rgb(211,48,49)" fg:x="46639" fg:w="10"/><text x="70.5625%" y="111.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (18 samples, 0.03%)</title><rect x="70.3050%" y="133" width="0.0271%" height="15" fill="rgb(223,36,21)" fg:x="46634" fg:w="18"/><text x="70.5550%" y="143.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (27 samples, 0.04%)</title><rect x="70.2974%" y="149" width="0.0407%" height="15" fill="rgb(207,123,46)" fg:x="46629" fg:w="27"/><text x="70.5474%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::chrono::steady_clock::now (31 samples, 0.05%)</title><rect x="70.2974%" y="165" width="0.0467%" height="15" fill="rgb(240,218,32)" fg:x="46629" fg:w="31"/><text x="70.5474%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (315 samples, 0.47%)</title><rect x="70.3517%" y="165" width="0.4749%" height="15" fill="rgb(252,5,43)" fg:x="46665" fg:w="315"/><text x="70.6017%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::AwaitState (2,196 samples, 3.31%)</title><rect x="67.5235%" y="181" width="3.3107%" height="15" fill="rgb(252,84,19)" fg:x="44789" fg:w="2196"/><text x="67.7735%" y="191.50">htt..</text></g><g><title>httpmq-rs`rocksdb::WriteThread::CompleteParallelMemTableWriter (2,222 samples, 3.35%)</title><rect x="67.4873%" y="197" width="3.3499%" height="15" fill="rgb(243,152,39)" fg:x="44765" fg:w="2222"/><text x="67.7373%" y="207.50">htt..</text></g><g><title>httpmq-rs`rocksdb::WriteThread::EnterAsBatchGroupLeader (33 samples, 0.05%)</title><rect x="70.8372%" y="197" width="0.0498%" height="15" fill="rgb(234,160,15)" fg:x="46987" fg:w="33"/><text x="71.0872%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (211 samples, 0.32%)</title><rect x="70.9487%" y="149" width="0.3181%" height="15" fill="rgb(237,34,20)" fg:x="47061" fg:w="211"/><text x="71.1987%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::notify_one (226 samples, 0.34%)</title><rect x="70.9472%" y="165" width="0.3407%" height="15" fill="rgb(229,97,13)" fg:x="47060" fg:w="226"/><text x="71.1972%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (8 samples, 0.01%)</title><rect x="71.2759%" y="149" width="0.0121%" height="15" fill="rgb(234,71,50)" fg:x="47278" fg:w="8"/><text x="71.5259%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::ExitAsBatchGroupLeader (269 samples, 0.41%)</title><rect x="70.8945%" y="181" width="0.4055%" height="15" fill="rgb(253,155,4)" fg:x="47025" fg:w="269"/><text x="71.1445%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::ExitAsBatchGroupFollower (279 samples, 0.42%)</title><rect x="70.8869%" y="197" width="0.4206%" height="15" fill="rgb(222,185,37)" fg:x="47020" fg:w="279"/><text x="71.1369%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (54 samples, 0.08%)</title><rect x="71.3166%" y="165" width="0.0814%" height="15" fill="rgb(251,177,13)" fg:x="47305" fg:w="54"/><text x="71.5666%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::notify_one (58 samples, 0.09%)</title><rect x="71.3166%" y="181" width="0.0874%" height="15" fill="rgb(250,179,40)" fg:x="47305" fg:w="58"/><text x="71.5666%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::ExitAsBatchGroupLeader (68 samples, 0.10%)</title><rect x="71.3075%" y="197" width="0.1025%" height="15" fill="rgb(242,44,2)" fg:x="47299" fg:w="68"/><text x="71.5575%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::JoinBatchGroup (27 samples, 0.04%)</title><rect x="71.4100%" y="197" width="0.0407%" height="15" fill="rgb(216,177,13)" fg:x="47367" fg:w="27"/><text x="71.6600%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::__1::atomic (26 samples, 0.04%)</title><rect x="71.4116%" y="181" width="0.0392%" height="15" fill="rgb(216,106,43)" fg:x="47368" fg:w="26"/><text x="71.6616%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (691 samples, 1.04%)</title><rect x="71.4764%" y="165" width="1.0417%" height="15" fill="rgb(216,183,2)" fg:x="47411" fg:w="691"/><text x="71.7264%" y="175.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::notify_one (713 samples, 1.07%)</title><rect x="71.4734%" y="181" width="1.0749%" height="15" fill="rgb(249,75,3)" fg:x="47409" fg:w="713"/><text x="71.7234%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (17 samples, 0.03%)</title><rect x="72.5227%" y="165" width="0.0256%" height="15" fill="rgb(219,67,39)" fg:x="48105" fg:w="17"/><text x="72.7727%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (7 samples, 0.01%)</title><rect x="72.5377%" y="149" width="0.0106%" height="15" fill="rgb(253,228,2)" fg:x="48115" fg:w="7"/><text x="72.7877%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (22 samples, 0.03%)</title><rect x="72.5483%" y="181" width="0.0332%" height="15" fill="rgb(235,138,27)" fg:x="48122" fg:w="22"/><text x="72.7983%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (21 samples, 0.03%)</title><rect x="72.5498%" y="165" width="0.0317%" height="15" fill="rgb(236,97,51)" fg:x="48123" fg:w="21"/><text x="72.7998%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (24 samples, 0.04%)</title><rect x="72.5814%" y="165" width="0.0362%" height="15" fill="rgb(240,80,30)" fg:x="48144" fg:w="24"/><text x="72.8314%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (23 samples, 0.03%)</title><rect x="72.5830%" y="149" width="0.0347%" height="15" fill="rgb(230,178,19)" fg:x="48145" fg:w="23"/><text x="72.8330%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::unlock (28 samples, 0.04%)</title><rect x="72.5814%" y="181" width="0.0422%" height="15" fill="rgb(210,190,27)" fg:x="48144" fg:w="28"/><text x="72.8314%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::LaunchParallelMemTableWriters (786 samples, 1.18%)</title><rect x="71.4508%" y="197" width="1.1850%" height="15" fill="rgb(222,107,31)" fg:x="47394" fg:w="786"/><text x="71.7008%" y="207.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (43 samples, 0.06%)</title><rect x="72.6568%" y="197" width="0.0648%" height="15" fill="rgb(216,127,34)" fg:x="48194" fg:w="43"/><text x="72.9068%" y="207.50"></text></g><g><title>libc+ (44 samples, 0.07%)</title><rect x="72.7217%" y="197" width="0.0663%" height="15" fill="rgb(234,116,52)" fg:x="48237" fg:w="44"/><text x="72.9717%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::~condition_variable (20 samples, 0.03%)</title><rect x="72.7925%" y="197" width="0.0302%" height="15" fill="rgb(222,124,15)" fg:x="48284" fg:w="20"/><text x="73.0425%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_destroy (20 samples, 0.03%)</title><rect x="72.7925%" y="181" width="0.0302%" height="15" fill="rgb(231,179,28)" fg:x="48284" fg:w="20"/><text x="73.0425%" y="191.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::~mutex (14 samples, 0.02%)</title><rect x="72.8332%" y="197" width="0.0211%" height="15" fill="rgb(226,93,45)" fg:x="48311" fg:w="14"/><text x="73.0832%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (14 samples, 0.02%)</title><rect x="72.8332%" y="181" width="0.0211%" height="15" fill="rgb(215,8,51)" fg:x="48311" fg:w="14"/><text x="73.0832%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (51 samples, 0.08%)</title><rect x="72.8543%" y="197" width="0.0769%" height="15" fill="rgb(223,106,5)" fg:x="48325" fg:w="51"/><text x="73.1043%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_destroy (10 samples, 0.02%)</title><rect x="72.9312%" y="197" width="0.0151%" height="15" fill="rgb(250,191,5)" fg:x="48376" fg:w="10"/><text x="73.1812%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteImpl (14,247 samples, 21.48%)</title><rect x="51.4812%" y="213" width="21.4786%" height="15" fill="rgb(242,132,44)" fg:x="34148" fg:w="14247"/><text x="51.7312%" y="223.50">httpmq-rs`rocksdb::DBImpl::WriteIm..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (9 samples, 0.01%)</title><rect x="72.9463%" y="197" width="0.0136%" height="15" fill="rgb(251,152,29)" fg:x="48386" fg:w="9"/><text x="73.1963%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::InstrumentedMutex::Lock (7 samples, 0.01%)</title><rect x="72.9629%" y="213" width="0.0106%" height="15" fill="rgb(218,179,5)" fg:x="48397" fg:w="7"/><text x="73.2129%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::InsertInto (7 samples, 0.01%)</title><rect x="72.9795%" y="213" width="0.0106%" height="15" fill="rgb(227,67,19)" fg:x="48408" fg:w="7"/><text x="73.2295%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::CompleteParallelMemTableWriter (11 samples, 0.02%)</title><rect x="72.9900%" y="213" width="0.0166%" height="15" fill="rgb(233,119,31)" fg:x="48415" fg:w="11"/><text x="73.2400%" y="223.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (18 samples, 0.03%)</title><rect x="73.0156%" y="213" width="0.0271%" height="15" fill="rgb(241,120,22)" fg:x="48432" fg:w="18"/><text x="73.2656%" y="223.50"></text></g><g><title>libc+ (15 samples, 0.02%)</title><rect x="73.0428%" y="213" width="0.0226%" height="15" fill="rgb(224,102,30)" fg:x="48450" fg:w="15"/><text x="73.2928%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::Write (14,354 samples, 21.64%)</title><rect x="51.4360%" y="229" width="21.6400%" height="15" fill="rgb(210,164,37)" fg:x="34118" fg:w="14354"/><text x="51.6860%" y="239.50">httpmq-rs`rocksdb::DBImpl::Write</text></g><g><title>httpmq-rs`rocksdb::EncodeVarint32 (7 samples, 0.01%)</title><rect x="73.0970%" y="213" width="0.0106%" height="15" fill="rgb(226,191,16)" fg:x="48486" fg:w="7"/><text x="73.3470%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::LocalSavePoint::commit (7 samples, 0.01%)</title><rect x="73.1453%" y="197" width="0.0106%" height="15" fill="rgb(214,40,45)" fg:x="48518" fg:w="7"/><text x="73.3953%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (50 samples, 0.08%)</title><rect x="73.1558%" y="197" width="0.0754%" height="15" fill="rgb(244,29,26)" fg:x="48525" fg:w="50"/><text x="73.4058%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (39 samples, 0.06%)</title><rect x="73.1724%" y="181" width="0.0588%" height="15" fill="rgb(216,16,5)" fg:x="48536" fg:w="39"/><text x="73.4224%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Put (81 samples, 0.12%)</title><rect x="73.1212%" y="213" width="0.1221%" height="15" fill="rgb(249,76,35)" fg:x="48502" fg:w="81"/><text x="73.3712%" y="223.50"></text></g><g><title>libc+ (11 samples, 0.02%)</title><rect x="73.2433%" y="213" width="0.0166%" height="15" fill="rgb(207,11,44)" fg:x="48583" fg:w="11"/><text x="73.4933%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Put (122 samples, 0.18%)</title><rect x="73.0835%" y="229" width="0.1839%" height="15" fill="rgb(228,190,49)" fg:x="48477" fg:w="122"/><text x="73.3335%" y="239.50"></text></g><g><title>libc+ (19 samples, 0.03%)</title><rect x="73.2704%" y="213" width="0.0286%" height="15" fill="rgb(214,173,12)" fg:x="48601" fg:w="19"/><text x="73.5204%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (58 samples, 0.09%)</title><rect x="73.3232%" y="149" width="0.0874%" height="15" fill="rgb(218,26,35)" fg:x="48636" fg:w="58"/><text x="73.5732%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (27 samples, 0.04%)</title><rect x="73.3699%" y="133" width="0.0407%" height="15" fill="rgb(220,200,19)" fg:x="48667" fg:w="27"/><text x="73.6199%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (65 samples, 0.10%)</title><rect x="73.3141%" y="181" width="0.0980%" height="15" fill="rgb(239,95,49)" fg:x="48630" fg:w="65"/><text x="73.5641%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (60 samples, 0.09%)</title><rect x="73.3217%" y="165" width="0.0905%" height="15" fill="rgb(235,85,53)" fg:x="48635" fg:w="60"/><text x="73.5717%" y="175.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (66 samples, 0.10%)</title><rect x="73.3141%" y="197" width="0.0995%" height="15" fill="rgb(233,133,31)" fg:x="48630" fg:w="66"/><text x="73.5641%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::reserve (74 samples, 0.11%)</title><rect x="73.3036%" y="213" width="0.1116%" height="15" fill="rgb(218,25,20)" fg:x="48623" fg:w="74"/><text x="73.5536%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (93 samples, 0.14%)</title><rect x="73.4182%" y="197" width="0.1402%" height="15" fill="rgb(252,210,38)" fg:x="48699" fg:w="93"/><text x="73.6682%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (79 samples, 0.12%)</title><rect x="73.4393%" y="181" width="0.1191%" height="15" fill="rgb(242,134,21)" fg:x="48713" fg:w="79"/><text x="73.6893%" y="191.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::resize (109 samples, 0.16%)</title><rect x="73.4151%" y="213" width="0.1643%" height="15" fill="rgb(213,28,48)" fg:x="48697" fg:w="109"/><text x="73.6651%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="73.5659%" y="197" width="0.0136%" height="15" fill="rgb(250,196,2)" fg:x="48797" fg:w="9"/><text x="73.8159%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::WriteBatch (218 samples, 0.33%)</title><rect x="73.2674%" y="229" width="0.3287%" height="15" fill="rgb(227,5,17)" fg:x="48599" fg:w="218"/><text x="73.5174%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (32 samples, 0.05%)</title><rect x="73.6262%" y="197" width="0.0482%" height="15" fill="rgb(221,226,24)" fg:x="48837" fg:w="32"/><text x="73.8762%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (31 samples, 0.05%)</title><rect x="73.6277%" y="181" width="0.0467%" height="15" fill="rgb(211,5,48)" fg:x="48838" fg:w="31"/><text x="73.8777%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (41 samples, 0.06%)</title><rect x="73.6141%" y="213" width="0.0618%" height="15" fill="rgb(219,150,6)" fg:x="48829" fg:w="41"/><text x="73.8641%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (9 samples, 0.01%)</title><rect x="73.7227%" y="197" width="0.0136%" height="15" fill="rgb(251,46,16)" fg:x="48901" fg:w="9"/><text x="73.9727%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13 samples, 0.02%)</title><rect x="73.7830%" y="181" width="0.0196%" height="15" fill="rgb(220,204,40)" fg:x="48941" fg:w="13"/><text x="74.0330%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (99 samples, 0.15%)</title><rect x="73.6760%" y="213" width="0.1493%" height="15" fill="rgb(211,85,2)" fg:x="48870" fg:w="99"/><text x="73.9260%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (57 samples, 0.09%)</title><rect x="73.7393%" y="197" width="0.0859%" height="15" fill="rgb(229,17,7)" fg:x="48912" fg:w="57"/><text x="73.9893%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.02%)</title><rect x="73.8026%" y="181" width="0.0226%" height="15" fill="rgb(239,72,28)" fg:x="48954" fg:w="15"/><text x="74.0526%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::~WriteBatch (156 samples, 0.24%)</title><rect x="73.5961%" y="229" width="0.2352%" height="15" fill="rgb(230,47,54)" fg:x="48817" fg:w="156"/><text x="73.8461%" y="239.50"></text></g><g><title>libc+ (20 samples, 0.03%)</title><rect x="73.8358%" y="229" width="0.0302%" height="15" fill="rgb(214,50,8)" fg:x="48976" fg:w="20"/><text x="74.0858%" y="239.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::reserve (12 samples, 0.02%)</title><rect x="73.8659%" y="229" width="0.0181%" height="15" fill="rgb(216,198,43)" fg:x="48996" fg:w="12"/><text x="74.1159%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.01%)</title><rect x="73.8946%" y="229" width="0.0136%" height="15" fill="rgb(234,20,35)" fg:x="49015" fg:w="9"/><text x="74.1446%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::DB::Put (14,942 samples, 22.53%)</title><rect x="51.3832%" y="245" width="22.5264%" height="15" fill="rgb(254,45,19)" fg:x="34083" fg:w="14942"/><text x="51.6332%" y="255.50">httpmq-rs`rocksdb::DB::Put</text></g><g><title>httpmq-rs`rocksdb::DBImpl::Write (10 samples, 0.02%)</title><rect x="73.9096%" y="245" width="0.0151%" height="15" fill="rgb(219,14,44)" fg:x="49025" fg:w="10"/><text x="74.1596%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Put (8 samples, 0.01%)</title><rect x="73.9247%" y="245" width="0.0121%" height="15" fill="rgb(217,220,26)" fg:x="49035" fg:w="8"/><text x="74.1747%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::WriteBatch (13 samples, 0.02%)</title><rect x="73.9368%" y="245" width="0.0196%" height="15" fill="rgb(213,158,28)" fg:x="49043" fg:w="13"/><text x="74.1868%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::DB::Put (14,999 samples, 22.61%)</title><rect x="51.3546%" y="277" width="22.6124%" height="15" fill="rgb(252,51,52)" fg:x="34064" fg:w="14999"/><text x="51.6046%" y="287.50">httpmq-rs`rocksdb::DB::Put</text></g><g><title>httpmq-rs`rocksdb::DBImpl::Put (14,984 samples, 22.59%)</title><rect x="51.3772%" y="261" width="22.5897%" height="15" fill="rgb(246,89,16)" fg:x="34079" fg:w="14984"/><text x="51.6272%" y="271.50">httpmq-rs`rocksdb::DBImpl::Put</text></g><g><title>httpmq-rs`rocksdb::WriteBatch::~WriteBatch (7 samples, 0.01%)</title><rect x="73.9564%" y="245" width="0.0106%" height="15" fill="rgb(216,158,49)" fg:x="49056" fg:w="7"/><text x="74.2064%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb_put (15,038 samples, 22.67%)</title><rect x="51.3169%" y="293" width="22.6711%" height="15" fill="rgb(236,107,19)" fg:x="34039" fg:w="15038"/><text x="51.5669%" y="303.50">httpmq-rs`rocksdb_put</text></g><g><title>httpmq-rs`rocksdb::DBImpl::DefaultColumnFamily (14 samples, 0.02%)</title><rect x="73.9669%" y="277" width="0.0211%" height="15" fill="rgb(228,185,30)" fg:x="49063" fg:w="14"/><text x="74.2169%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (27 samples, 0.04%)</title><rect x="73.9956%" y="293" width="0.0407%" height="15" fill="rgb(246,134,8)" fg:x="49082" fg:w="27"/><text x="74.2456%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (50 samples, 0.08%)</title><rect x="74.0363%" y="293" width="0.0754%" height="15" fill="rgb(214,143,50)" fg:x="49109" fg:w="50"/><text x="74.2863%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (47 samples, 0.07%)</title><rect x="74.0408%" y="277" width="0.0709%" height="15" fill="rgb(228,75,8)" fg:x="49112" fg:w="47"/><text x="74.2908%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (47 samples, 0.07%)</title><rect x="74.0408%" y="261" width="0.0709%" height="15" fill="rgb(207,175,4)" fg:x="49112" fg:w="47"/><text x="74.2908%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (19 samples, 0.03%)</title><rect x="74.2202%" y="277" width="0.0286%" height="15" fill="rgb(205,108,24)" fg:x="49231" fg:w="19"/><text x="74.4702%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (31 samples, 0.05%)</title><rect x="74.3408%" y="261" width="0.0467%" height="15" fill="rgb(244,120,49)" fg:x="49311" fg:w="31"/><text x="74.5908%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (116 samples, 0.17%)</title><rect x="74.2504%" y="277" width="0.1749%" height="15" fill="rgb(223,47,38)" fg:x="49251" fg:w="116"/><text x="74.5004%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (25 samples, 0.04%)</title><rect x="74.3875%" y="261" width="0.0377%" height="15" fill="rgb(229,179,11)" fg:x="49342" fg:w="25"/><text x="74.6375%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (212 samples, 0.32%)</title><rect x="74.1117%" y="293" width="0.3196%" height="15" fill="rgb(231,122,1)" fg:x="49159" fg:w="212"/><text x="74.3617%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::put (15,452 samples, 23.30%)</title><rect x="51.1465%" y="309" width="23.2953%" height="15" fill="rgb(245,119,9)" fg:x="33926" fg:w="15452"/><text x="51.3965%" y="319.50">httpmq-rs`rocksdb::db::DBWithThreadMo..</text></g><g><title>httpmq-rs`rocksdb_writeoptions_destroy (7 samples, 0.01%)</title><rect x="74.4433%" y="309" width="0.0106%" height="15" fill="rgb(241,163,25)" fg:x="49379" fg:w="7"/><text x="74.6933%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (24 samples, 0.04%)</title><rect x="74.4644%" y="309" width="0.0362%" height="15" fill="rgb(217,214,3)" fg:x="49393" fg:w="24"/><text x="74.7144%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (17 samples, 0.03%)</title><rect x="74.6559%" y="261" width="0.0256%" height="15" fill="rgb(240,86,28)" fg:x="49520" fg:w="17"/><text x="74.9059%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (21 samples, 0.03%)</title><rect x="74.6845%" y="261" width="0.0317%" height="15" fill="rgb(215,47,9)" fg:x="49539" fg:w="21"/><text x="74.9345%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (121 samples, 0.18%)</title><rect x="74.5413%" y="277" width="0.1824%" height="15" fill="rgb(252,25,45)" fg:x="49444" fg:w="121"/><text x="74.7913%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (131 samples, 0.20%)</title><rect x="74.5308%" y="293" width="0.1975%" height="15" fill="rgb(251,164,9)" fg:x="49437" fg:w="131"/><text x="74.7808%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (154 samples, 0.23%)</title><rect x="74.5006%" y="309" width="0.2322%" height="15" fill="rgb(233,194,0)" fg:x="49417" fg:w="154"/><text x="74.7506%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (72 samples, 0.11%)</title><rect x="74.7418%" y="309" width="0.1085%" height="15" fill="rgb(249,111,24)" fg:x="49577" fg:w="72"/><text x="74.9918%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (37 samples, 0.06%)</title><rect x="74.7946%" y="293" width="0.0558%" height="15" fill="rgb(250,223,3)" fg:x="49612" fg:w="37"/><text x="75.0446%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (34 samples, 0.05%)</title><rect x="74.7991%" y="277" width="0.0513%" height="15" fill="rgb(236,178,37)" fg:x="49615" fg:w="34"/><text x="75.0491%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (23 samples, 0.03%)</title><rect x="74.9604%" y="293" width="0.0347%" height="15" fill="rgb(241,158,50)" fg:x="49722" fg:w="23"/><text x="75.2104%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (26 samples, 0.04%)</title><rect x="75.0840%" y="277" width="0.0392%" height="15" fill="rgb(213,121,41)" fg:x="49804" fg:w="26"/><text x="75.3340%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (113 samples, 0.17%)</title><rect x="74.9951%" y="293" width="0.1704%" height="15" fill="rgb(240,92,3)" fg:x="49745" fg:w="113"/><text x="75.2451%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (28 samples, 0.04%)</title><rect x="75.1232%" y="277" width="0.0422%" height="15" fill="rgb(205,123,3)" fg:x="49830" fg:w="28"/><text x="75.3732%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (216 samples, 0.33%)</title><rect x="74.8504%" y="309" width="0.3256%" height="15" fill="rgb(205,97,47)" fg:x="49649" fg:w="216"/><text x="75.1004%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (7 samples, 0.01%)</title><rect x="75.1655%" y="293" width="0.0106%" height="15" fill="rgb(247,152,14)" fg:x="49858" fg:w="7"/><text x="75.4155%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.01%)</title><rect x="75.1760%" y="309" width="0.0106%" height="15" fill="rgb(248,195,53)" fg:x="49865" fg:w="7"/><text x="75.4260%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.02%)</title><rect x="75.1986%" y="309" width="0.0211%" height="15" fill="rgb(226,201,16)" fg:x="49880" fg:w="14"/><text x="75.4486%" y="319.50"></text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41,802 samples, 63.02%)</title><rect x="12.2115%" y="325" width="63.0203%" height="15" fill="rgb(205,98,0)" fg:x="8100" fg:w="41802"/><text x="12.4615%" y="335.50">httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>httpmq-rs`core::fmt::num::imp::_&lt;impl core::fmt::Display for i32&gt;::fmt (7 samples, 0.01%)</title><rect x="75.2484%" y="325" width="0.0106%" height="15" fill="rgb(214,191,48)" fg:x="49913" fg:w="7"/><text x="75.4984%" y="335.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum_core::extract::RequestParts&lt;hyper::body::body::Body&gt;&gt; (8 samples, 0.01%)</title><rect x="75.2589%" y="325" width="0.0121%" height="15" fill="rgb(237,112,39)" fg:x="49920" fg:w="8"/><text x="75.5089%" y="335.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;axum::extract::query::Query&lt;httpmq_rs::service::KVSet&gt; as axum_core::extract::FromRequest&lt;hyper::body::body::Body&gt;&gt;::from_request::{{closure}}&gt;&gt; (12 samples, 0.02%)</title><rect x="75.2710%" y="325" width="0.0181%" height="15" fill="rgb(247,203,27)" fg:x="49928" fg:w="12"/><text x="75.5210%" y="335.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;httpmq_rs::service::process as axum::handler::Handler&lt;(axum::extract::query::Query&lt;httpmq_rs::service::KVSet&gt;,axum::extract::extension::Extension&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;)&gt;&gt;::call::{{closure}}&gt;&gt; (11 samples, 0.02%)</title><rect x="75.2891%" y="325" width="0.0166%" height="15" fill="rgb(235,124,28)" fg:x="49940" fg:w="11"/><text x="75.5391%" y="335.50"></text></g><g><title>httpmq-rs`core::result::Result::Ok (11 samples, 0.02%)</title><rect x="75.3087%" y="325" width="0.0166%" height="15" fill="rgb(208,207,46)" fg:x="49953" fg:w="11"/><text x="75.5587%" y="335.50"></text></g><g><title>httpmq-rs`httpmq_rs::service::process (11 samples, 0.02%)</title><rect x="75.3253%" y="325" width="0.0166%" height="15" fill="rgb(234,176,4)" fg:x="49964" fg:w="11"/><text x="75.5753%" y="335.50"></text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::put (7 samples, 0.01%)</title><rect x="75.3418%" y="325" width="0.0106%" height="15" fill="rgb(230,133,28)" fg:x="49975" fg:w="7"/><text x="75.5918%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.03%)</title><rect x="75.3660%" y="325" width="0.0332%" height="15" fill="rgb(211,137,40)" fg:x="49991" fg:w="22"/><text x="75.6160%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.01%)</title><rect x="75.4911%" y="293" width="0.0121%" height="15" fill="rgb(254,35,13)" fg:x="50074" fg:w="8"/><text x="75.7411%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (48 samples, 0.07%)</title><rect x="75.4444%" y="309" width="0.0724%" height="15" fill="rgb(225,49,51)" fg:x="50043" fg:w="48"/><text x="75.6944%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (9 samples, 0.01%)</title><rect x="75.5032%" y="293" width="0.0136%" height="15" fill="rgb(251,10,15)" fg:x="50082" fg:w="9"/><text x="75.7532%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (82 samples, 0.12%)</title><rect x="75.3991%" y="325" width="0.1236%" height="15" fill="rgb(228,207,15)" fg:x="50013" fg:w="82"/><text x="75.6491%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (46 samples, 0.07%)</title><rect x="75.5574%" y="325" width="0.0693%" height="15" fill="rgb(241,99,19)" fg:x="50118" fg:w="46"/><text x="75.8074%" y="335.50"></text></g><g><title>httpmq-rs`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (42,156 samples, 63.55%)</title><rect x="12.1165%" y="341" width="63.5540%" height="15" fill="rgb(207,104,49)" fg:x="8037" fg:w="42156"/><text x="12.3665%" y="351.50">httpmq-rs`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (29 samples, 0.04%)</title><rect x="75.6268%" y="325" width="0.0437%" height="15" fill="rgb(234,99,18)" fg:x="50164" fg:w="29"/><text x="75.8768%" y="335.50"></text></g><g><title>httpmq-rs`core::result::Result::Ok (8 samples, 0.01%)</title><rect x="75.6826%" y="341" width="0.0121%" height="15" fill="rgb(213,191,49)" fg:x="50201" fg:w="8"/><text x="75.9326%" y="351.50"></text></g><g><title>httpmq-rs`&lt;axum::handler::future::IntoServiceFuture as core::future::future::Future&gt;::poll (42,208 samples, 63.63%)</title><rect x="12.0683%" y="357" width="63.6324%" height="15" fill="rgb(210,226,19)" fg:x="8005" fg:w="42208"/><text x="12.3183%" y="367.50">httpmq-rs`&lt;axum::handler::future::IntoServiceFuture as core::future::future::Future&gt;::poll</text></g><g><title>httpmq-rs`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (12 samples, 0.02%)</title><rect x="75.7007%" y="357" width="0.0181%" height="15" fill="rgb(229,97,18)" fg:x="50213" fg:w="12"/><text x="75.9507%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (12 samples, 0.02%)</title><rect x="75.7986%" y="293" width="0.0181%" height="15" fill="rgb(211,167,15)" fg:x="50278" fg:w="12"/><text x="76.0486%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (97 samples, 0.15%)</title><rect x="75.7233%" y="341" width="0.1462%" height="15" fill="rgb(210,169,34)" fg:x="50228" fg:w="97"/><text x="75.9733%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (89 samples, 0.13%)</title><rect x="75.7353%" y="325" width="0.1342%" height="15" fill="rgb(241,121,31)" fg:x="50236" fg:w="89"/><text x="75.9853%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (84 samples, 0.13%)</title><rect x="75.7429%" y="309" width="0.1266%" height="15" fill="rgb(232,40,11)" fg:x="50241" fg:w="84"/><text x="75.9929%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (34 samples, 0.05%)</title><rect x="75.8182%" y="293" width="0.0513%" height="15" fill="rgb(205,86,26)" fg:x="50291" fg:w="34"/><text x="76.0682%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.01%)</title><rect x="75.8589%" y="277" width="0.0106%" height="15" fill="rgb(231,126,28)" fg:x="50318" fg:w="7"/><text x="76.1089%" y="287.50"></text></g><g><title>httpmq-rs`&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (112 samples, 0.17%)</title><rect x="75.7187%" y="357" width="0.1689%" height="15" fill="rgb(219,221,18)" fg:x="50225" fg:w="112"/><text x="75.9687%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="75.8740%" y="341" width="0.0136%" height="15" fill="rgb(211,40,0)" fg:x="50328" fg:w="9"/><text x="76.1240%" y="351.50"></text></g><g><title>httpmq-rs`axum::handler::future::IntoServiceFuture::new (11 samples, 0.02%)</title><rect x="75.8936%" y="357" width="0.0166%" height="15" fill="rgb(239,85,43)" fg:x="50341" fg:w="11"/><text x="76.1436%" y="367.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::handler::future::IntoServiceFuture&gt; (13 samples, 0.02%)</title><rect x="75.9147%" y="357" width="0.0196%" height="15" fill="rgb(231,55,21)" fg:x="50355" fg:w="13"/><text x="76.1647%" y="367.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone::BoxCloneService&lt;http::request::Request&lt;hyper::body::body::Body&gt;,http::response::Response&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;,core::convert::Infallible&gt;,http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt; (22 samples, 0.03%)</title><rect x="75.9343%" y="357" width="0.0332%" height="15" fill="rgb(225,184,43)" fg:x="50368" fg:w="22"/><text x="76.1843%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (7 samples, 0.01%)</title><rect x="75.9675%" y="357" width="0.0106%" height="15" fill="rgb(251,158,41)" fg:x="50390" fg:w="7"/><text x="76.2175%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.01%)</title><rect x="75.9826%" y="357" width="0.0136%" height="15" fill="rgb(234,159,37)" fg:x="50400" fg:w="9"/><text x="76.2326%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.02%)</title><rect x="76.0670%" y="325" width="0.0181%" height="15" fill="rgb(216,204,22)" fg:x="50456" fg:w="12"/><text x="76.3170%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (39 samples, 0.06%)</title><rect x="76.0308%" y="341" width="0.0588%" height="15" fill="rgb(214,17,3)" fg:x="50432" fg:w="39"/><text x="76.2808%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (64 samples, 0.10%)</title><rect x="75.9961%" y="357" width="0.0965%" height="15" fill="rgb(212,111,17)" fg:x="50409" fg:w="64"/><text x="76.2461%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.01%)</title><rect x="76.0926%" y="357" width="0.0106%" height="15" fill="rgb(221,157,24)" fg:x="50473" fg:w="7"/><text x="76.3426%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="76.1032%" y="357" width="0.0136%" height="15" fill="rgb(252,16,13)" fg:x="50480" fg:w="9"/><text x="76.3532%" y="367.50"></text></g><g><title>httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (42,526 samples, 64.11%)</title><rect x="12.0065%" y="373" width="64.1118%" height="15" fill="rgb(221,62,2)" fg:x="7964" fg:w="42526"/><text x="12.2565%" y="383.50">httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll</text></g><g><title>httpmq-rs`&lt;tower::timeout::future::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (42,571 samples, 64.18%)</title><rect x="11.9477%" y="389" width="64.1796%" height="15" fill="rgb(247,87,22)" fg:x="7925" fg:w="42571"/><text x="12.1977%" y="399.50">httpmq-rs`&lt;tower::timeout::future::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>httpmq-rs`&lt;tokio::sync::semaphore::OwnedSemaphorePermit as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="76.1906%" y="373" width="0.0332%" height="15" fill="rgb(215,73,9)" fg:x="50538" fg:w="22"/><text x="76.4406%" y="383.50"></text></g><g><title>httpmq-rs`&lt;tokio::time::driver::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (34 samples, 0.05%)</title><rect x="76.2238%" y="373" width="0.0513%" height="15" fill="rgb(207,175,33)" fg:x="50560" fg:w="34"/><text x="76.4738%" y="383.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;&gt; (18 samples, 0.03%)</title><rect x="76.2766%" y="373" width="0.0271%" height="15" fill="rgb(243,129,54)" fg:x="50595" fg:w="18"/><text x="76.5266%" y="383.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;,http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt; (125 samples, 0.19%)</title><rect x="76.1409%" y="389" width="0.1884%" height="15" fill="rgb(227,119,45)" fg:x="50505" fg:w="125"/><text x="76.3909%" y="399.50"></text></g><g><title>httpmq-rs`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (16 samples, 0.02%)</title><rect x="76.3052%" y="373" width="0.0241%" height="15" fill="rgb(205,109,36)" fg:x="50614" fg:w="16"/><text x="76.5552%" y="383.50"></text></g><g><title>httpmq-rs`tokio::time::driver::sleep::sleep (8 samples, 0.01%)</title><rect x="76.3414%" y="389" width="0.0121%" height="15" fill="rgb(205,6,39)" fg:x="50638" fg:w="8"/><text x="76.5914%" y="399.50"></text></g><g><title>httpmq-rs`tokio_util::sync::poll_semaphore::PollSemaphore::poll_acquire (37 samples, 0.06%)</title><rect x="76.3534%" y="389" width="0.0558%" height="15" fill="rgb(221,32,16)" fg:x="50646" fg:w="37"/><text x="76.6034%" y="399.50"></text></g><g><title>httpmq-rs`tokio::sync::semaphore::Semaphore::try_acquire_owned (27 samples, 0.04%)</title><rect x="76.3685%" y="373" width="0.0407%" height="15" fill="rgb(228,144,50)" fg:x="50656" fg:w="27"/><text x="76.6185%" y="383.50"></text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (43,185 samples, 65.11%)</title><rect x="11.3853%" y="405" width="65.1053%" height="15" fill="rgb(229,201,53)" fg:x="7552" fg:w="43185"/><text x="11.6353%" y="415.50">httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (54 samples, 0.08%)</title><rect x="76.4092%" y="389" width="0.0814%" height="15" fill="rgb(249,153,27)" fg:x="50683" fg:w="54"/><text x="76.6592%" y="399.50"></text></g><g><title>httpmq-rs`&lt;tower::timeout::Timeout&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (9 samples, 0.01%)</title><rect x="76.4906%" y="405" width="0.0136%" height="15" fill="rgb(227,106,25)" fg:x="50737" fg:w="9"/><text x="76.7406%" y="415.50"></text></g><g><title>httpmq-rs`&lt;tower::timeout::future::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="76.5042%" y="405" width="0.0166%" height="15" fill="rgb(230,65,29)" fg:x="50746" fg:w="11"/><text x="76.7542%" y="415.50"></text></g><g><title>httpmq-rs`&lt;axum::error_handling::future::HandleErrorFuture as core::future::future::Future&gt;::poll (43,251 samples, 65.20%)</title><rect x="11.3582%" y="421" width="65.2048%" height="15" fill="rgb(221,57,46)" fg:x="7534" fg:w="43251"/><text x="11.6082%" y="431.50">httpmq-rs`&lt;axum::error_handling::future::HandleErrorFuture as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.03%)</title><rect x="76.5344%" y="405" width="0.0286%" height="15" fill="rgb(229,161,17)" fg:x="50766" fg:w="19"/><text x="76.7844%" y="415.50"></text></g><g><title>httpmq-rs`&lt;tower_http::map_response_body::ResponseFuture&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (43,285 samples, 65.26%)</title><rect x="11.3326%" y="437" width="65.2561%" height="15" fill="rgb(222,213,11)" fg:x="7517" fg:w="43285"/><text x="11.5826%" y="447.50">httpmq-rs`&lt;tower_http::map_response_body::ResponseFuture&lt;Fut,F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.03%)</title><rect x="76.5630%" y="421" width="0.0256%" height="15" fill="rgb(235,35,13)" fg:x="50785" fg:w="17"/><text x="76.8130%" y="431.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::error_handling::HandleError&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;,httpmq_rs::service::handle_error,()&gt;&gt; (18 samples, 0.03%)</title><rect x="76.6308%" y="421" width="0.0271%" height="15" fill="rgb(233,158,34)" fg:x="50830" fg:w="18"/><text x="76.8808%" y="431.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;axum::error_handling::HandleError&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;,httpmq_rs::service::handle_error,()&gt; as tower_service::Service&lt;http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt;::call::{{closure}}&gt;&gt; (33 samples, 0.05%)</title><rect x="76.6580%" y="421" width="0.0498%" height="15" fill="rgb(215,151,48)" fg:x="50848" fg:w="33"/><text x="76.9080%" y="431.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower_http::map_response_body::ResponseFuture&lt;tower_http::map_response_body::ResponseFuture&lt;axum::error_handling::future::HandleErrorFuture,axum_core::body::boxed&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;&gt;,axum_core::body::boxed&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;&gt;&gt; (13 samples, 0.02%)</title><rect x="76.7077%" y="421" width="0.0196%" height="15" fill="rgb(229,84,14)" fg:x="50881" fg:w="13"/><text x="76.9577%" y="431.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;axum::error_handling::HandleError&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;,httpmq_rs::service::handle_error,()&gt; as tower_service::Service&lt;http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt;::call::{{closure}}&gt;&gt; (8 samples, 0.01%)</title><rect x="76.7153%" y="405" width="0.0121%" height="15" fill="rgb(229,68,14)" fg:x="50886" fg:w="8"/><text x="76.9653%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_size (24 samples, 0.04%)</title><rect x="76.7454%" y="405" width="0.0362%" height="15" fill="rgb(243,106,26)" fg:x="50906" fg:w="24"/><text x="76.9954%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (51 samples, 0.08%)</title><rect x="76.7303%" y="421" width="0.0769%" height="15" fill="rgb(206,45,38)" fg:x="50896" fg:w="51"/><text x="76.9803%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (17 samples, 0.03%)</title><rect x="76.7816%" y="405" width="0.0256%" height="15" fill="rgb(226,6,15)" fg:x="50930" fg:w="17"/><text x="77.0316%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.02%)</title><rect x="76.7831%" y="389" width="0.0241%" height="15" fill="rgb(232,22,54)" fg:x="50931" fg:w="16"/><text x="77.0331%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (15 samples, 0.02%)</title><rect x="76.8464%" y="405" width="0.0226%" height="15" fill="rgb(229,222,32)" fg:x="50973" fg:w="15"/><text x="77.0964%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_small (52 samples, 0.08%)</title><rect x="76.8072%" y="421" width="0.0784%" height="15" fill="rgb(228,62,29)" fg:x="50947" fg:w="52"/><text x="77.0572%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (9 samples, 0.01%)</title><rect x="76.8721%" y="405" width="0.0136%" height="15" fill="rgb(251,103,34)" fg:x="50990" fg:w="9"/><text x="77.1221%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (21 samples, 0.03%)</title><rect x="76.8856%" y="421" width="0.0317%" height="15" fill="rgb(233,12,30)" fg:x="50999" fg:w="21"/><text x="77.1356%" y="431.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone::BoxCloneService&lt;http::request::Request&lt;hyper::body::body::Body&gt;,http::response::Response&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;,core::convert::Infallible&gt;,http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt; (212 samples, 0.32%)</title><rect x="76.6052%" y="437" width="0.3196%" height="15" fill="rgb(238,52,0)" fg:x="50813" fg:w="212"/><text x="76.8552%" y="447.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower_http::map_response_body::ResponseFuture&lt;tower_http::map_response_body::ResponseFuture&lt;axum::error_handling::future::HandleErrorFuture,axum_core::body::boxed&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;&gt;,axum_core::body::boxed&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="76.9248%" y="437" width="0.0241%" height="15" fill="rgb(223,98,5)" fg:x="51025" fg:w="16"/><text x="77.1748%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="76.9640%" y="421" width="0.0121%" height="15" fill="rgb(228,75,37)" fg:x="51051" fg:w="8"/><text x="77.2140%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.01%)</title><rect x="76.9640%" y="405" width="0.0121%" height="15" fill="rgb(205,115,49)" fg:x="51051" fg:w="8"/><text x="77.2140%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.02%)</title><rect x="76.9595%" y="437" width="0.0181%" height="15" fill="rgb(250,154,43)" fg:x="51048" fg:w="12"/><text x="77.2095%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (9 samples, 0.01%)</title><rect x="77.0138%" y="421" width="0.0136%" height="15" fill="rgb(226,43,29)" fg:x="51084" fg:w="9"/><text x="77.2638%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.03%)</title><rect x="77.0530%" y="405" width="0.0256%" height="15" fill="rgb(249,228,39)" fg:x="51110" fg:w="17"/><text x="77.3030%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (81 samples, 0.12%)</title><rect x="76.9776%" y="437" width="0.1221%" height="15" fill="rgb(216,79,43)" fg:x="51060" fg:w="81"/><text x="77.2276%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (48 samples, 0.07%)</title><rect x="77.0273%" y="421" width="0.0724%" height="15" fill="rgb(228,95,12)" fg:x="51093" fg:w="48"/><text x="77.2773%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (14 samples, 0.02%)</title><rect x="77.0786%" y="405" width="0.0211%" height="15" fill="rgb(249,221,15)" fg:x="51127" fg:w="14"/><text x="77.3286%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (7 samples, 0.01%)</title><rect x="77.0997%" y="437" width="0.0106%" height="15" fill="rgb(233,34,13)" fg:x="51141" fg:w="7"/><text x="77.3497%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (24 samples, 0.04%)</title><rect x="77.1178%" y="437" width="0.0362%" height="15" fill="rgb(214,103,39)" fg:x="51153" fg:w="24"/><text x="77.3678%" y="447.50"></text></g><g><title>httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (44,022 samples, 66.37%)</title><rect x="10.7898%" y="453" width="66.3672%" height="15" fill="rgb(251,126,39)" fg:x="7157" fg:w="44022"/><text x="11.0398%" y="463.50">httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll</text></g><g><title>httpmq-rs`&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (44,094 samples, 66.48%)</title><rect x="10.7205%" y="469" width="66.4757%" height="15" fill="rgb(214,216,36)" fg:x="7111" fg:w="44094"/><text x="10.9705%" y="479.50">httpmq-rs`&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="77.1796%" y="453" width="0.0166%" height="15" fill="rgb(220,221,8)" fg:x="51194" fg:w="11"/><text x="77.4296%" y="463.50"></text></g><g><title>httpmq-rs`&lt;T as tower::util::boxed_clone::CloneService&lt;R&gt;&gt;::clone_box (30 samples, 0.05%)</title><rect x="77.4585%" y="437" width="0.0452%" height="15" fill="rgb(240,216,3)" fg:x="51379" fg:w="30"/><text x="77.7085%" y="447.50"></text></g><g><title>httpmq-rs`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 0.03%)</title><rect x="77.5037%" y="437" width="0.0271%" height="15" fill="rgb(232,218,17)" fg:x="51409" fg:w="18"/><text x="77.7537%" y="447.50"></text></g><g><title>httpmq-rs`&lt;tokio_util::sync::poll_semaphore::PollSemaphore as core::clone::Clone&gt;::clone (15 samples, 0.02%)</title><rect x="77.6379%" y="405" width="0.0226%" height="15" fill="rgb(229,163,45)" fg:x="51498" fg:w="15"/><text x="77.8879%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (69 samples, 0.10%)</title><rect x="77.6741%" y="373" width="0.1040%" height="15" fill="rgb(231,110,42)" fg:x="51522" fg:w="69"/><text x="77.9241%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (32 samples, 0.05%)</title><rect x="77.7299%" y="357" width="0.0482%" height="15" fill="rgb(208,170,48)" fg:x="51559" fg:w="32"/><text x="77.9799%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.02%)</title><rect x="77.7555%" y="341" width="0.0226%" height="15" fill="rgb(239,116,25)" fg:x="51576" fg:w="15"/><text x="78.0055%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (79 samples, 0.12%)</title><rect x="77.6605%" y="405" width="0.1191%" height="15" fill="rgb(219,200,50)" fg:x="51513" fg:w="79"/><text x="77.9105%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (75 samples, 0.11%)</title><rect x="77.6666%" y="389" width="0.1131%" height="15" fill="rgb(245,200,0)" fg:x="51517" fg:w="75"/><text x="77.9166%" y="399.50"></text></g><g><title>httpmq-rs`&lt;T as tower::util::boxed_clone::CloneService&lt;R&gt;&gt;::clone_box (151 samples, 0.23%)</title><rect x="77.5580%" y="421" width="0.2276%" height="15" fill="rgb(245,119,33)" fg:x="51445" fg:w="151"/><text x="77.8080%" y="431.50"></text></g><g><title>httpmq-rs`&lt;axum::routing::method_routing::MethodRouter&lt;B,E&gt; as core::clone::Clone&gt;::clone (172 samples, 0.26%)</title><rect x="77.5309%" y="437" width="0.2593%" height="15" fill="rgb(231,125,12)" fg:x="51427" fg:w="172"/><text x="77.7809%" y="447.50"></text></g><g><title>httpmq-rs`&lt;tokio_util::sync::poll_semaphore::PollSemaphore as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="77.8324%" y="405" width="0.0106%" height="15" fill="rgb(216,96,41)" fg:x="51627" fg:w="7"/><text x="78.0824%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.01%)</title><rect x="77.8776%" y="357" width="0.0136%" height="15" fill="rgb(248,43,45)" fg:x="51657" fg:w="9"/><text x="78.1276%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (33 samples, 0.05%)</title><rect x="77.8429%" y="405" width="0.0498%" height="15" fill="rgb(217,222,7)" fg:x="51634" fg:w="33"/><text x="78.0929%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (30 samples, 0.05%)</title><rect x="77.8475%" y="389" width="0.0452%" height="15" fill="rgb(233,28,6)" fg:x="51637" fg:w="30"/><text x="78.0975%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.04%)</title><rect x="77.8490%" y="373" width="0.0437%" height="15" fill="rgb(231,218,15)" fg:x="51638" fg:w="29"/><text x="78.0990%" y="383.50"></text></g><g><title>httpmq-rs`&lt;T as tower::util::boxed_clone::CloneService&lt;R&gt;&gt;::clone_box (52 samples, 0.08%)</title><rect x="77.8173%" y="421" width="0.0784%" height="15" fill="rgb(226,171,48)" fg:x="51617" fg:w="52"/><text x="78.0673%" y="431.50"></text></g><g><title>httpmq-rs`&lt;axum::routing::method_routing::MethodRouter&lt;B,E&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (74 samples, 0.11%)</title><rect x="77.7902%" y="437" width="0.1116%" height="15" fill="rgb(235,201,9)" fg:x="51599" fg:w="74"/><text x="78.0402%" y="447.50"></text></g><g><title>httpmq-rs`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="77.9063%" y="437" width="0.0106%" height="15" fill="rgb(217,80,15)" fg:x="51676" fg:w="7"/><text x="78.1563%" y="447.50"></text></g><g><title>httpmq-rs`alloc::vec::source_iter_marker::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (7 samples, 0.01%)</title><rect x="77.9274%" y="437" width="0.0106%" height="15" fill="rgb(219,152,8)" fg:x="51690" fg:w="7"/><text x="78.1774%" y="447.50"></text></g><g><title>httpmq-rs`matchit::params::Params::new (15 samples, 0.02%)</title><rect x="77.9409%" y="421" width="0.0226%" height="15" fill="rgb(243,107,38)" fg:x="51699" fg:w="15"/><text x="78.1909%" y="431.50"></text></g><g><title>httpmq-rs`matchit::tree::Node&lt;T&gt;::at (51 samples, 0.08%)</title><rect x="77.9635%" y="421" width="0.0769%" height="15" fill="rgb(231,17,5)" fg:x="51714" fg:w="51"/><text x="78.2135%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (19 samples, 0.03%)</title><rect x="78.0118%" y="405" width="0.0286%" height="15" fill="rgb(209,25,54)" fg:x="51746" fg:w="19"/><text x="78.2618%" y="415.50"></text></g><g><title>httpmq-rs`axum::routing::Node::at (72 samples, 0.11%)</title><rect x="77.9379%" y="437" width="0.1085%" height="15" fill="rgb(219,0,2)" fg:x="51697" fg:w="72"/><text x="78.1879%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.02%)</title><rect x="78.1203%" y="357" width="0.0196%" height="15" fill="rgb(246,9,5)" fg:x="51818" fg:w="13"/><text x="78.3703%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (53 samples, 0.08%)</title><rect x="78.0615%" y="405" width="0.0799%" height="15" fill="rgb(226,159,4)" fg:x="51779" fg:w="53"/><text x="78.3115%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (47 samples, 0.07%)</title><rect x="78.0706%" y="389" width="0.0709%" height="15" fill="rgb(219,175,34)" fg:x="51785" fg:w="47"/><text x="78.3206%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (46 samples, 0.07%)</title><rect x="78.0721%" y="373" width="0.0693%" height="15" fill="rgb(236,10,46)" fg:x="51786" fg:w="46"/><text x="78.3221%" y="383.50"></text></g><g><title>httpmq-rs`bytes::bytes::shallow_clone_vec (59 samples, 0.09%)</title><rect x="78.0570%" y="421" width="0.0889%" height="15" fill="rgb(240,211,16)" fg:x="51776" fg:w="59"/><text x="78.3070%" y="431.50"></text></g><g><title>httpmq-rs`bytes::bytes::promotable_even_clone (71 samples, 0.11%)</title><rect x="78.0465%" y="437" width="0.1070%" height="15" fill="rgb(205,3,43)" fg:x="51769" fg:w="71"/><text x="78.2965%" y="447.50"></text></g><g><title>httpmq-rs`bytes::bytes::shallow_clone_vec (12 samples, 0.02%)</title><rect x="78.1535%" y="437" width="0.0181%" height="15" fill="rgb(245,7,22)" fg:x="51840" fg:w="12"/><text x="78.4035%" y="447.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.02%)</title><rect x="78.1912%" y="421" width="0.0166%" height="15" fill="rgb(239,132,32)" fg:x="51865" fg:w="11"/><text x="78.4412%" y="431.50"></text></g><g><title>httpmq-rs`core::iter::adapters::process_results (54 samples, 0.08%)</title><rect x="78.1716%" y="437" width="0.0814%" height="15" fill="rgb(228,202,34)" fg:x="51852" fg:w="54"/><text x="78.4216%" y="447.50"></text></g><g><title>httpmq-rs`alloc::vec::source_iter_marker::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (30 samples, 0.05%)</title><rect x="78.2078%" y="421" width="0.0452%" height="15" fill="rgb(254,200,22)" fg:x="51876" fg:w="30"/><text x="78.4578%" y="431.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (17 samples, 0.03%)</title><rect x="78.2274%" y="405" width="0.0256%" height="15" fill="rgb(219,10,39)" fg:x="51889" fg:w="17"/><text x="78.4774%" y="415.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place$LT$tower..util..map_future..MapFuture$LT$tower_http..map_response_body..MapResponseBody$LT$tower_http..map_response_body..MapResponseBody$LT$axum..error_handling..HandleError$LT$tower..load_shed..LoadShed$LT$tower..limit..concurrency..service..ConcurrencyLimit$LT$tower..timeout..Timeout$LT$tower_http..add_extension..AddExtension$LT$axum..routing..route..Route$C$alloc..sync..Arc$LT$std..sync..rwlock..RwLock$LT$httpmq_rs..service..State$GT$$GT$$GT$$GT$$GT$$GT$$C$httpmq_rs..service..handle_error$C$$LP$$RP$$GT$$C$axum_core..body..boxed$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_core..error..Error$GT$$GT$$GT$$C$axum_core..body..boxed$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_core..error..Error$GT$$GT$$GT$$C$tower..util..boxed_clone..BoxCloneService$LT$http..request..Request$LT$hyper..body..body..Body$GT$$C$http..response..Response$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_cor� (19 samples, 0.03%)</title><rect x="78.2530%" y="437" width="0.0286%" height="15" fill="rgb(226,210,39)" fg:x="51906" fg:w="19"/><text x="78.5030%" y="447.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;&amp;core::option::Option&lt;core::ptr::non_null::NonNull&lt;tokio::runtime::task::core::Header&gt;&gt;&gt; (10 samples, 0.02%)</title><rect x="78.2967%" y="421" width="0.0151%" height="15" fill="rgb(208,219,16)" fg:x="51935" fg:w="10"/><text x="78.5467%" y="431.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::error_handling::HandleError&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;,httpmq_rs::service::handle_error,()&gt;&gt; (15 samples, 0.02%)</title><rect x="78.3118%" y="421" width="0.0226%" height="15" fill="rgb(216,158,51)" fg:x="51945" fg:w="15"/><text x="78.5618%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.02%)</title><rect x="78.3374%" y="421" width="0.0181%" height="15" fill="rgb(233,14,44)" fg:x="51962" fg:w="12"/><text x="78.5874%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="78.3435%" y="405" width="0.0121%" height="15" fill="rgb(237,97,39)" fg:x="51966" fg:w="8"/><text x="78.5935%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.01%)</title><rect x="78.3435%" y="389" width="0.0121%" height="15" fill="rgb(218,198,43)" fg:x="51966" fg:w="8"/><text x="78.5935%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.01%)</title><rect x="78.4023%" y="389" width="0.0106%" height="15" fill="rgb(231,104,20)" fg:x="52005" fg:w="7"/><text x="78.6523%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (27 samples, 0.04%)</title><rect x="78.3751%" y="405" width="0.0407%" height="15" fill="rgb(254,36,13)" fg:x="51987" fg:w="27"/><text x="78.6251%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (41 samples, 0.06%)</title><rect x="78.3555%" y="421" width="0.0618%" height="15" fill="rgb(248,14,50)" fg:x="51974" fg:w="41"/><text x="78.6055%" y="431.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::routing::method_routing::MethodRouter&gt; (96 samples, 0.14%)</title><rect x="78.2847%" y="437" width="0.1447%" height="15" fill="rgb(217,107,29)" fg:x="51927" fg:w="96"/><text x="78.5347%" y="447.50"></text></g><g><title>httpmq-rs`hashbrown::map::make_hash (27 samples, 0.04%)</title><rect x="78.4294%" y="437" width="0.0407%" height="15" fill="rgb(251,169,33)" fg:x="52023" fg:w="27"/><text x="78.6794%" y="447.50"></text></g><g><title>httpmq-rs`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.01%)</title><rect x="78.4565%" y="421" width="0.0136%" height="15" fill="rgb(217,108,32)" fg:x="52041" fg:w="9"/><text x="78.7065%" y="431.50"></text></g><g><title>httpmq-rs`hashbrown::raw::sse2::Group::static_empty (10 samples, 0.02%)</title><rect x="78.4731%" y="437" width="0.0151%" height="15" fill="rgb(219,66,42)" fg:x="52052" fg:w="10"/><text x="78.7231%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (27 samples, 0.04%)</title><rect x="78.7204%" y="341" width="0.0407%" height="15" fill="rgb(206,180,7)" fg:x="52216" fg:w="27"/><text x="78.9704%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (83 samples, 0.13%)</title><rect x="78.6374%" y="389" width="0.1251%" height="15" fill="rgb(208,226,31)" fg:x="52161" fg:w="83"/><text x="78.8874%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (81 samples, 0.12%)</title><rect x="78.6405%" y="373" width="0.1221%" height="15" fill="rgb(218,26,49)" fg:x="52163" fg:w="81"/><text x="78.8905%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (78 samples, 0.12%)</title><rect x="78.6450%" y="357" width="0.1176%" height="15" fill="rgb(233,197,48)" fg:x="52166" fg:w="78"/><text x="78.8950%" y="367.50"></text></g><g><title>httpmq-rs`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (143 samples, 0.22%)</title><rect x="78.5741%" y="405" width="0.2156%" height="15" fill="rgb(252,181,51)" fg:x="52119" fg:w="143"/><text x="78.8241%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (15 samples, 0.02%)</title><rect x="78.7671%" y="389" width="0.0226%" height="15" fill="rgb(253,90,19)" fg:x="52247" fg:w="15"/><text x="79.0171%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (17 samples, 0.03%)</title><rect x="78.8199%" y="389" width="0.0256%" height="15" fill="rgb(215,171,30)" fg:x="52282" fg:w="17"/><text x="79.0699%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.02%)</title><rect x="78.8214%" y="373" width="0.0241%" height="15" fill="rgb(214,222,9)" fg:x="52283" fg:w="16"/><text x="79.0714%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (36 samples, 0.05%)</title><rect x="78.7957%" y="405" width="0.0543%" height="15" fill="rgb(223,3,22)" fg:x="52266" fg:w="36"/><text x="79.0457%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.03%)</title><rect x="78.8500%" y="405" width="0.0302%" height="15" fill="rgb(225,196,46)" fg:x="52302" fg:w="20"/><text x="79.1000%" y="415.50"></text></g><g><title>httpmq-rs`hashbrown::raw::RawTable&lt;T,A&gt;::insert (241 samples, 0.36%)</title><rect x="78.5379%" y="421" width="0.3633%" height="15" fill="rgb(209,110,37)" fg:x="52095" fg:w="241"/><text x="78.7879%" y="431.50"></text></g><g><title>httpmq-rs`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.01%)</title><rect x="78.9013%" y="421" width="0.0136%" height="15" fill="rgb(249,89,12)" fg:x="52336" fg:w="9"/><text x="79.1513%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (7 samples, 0.01%)</title><rect x="79.1108%" y="373" width="0.0106%" height="15" fill="rgb(226,27,33)" fg:x="52475" fg:w="7"/><text x="79.3608%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (182 samples, 0.27%)</title><rect x="78.9586%" y="389" width="0.2744%" height="15" fill="rgb(213,82,22)" fg:x="52374" fg:w="182"/><text x="79.2086%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (67 samples, 0.10%)</title><rect x="79.1319%" y="373" width="0.1010%" height="15" fill="rgb(248,140,0)" fg:x="52489" fg:w="67"/><text x="79.3819%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.03%)</title><rect x="79.1998%" y="357" width="0.0332%" height="15" fill="rgb(228,106,3)" fg:x="52534" fg:w="22"/><text x="79.4498%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (194 samples, 0.29%)</title><rect x="78.9450%" y="405" width="0.2925%" height="15" fill="rgb(209,23,37)" fg:x="52365" fg:w="194"/><text x="79.1950%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (216 samples, 0.33%)</title><rect x="78.9148%" y="421" width="0.3256%" height="15" fill="rgb(241,93,50)" fg:x="52345" fg:w="216"/><text x="79.1648%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.01%)</title><rect x="79.2450%" y="421" width="0.0121%" height="15" fill="rgb(253,46,43)" fg:x="52564" fg:w="8"/><text x="79.4950%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.01%)</title><rect x="79.2571%" y="421" width="0.0106%" height="15" fill="rgb(226,206,43)" fg:x="52572" fg:w="7"/><text x="79.5071%" y="431.50"></text></g><g><title>httpmq-rs`http::extensions::Extensions::insert (520 samples, 0.78%)</title><rect x="78.4882%" y="437" width="0.7839%" height="15" fill="rgb(217,54,7)" fg:x="52062" fg:w="520"/><text x="78.7382%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (30 samples, 0.05%)</title><rect x="79.2887%" y="437" width="0.0452%" height="15" fill="rgb(223,5,52)" fg:x="52593" fg:w="30"/><text x="79.5387%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.04%)</title><rect x="79.2963%" y="421" width="0.0377%" height="15" fill="rgb(206,52,46)" fg:x="52598" fg:w="25"/><text x="79.5463%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (22 samples, 0.03%)</title><rect x="79.3008%" y="405" width="0.0332%" height="15" fill="rgb(253,136,11)" fg:x="52601" fg:w="22"/><text x="79.5508%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.01%)</title><rect x="79.3551%" y="421" width="0.0136%" height="15" fill="rgb(208,106,33)" fg:x="52637" fg:w="9"/><text x="79.6051%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.01%)</title><rect x="79.3566%" y="405" width="0.0121%" height="15" fill="rgb(206,54,4)" fg:x="52638" fg:w="8"/><text x="79.6066%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.03%)</title><rect x="79.3370%" y="437" width="0.0332%" height="15" fill="rgb(213,3,15)" fg:x="52625" fg:w="22"/><text x="79.5870%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.02%)</title><rect x="79.4666%" y="405" width="0.0211%" height="15" fill="rgb(252,211,39)" fg:x="52711" fg:w="14"/><text x="79.7166%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (58 samples, 0.09%)</title><rect x="79.4154%" y="421" width="0.0874%" height="15" fill="rgb(223,6,36)" fg:x="52677" fg:w="58"/><text x="79.6654%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (10 samples, 0.02%)</title><rect x="79.4877%" y="405" width="0.0151%" height="15" fill="rgb(252,169,45)" fg:x="52725" fg:w="10"/><text x="79.7377%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (89 samples, 0.13%)</title><rect x="79.3701%" y="437" width="0.1342%" height="15" fill="rgb(212,48,26)" fg:x="52647" fg:w="89"/><text x="79.6201%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc (15 samples, 0.02%)</title><rect x="79.5043%" y="437" width="0.0226%" height="15" fill="rgb(251,102,48)" fg:x="52736" fg:w="15"/><text x="79.7543%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (47 samples, 0.07%)</title><rect x="79.5329%" y="437" width="0.0709%" height="15" fill="rgb(243,208,16)" fg:x="52755" fg:w="47"/><text x="79.7829%" y="447.50"></text></g><g><title>httpmq-rs`&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (1,553 samples, 2.34%)</title><rect x="77.2640%" y="453" width="2.3413%" height="15" fill="rgb(219,96,24)" fg:x="51250" fg:w="1553"/><text x="77.5140%" y="463.50">h..</text></g><g><title>httpmq-rs`&lt;axum::routing::method_routing::MethodRouter&lt;B,E&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (13 samples, 0.02%)</title><rect x="79.6053%" y="453" width="0.0196%" height="15" fill="rgb(219,33,29)" fg:x="52803" fg:w="13"/><text x="79.8553%" y="463.50"></text></g><g><title>httpmq-rs`axum::routing::Node::at (16 samples, 0.02%)</title><rect x="79.6400%" y="453" width="0.0241%" height="15" fill="rgb(223,176,5)" fg:x="52826" fg:w="16"/><text x="79.8900%" y="463.50"></text></g><g><title>httpmq-rs`bytes::bytes::static_clone (11 samples, 0.02%)</title><rect x="79.6732%" y="453" width="0.0166%" height="15" fill="rgb(228,140,14)" fg:x="52848" fg:w="11"/><text x="79.9232%" y="463.50"></text></g><g><title>httpmq-rs`core::iter::adapters::process_results (11 samples, 0.02%)</title><rect x="79.6973%" y="453" width="0.0166%" height="15" fill="rgb(217,179,31)" fg:x="52864" fg:w="11"/><text x="79.9473%" y="463.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::routing::method_routing::MethodRouter&gt; (10 samples, 0.02%)</title><rect x="79.7139%" y="453" width="0.0151%" height="15" fill="rgb(230,9,30)" fg:x="52875" fg:w="10"/><text x="79.9639%" y="463.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::option::Option&lt;axum::routing::future::RouterFuture&lt;hyper::body::body::Body&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="79.7289%" y="453" width="0.0181%" height="15" fill="rgb(230,136,20)" fg:x="52885" fg:w="12"/><text x="79.9789%" y="463.50"></text></g><g><title>httpmq-rs`hashbrown::map::make_hash (16 samples, 0.02%)</title><rect x="79.7591%" y="453" width="0.0241%" height="15" fill="rgb(215,210,22)" fg:x="52905" fg:w="16"/><text x="80.0091%" y="463.50"></text></g><g><title>httpmq-rs`http::extensions::Extensions::insert (10 samples, 0.02%)</title><rect x="79.7832%" y="453" width="0.0151%" height="15" fill="rgb(218,43,5)" fg:x="52921" fg:w="10"/><text x="80.0332%" y="463.50"></text></g><g><title>httpmq-rs`http::request::Parts::new (14 samples, 0.02%)</title><rect x="79.7983%" y="453" width="0.0211%" height="15" fill="rgb(216,11,5)" fg:x="52931" fg:w="14"/><text x="80.0483%" y="463.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (1,780 samples, 2.68%)</title><rect x="77.2128%" y="469" width="2.6835%" height="15" fill="rgb(209,82,29)" fg:x="51216" fg:w="1780"/><text x="77.4628%" y="479.50">ht..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (38 samples, 0.06%)</title><rect x="79.8390%" y="453" width="0.0573%" height="15" fill="rgb(244,115,12)" fg:x="52958" fg:w="38"/><text x="80.0890%" y="463.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (20 samples, 0.03%)</title><rect x="79.8963%" y="469" width="0.0302%" height="15" fill="rgb(222,82,18)" fg:x="52996" fg:w="20"/><text x="80.1463%" y="479.50"></text></g><g><title>httpmq-rs`&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (14 samples, 0.02%)</title><rect x="79.9294%" y="453" width="0.0211%" height="15" fill="rgb(249,227,8)" fg:x="53018" fg:w="14"/><text x="80.1794%" y="463.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__commpage_gettimeofday (14 samples, 0.02%)</title><rect x="79.9717%" y="421" width="0.0211%" height="15" fill="rgb(253,141,45)" fg:x="53046" fg:w="14"/><text x="80.2217%" y="431.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (16 samples, 0.02%)</title><rect x="79.9928%" y="421" width="0.0241%" height="15" fill="rgb(234,184,4)" fg:x="53060" fg:w="16"/><text x="80.2428%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (14 samples, 0.02%)</title><rect x="79.9958%" y="405" width="0.0211%" height="15" fill="rgb(218,194,23)" fg:x="53062" fg:w="14"/><text x="80.2458%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (7 samples, 0.01%)</title><rect x="80.0063%" y="389" width="0.0106%" height="15" fill="rgb(235,66,41)" fg:x="53069" fg:w="7"/><text x="80.2563%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday (23 samples, 0.03%)</title><rect x="80.0169%" y="421" width="0.0347%" height="15" fill="rgb(245,217,1)" fg:x="53076" fg:w="23"/><text x="80.2669%" y="431.50"></text></g><g><title>httpmq-rs`std::time::SystemTime::now (58 samples, 0.09%)</title><rect x="79.9686%" y="437" width="0.0874%" height="15" fill="rgb(229,91,1)" fg:x="53044" fg:w="58"/><text x="80.2186%" y="447.50"></text></g><g><title>httpmq-rs`hyper::common::date::CachedDate::check (90 samples, 0.14%)</title><rect x="79.9596%" y="453" width="0.1357%" height="15" fill="rgb(207,101,30)" fg:x="53038" fg:w="90"/><text x="80.2096%" y="463.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (26 samples, 0.04%)</title><rect x="80.0561%" y="437" width="0.0392%" height="15" fill="rgb(223,82,49)" fg:x="53102" fg:w="26"/><text x="80.3061%" y="447.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (122 samples, 0.18%)</title><rect x="79.9264%" y="469" width="0.1839%" height="15" fill="rgb(218,167,17)" fg:x="53016" fg:w="122"/><text x="80.1764%" y="479.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="80.0998%" y="453" width="0.0106%" height="15" fill="rgb(208,103,14)" fg:x="53131" fg:w="7"/><text x="80.3498%" y="463.50"></text></g><g><title>httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="80.1104%" y="469" width="0.0166%" height="15" fill="rgb(238,20,8)" fg:x="53138" fg:w="11"/><text x="80.3604%" y="479.50"></text></g><g><title>httpmq-rs`bytes::bytes::static_drop (7 samples, 0.01%)</title><rect x="80.1269%" y="469" width="0.0106%" height="15" fill="rgb(218,80,54)" fg:x="53149" fg:w="7"/><text x="80.3769%" y="479.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::option::Option&lt;axum::routing::future::RouterFuture&lt;hyper::body::body::Body&gt;&gt;&gt; (18 samples, 0.03%)</title><rect x="80.1375%" y="469" width="0.0271%" height="15" fill="rgb(240,144,17)" fg:x="53156" fg:w="18"/><text x="80.3875%" y="479.50"></text></g><g><title>httpmq-rs`http::request::Parts::new (15 samples, 0.02%)</title><rect x="80.1842%" y="469" width="0.0226%" height="15" fill="rgb(245,27,50)" fg:x="53187" fg:w="15"/><text x="80.4342%" y="479.50"></text></g><g><title>httpmq-rs`hyper::common::date::CACHED::__getit (11 samples, 0.02%)</title><rect x="80.2099%" y="469" width="0.0166%" height="15" fill="rgb(251,51,7)" fg:x="53204" fg:w="11"/><text x="80.4599%" y="479.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (9 samples, 0.01%)</title><rect x="80.2777%" y="453" width="0.0136%" height="15" fill="rgb(245,217,29)" fg:x="53249" fg:w="9"/><text x="80.5277%" y="463.50"></text></g><g><title>httpmq-rs`&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="80.2913%" y="453" width="0.0151%" height="15" fill="rgb(221,176,29)" fg:x="53258" fg:w="10"/><text x="80.5413%" y="463.50"></text></g><g><title>httpmq-rs`&lt;http::header::map::Drain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="80.3380%" y="437" width="0.0166%" height="15" fill="rgb(212,180,24)" fg:x="53289" fg:w="11"/><text x="80.5880%" y="447.50"></text></g><g><title>httpmq-rs`&lt;http::header::map::Drain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.04%)</title><rect x="80.6260%" y="421" width="0.0392%" height="15" fill="rgb(254,24,2)" fg:x="53480" fg:w="26"/><text x="80.8760%" y="431.50"></text></g><g><title>httpmq-rs`http::header::name::HeaderName::as_str (11 samples, 0.02%)</title><rect x="80.6651%" y="421" width="0.0166%" height="15" fill="rgb(230,100,2)" fg:x="53506" fg:w="11"/><text x="80.9151%" y="431.50"></text></g><g><title>httpmq-rs`hyper::common::date::CACHED::__getit (17 samples, 0.03%)</title><rect x="80.6817%" y="421" width="0.0256%" height="15" fill="rgb(219,142,25)" fg:x="53517" fg:w="17"/><text x="80.9317%" y="431.50"></text></g><g><title>httpmq-rs`hyper::common::date::CACHED::__getit (7 samples, 0.01%)</title><rect x="80.7239%" y="405" width="0.0106%" height="15" fill="rgb(240,73,43)" fg:x="53545" fg:w="7"/><text x="80.9739%" y="415.50"></text></g><g><title>httpmq-rs`std::thread::local::LocalKey&lt;T&gt;::with (37 samples, 0.06%)</title><rect x="80.7074%" y="421" width="0.0558%" height="15" fill="rgb(214,114,15)" fg:x="53534" fg:w="37"/><text x="80.9574%" y="431.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (19 samples, 0.03%)</title><rect x="80.7345%" y="405" width="0.0286%" height="15" fill="rgb(207,130,4)" fg:x="53552" fg:w="19"/><text x="80.9845%" y="415.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (295 samples, 0.44%)</title><rect x="80.3546%" y="437" width="0.4447%" height="15" fill="rgb(221,25,40)" fg:x="53300" fg:w="295"/><text x="80.6046%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (24 samples, 0.04%)</title><rect x="80.7631%" y="421" width="0.0362%" height="15" fill="rgb(241,184,7)" fg:x="53571" fg:w="24"/><text x="81.0131%" y="431.50"></text></g><g><title>httpmq-rs`bytes::bytes::static_drop (12 samples, 0.02%)</title><rect x="80.8008%" y="437" width="0.0181%" height="15" fill="rgb(235,159,4)" fg:x="53596" fg:w="12"/><text x="81.0508%" y="447.50"></text></g><g><title>httpmq-rs`http::header::name::HeaderName::as_str (14 samples, 0.02%)</title><rect x="80.8189%" y="437" width="0.0211%" height="15" fill="rgb(214,87,48)" fg:x="53608" fg:w="14"/><text x="81.0689%" y="447.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (417 samples, 0.63%)</title><rect x="80.2325%" y="469" width="0.6287%" height="15" fill="rgb(246,198,24)" fg:x="53219" fg:w="417"/><text x="80.4825%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::role::encode_headers (368 samples, 0.55%)</title><rect x="80.3063%" y="453" width="0.5548%" height="15" fill="rgb(209,66,40)" fg:x="53268" fg:w="368"/><text x="80.5563%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="80.8491%" y="437" width="0.0121%" height="15" fill="rgb(233,147,39)" fg:x="53628" fg:w="8"/><text x="81.0991%" y="447.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (12 samples, 0.02%)</title><rect x="80.8611%" y="469" width="0.0181%" height="15" fill="rgb(231,145,52)" fg:x="53636" fg:w="12"/><text x="81.1111%" y="479.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (11 samples, 0.02%)</title><rect x="80.9305%" y="453" width="0.0166%" height="15" fill="rgb(206,20,26)" fg:x="53682" fg:w="11"/><text x="81.1805%" y="463.50"></text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (12 samples, 0.02%)</title><rect x="80.9531%" y="453" width="0.0181%" height="15" fill="rgb(238,220,4)" fg:x="53697" fg:w="12"/><text x="81.2031%" y="463.50"></text></g><g><title>httpmq-rs`bytes::bytes::promotable_even_drop (10 samples, 0.02%)</title><rect x="80.9848%" y="453" width="0.0151%" height="15" fill="rgb(252,195,42)" fg:x="53718" fg:w="10"/><text x="81.2348%" y="463.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (13 samples, 0.02%)</title><rect x="80.9998%" y="453" width="0.0196%" height="15" fill="rgb(209,10,6)" fg:x="53728" fg:w="13"/><text x="81.2498%" y="463.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::KA::status (7 samples, 0.01%)</title><rect x="81.0240%" y="453" width="0.0106%" height="15" fill="rgb(229,3,52)" fg:x="53744" fg:w="7"/><text x="81.2740%" y="463.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.01%)</title><rect x="81.2712%" y="437" width="0.0106%" height="15" fill="rgb(253,49,37)" fg:x="53908" fg:w="7"/><text x="81.5212%" y="447.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (18 samples, 0.03%)</title><rect x="81.2818%" y="437" width="0.0271%" height="15" fill="rgb(240,103,49)" fg:x="53915" fg:w="18"/><text x="81.5318%" y="447.50"></text></g><g><title>httpmq-rs`&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write_vectored (14 samples, 0.02%)</title><rect x="81.3782%" y="389" width="0.0211%" height="15" fill="rgb(250,182,30)" fg:x="53979" fg:w="14"/><text x="81.6282%" y="399.50"></text></g><g><title>httpmq-rs`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (3,887 samples, 5.86%)</title><rect x="81.3692%" y="405" width="5.8600%" height="15" fill="rgb(248,8,30)" fg:x="53973" fg:w="3887"/><text x="81.6192%" y="415.50">httpmq-..</text></g><g><title>libsystem_kernel.dylib`writev (3,865 samples, 5.83%)</title><rect x="81.4024%" y="389" width="5.8268%" height="15" fill="rgb(237,120,30)" fg:x="53995" fg:w="3865"/><text x="81.6524%" y="399.50">libsyst..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (47 samples, 0.07%)</title><rect x="87.2307%" y="405" width="0.0709%" height="15" fill="rgb(221,146,34)" fg:x="57861" fg:w="47"/><text x="87.4807%" y="415.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (7 samples, 0.01%)</title><rect x="87.2910%" y="389" width="0.0106%" height="15" fill="rgb(242,55,13)" fg:x="57901" fg:w="7"/><text x="87.5410%" y="399.50"></text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (3,984 samples, 6.01%)</title><rect x="81.3089%" y="437" width="6.0062%" height="15" fill="rgb(242,112,31)" fg:x="53933" fg:w="3984"/><text x="81.5589%" y="447.50">httpmq-r..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_write_io (3,970 samples, 5.99%)</title><rect x="81.3300%" y="421" width="5.9851%" height="15" fill="rgb(249,192,27)" fg:x="53947" fg:w="3970"/><text x="81.5800%" y="431.50">httpmq-r..</text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="87.3046%" y="405" width="0.0106%" height="15" fill="rgb(208,204,44)" fg:x="57910" fg:w="7"/><text x="87.5546%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (22 samples, 0.03%)</title><rect x="87.3483%" y="421" width="0.0332%" height="15" fill="rgb(208,93,54)" fg:x="57939" fg:w="22"/><text x="87.5983%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.03%)</title><rect x="87.3528%" y="405" width="0.0286%" height="15" fill="rgb(242,1,31)" fg:x="57942" fg:w="19"/><text x="87.6028%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (37 samples, 0.06%)</title><rect x="87.3272%" y="437" width="0.0558%" height="15" fill="rgb(241,83,25)" fg:x="57925" fg:w="37"/><text x="87.5772%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13 samples, 0.02%)</title><rect x="87.4433%" y="405" width="0.0196%" height="15" fill="rgb(205,169,50)" fg:x="58002" fg:w="13"/><text x="87.6933%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (59 samples, 0.09%)</title><rect x="87.3830%" y="437" width="0.0889%" height="15" fill="rgb(239,186,37)" fg:x="57962" fg:w="59"/><text x="87.6330%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (41 samples, 0.06%)</title><rect x="87.4101%" y="421" width="0.0618%" height="15" fill="rgb(205,221,10)" fg:x="57980" fg:w="41"/><text x="87.6601%" y="431.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (4,276 samples, 6.45%)</title><rect x="81.0360%" y="453" width="6.4465%" height="15" fill="rgb(218,196,15)" fg:x="53752" fg:w="4276"/><text x="81.2860%" y="463.50">httpmq-r..</text></g><g><title>httpmq-rs`hyper::proto::h1::io::Cursor&lt;alloc::vec::Vec&lt;u8&gt;&gt;::reset (11 samples, 0.02%)</title><rect x="87.4825%" y="453" width="0.0166%" height="15" fill="rgb(218,196,35)" fg:x="58028" fg:w="11"/><text x="87.7325%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.01%)</title><rect x="87.5126%" y="453" width="0.0136%" height="15" fill="rgb(233,63,24)" fg:x="58048" fg:w="9"/><text x="87.7626%" y="463.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (4,411 samples, 6.65%)</title><rect x="80.8792%" y="469" width="6.6500%" height="15" fill="rgb(225,8,4)" fg:x="53648" fg:w="4411"/><text x="81.1292%" y="479.50">httpmq-rs..</text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (12 samples, 0.02%)</title><rect x="87.7222%" y="437" width="0.0181%" height="15" fill="rgb(234,105,35)" fg:x="58187" fg:w="12"/><text x="87.9722%" y="447.50"></text></g><g><title>httpmq-rs`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (17 samples, 0.03%)</title><rect x="87.8775%" y="373" width="0.0256%" height="15" fill="rgb(236,21,32)" fg:x="58290" fg:w="17"/><text x="88.1275%" y="383.50"></text></g><g><title>libsystem_c.dylib`recv (14 samples, 0.02%)</title><rect x="87.9046%" y="373" width="0.0211%" height="15" fill="rgb(228,109,6)" fg:x="58308" fg:w="14"/><text x="88.1546%" y="383.50"></text></g><g><title>httpmq-rs`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2,893 samples, 4.36%)</title><rect x="87.8579%" y="389" width="4.3615%" height="15" fill="rgb(229,215,31)" fg:x="58277" fg:w="2893"/><text x="88.1079%" y="399.50">httpm..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (2,848 samples, 4.29%)</title><rect x="87.9257%" y="373" width="4.2936%" height="15" fill="rgb(221,52,54)" fg:x="58322" fg:w="2848"/><text x="88.1757%" y="383.50">libsy..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (35 samples, 0.05%)</title><rect x="92.2238%" y="389" width="0.0528%" height="15" fill="rgb(252,129,43)" fg:x="61173" fg:w="35"/><text x="92.4738%" y="399.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (7 samples, 0.01%)</title><rect x="92.2661%" y="373" width="0.0106%" height="15" fill="rgb(248,183,27)" fg:x="61201" fg:w="7"/><text x="92.5161%" y="383.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_read_io (2,956 samples, 4.46%)</title><rect x="87.8292%" y="405" width="4.4564%" height="15" fill="rgb(250,0,22)" fg:x="58258" fg:w="2956"/><text x="88.0792%" y="415.50">httpm..</text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (2,975 samples, 4.49%)</title><rect x="87.8051%" y="421" width="4.4851%" height="15" fill="rgb(213,166,10)" fg:x="58242" fg:w="2975"/><text x="88.0551%" y="431.50">httpm..</text></g><g><title>httpmq-rs`hyper::proto::h1::io::ReadStrategy::record (7 samples, 0.01%)</title><rect x="92.2902%" y="421" width="0.0106%" height="15" fill="rgb(207,163,36)" fg:x="61217" fg:w="7"/><text x="92.5402%" y="431.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (3,028 samples, 4.56%)</title><rect x="87.7508%" y="437" width="4.5650%" height="15" fill="rgb(208,122,22)" fg:x="58206" fg:w="3028"/><text x="88.0008%" y="447.50">httpm..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_read_io (10 samples, 0.02%)</title><rect x="92.3007%" y="421" width="0.0151%" height="15" fill="rgb(207,104,49)" fg:x="61224" fg:w="10"/><text x="92.5507%" y="431.50"></text></g><g><title>httpmq-rs`__rdl_alloc (10 samples, 0.02%)</title><rect x="92.5525%" y="405" width="0.0151%" height="15" fill="rgb(248,211,50)" fg:x="61391" fg:w="10"/><text x="92.8025%" y="415.50"></text></g><g><title>httpmq-rs`__rust_alloc (12 samples, 0.02%)</title><rect x="92.5676%" y="405" width="0.0181%" height="15" fill="rgb(217,13,45)" fg:x="61401" fg:w="12"/><text x="92.8176%" y="415.50"></text></g><g><title>httpmq-rs`__rust_probestack (18 samples, 0.03%)</title><rect x="92.5857%" y="405" width="0.0271%" height="15" fill="rgb(211,216,49)" fg:x="61413" fg:w="18"/><text x="92.8357%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (111 samples, 0.17%)</title><rect x="92.6580%" y="357" width="0.1673%" height="15" fill="rgb(221,58,53)" fg:x="61461" fg:w="111"/><text x="92.9080%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.06%)</title><rect x="92.7681%" y="341" width="0.0573%" height="15" fill="rgb(220,112,41)" fg:x="61534" fg:w="38"/><text x="93.0181%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.01%)</title><rect x="92.8148%" y="325" width="0.0106%" height="15" fill="rgb(236,38,28)" fg:x="61565" fg:w="7"/><text x="93.0648%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (115 samples, 0.17%)</title><rect x="92.6535%" y="373" width="0.1734%" height="15" fill="rgb(227,195,22)" fg:x="61458" fg:w="115"/><text x="92.9035%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (141 samples, 0.21%)</title><rect x="92.6188%" y="389" width="0.2126%" height="15" fill="rgb(214,55,33)" fg:x="61435" fg:w="141"/><text x="92.8688%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (15 samples, 0.02%)</title><rect x="92.8314%" y="389" width="0.0226%" height="15" fill="rgb(248,80,13)" fg:x="61576" fg:w="15"/><text x="93.0814%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="92.8631%" y="389" width="0.0106%" height="15" fill="rgb(238,52,6)" fg:x="61597" fg:w="7"/><text x="93.1131%" y="399.50"></text></g><g><title>httpmq-rs`bytes::bytes::Bytes::copy_from_slice (186 samples, 0.28%)</title><rect x="92.6128%" y="405" width="0.2804%" height="15" fill="rgb(224,198,47)" fg:x="61431" fg:w="186"/><text x="92.8628%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="92.8736%" y="389" width="0.0196%" height="15" fill="rgb(233,171,20)" fg:x="61604" fg:w="13"/><text x="93.1236%" y="399.50"></text></g><g><title>httpmq-rs`bytes::bytes::Bytes::slice (9 samples, 0.01%)</title><rect x="92.8932%" y="405" width="0.0136%" height="15" fill="rgb(241,30,25)" fg:x="61617" fg:w="9"/><text x="93.1432%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (69 samples, 0.10%)</title><rect x="92.9128%" y="389" width="0.1040%" height="15" fill="rgb(207,171,38)" fg:x="61630" fg:w="69"/><text x="93.1628%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (65 samples, 0.10%)</title><rect x="92.9188%" y="373" width="0.0980%" height="15" fill="rgb(234,70,1)" fg:x="61634" fg:w="65"/><text x="93.1688%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (64 samples, 0.10%)</title><rect x="92.9204%" y="357" width="0.0965%" height="15" fill="rgb(232,178,18)" fg:x="61635" fg:w="64"/><text x="93.1704%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (27 samples, 0.04%)</title><rect x="92.9761%" y="341" width="0.0407%" height="15" fill="rgb(241,78,40)" fg:x="61672" fg:w="27"/><text x="93.2261%" y="351.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::BytesMut::split_to (76 samples, 0.11%)</title><rect x="92.9068%" y="405" width="0.1146%" height="15" fill="rgb(222,35,25)" fg:x="61626" fg:w="76"/><text x="93.1568%" y="415.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::shared_v_clone (14 samples, 0.02%)</title><rect x="93.0214%" y="405" width="0.0211%" height="15" fill="rgb(207,92,16)" fg:x="61702" fg:w="14"/><text x="93.2714%" y="415.50"></text></g><g><title>httpmq-rs`http::header::map::HeaderMap&lt;T&gt;::append (41 samples, 0.06%)</title><rect x="93.0591%" y="405" width="0.0618%" height="15" fill="rgb(216,59,51)" fg:x="61727" fg:w="41"/><text x="93.3091%" y="415.50"></text></g><g><title>httpmq-rs`http::header::name::HeaderName::from_bytes (66 samples, 0.10%)</title><rect x="93.1269%" y="405" width="0.0995%" height="15" fill="rgb(213,80,28)" fg:x="61772" fg:w="66"/><text x="93.3769%" y="415.50"></text></g><g><title>httpmq-rs`http::header::name::parse_hdr (57 samples, 0.09%)</title><rect x="93.1405%" y="389" width="0.0859%" height="15" fill="rgb(220,93,7)" fg:x="61781" fg:w="57"/><text x="93.3905%" y="399.50"></text></g><g><title>httpmq-rs`http::header::name::parse_hdr (9 samples, 0.01%)</title><rect x="93.2264%" y="405" width="0.0136%" height="15" fill="rgb(225,24,44)" fg:x="61838" fg:w="9"/><text x="93.4764%" y="415.50"></text></g><g><title>httpmq-rs`http::method::Method::from_bytes (12 samples, 0.02%)</title><rect x="93.2400%" y="405" width="0.0181%" height="15" fill="rgb(243,74,40)" fg:x="61847" fg:w="12"/><text x="93.4900%" y="415.50"></text></g><g><title>httpmq-rs`http::uri::Uri::from_shared (350 samples, 0.53%)</title><rect x="93.2581%" y="405" width="0.5277%" height="15" fill="rgb(228,39,7)" fg:x="61859" fg:w="350"/><text x="93.5081%" y="415.50"></text></g><g><title>httpmq-rs`http::uri::path::PathAndQuery::from_shared (327 samples, 0.49%)</title><rect x="93.2927%" y="389" width="0.4930%" height="15" fill="rgb(227,79,8)" fg:x="61882" fg:w="327"/><text x="93.5427%" y="399.50"></text></g><g><title>httpmq-rs`http::uri::path::PathAndQuery::from_shared (10 samples, 0.02%)</title><rect x="93.7857%" y="405" width="0.0151%" height="15" fill="rgb(236,58,11)" fg:x="62209" fg:w="10"/><text x="94.0357%" y="415.50"></text></g><g><title>httpmq-rs`httparse::simd::runtime::match_header_value_vectored (17 samples, 0.03%)</title><rect x="93.9214%" y="373" width="0.0256%" height="15" fill="rgb(249,63,35)" fg:x="62299" fg:w="17"/><text x="94.1714%" y="383.50"></text></g><g><title>httpmq-rs`httparse::parse_headers_iter_uninit (64 samples, 0.10%)</title><rect x="93.8596%" y="389" width="0.0965%" height="15" fill="rgb(252,114,16)" fg:x="62258" fg:w="64"/><text x="94.1096%" y="399.50"></text></g><g><title>httpmq-rs`httparse::parse_version (7 samples, 0.01%)</title><rect x="93.9561%" y="389" width="0.0106%" height="15" fill="rgb(254,151,24)" fg:x="62322" fg:w="7"/><text x="94.2061%" y="399.50"></text></g><g><title>httpmq-rs`httparse::simd::avx2::match_url_char_32_avx (46 samples, 0.07%)</title><rect x="93.9666%" y="389" width="0.0693%" height="15" fill="rgb(253,54,39)" fg:x="62329" fg:w="46"/><text x="94.2166%" y="399.50"></text></g><g><title>httpmq-rs`httparse::Request::parse_with_uninit_headers (253 samples, 0.38%)</title><rect x="93.8008%" y="405" width="0.3814%" height="15" fill="rgb(243,25,45)" fg:x="62219" fg:w="253"/><text x="94.0508%" y="415.50"></text></g><g><title>httpmq-rs`httparse::simd::runtime::match_uri_vectored (97 samples, 0.15%)</title><rect x="94.0360%" y="389" width="0.1462%" height="15" fill="rgb(234,134,9)" fg:x="62375" fg:w="97"/><text x="94.2860%" y="399.50"></text></g><g><title>httpmq-rs`httparse::simd::avx2::match_url_char_32_avx (84 samples, 0.13%)</title><rect x="94.0556%" y="373" width="0.1266%" height="15" fill="rgb(227,166,31)" fg:x="62388" fg:w="84"/><text x="94.3056%" y="383.50"></text></g><g><title>httpmq-rs`httparse::simd::runtime::match_uri_vectored (9 samples, 0.01%)</title><rect x="94.1913%" y="405" width="0.0136%" height="15" fill="rgb(245,143,41)" fg:x="62478" fg:w="9"/><text x="94.4413%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.02%)</title><rect x="94.2048%" y="405" width="0.0241%" height="15" fill="rgb(238,181,32)" fg:x="62487" fg:w="16"/><text x="94.4548%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (18 samples, 0.03%)</title><rect x="94.2289%" y="405" width="0.0271%" height="15" fill="rgb(224,113,18)" fg:x="62503" fg:w="18"/><text x="94.4789%" y="415.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (1,288 samples, 1.94%)</title><rect x="92.3580%" y="421" width="1.9418%" height="15" fill="rgb(240,229,28)" fg:x="61262" fg:w="1288"/><text x="92.6080%" y="431.50">h..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (29 samples, 0.04%)</title><rect x="94.2561%" y="405" width="0.0437%" height="15" fill="rgb(250,185,3)" fg:x="62521" fg:w="29"/><text x="94.5061%" y="415.50"></text></g><g><title>httpmq-rs`__rust_probestack (15 samples, 0.02%)</title><rect x="94.3043%" y="421" width="0.0226%" height="15" fill="rgb(212,59,25)" fg:x="62553" fg:w="15"/><text x="94.5543%" y="431.50"></text></g><g><title>httpmq-rs`bytes::bytes::Bytes::copy_from_slice (11 samples, 0.02%)</title><rect x="94.3269%" y="421" width="0.0166%" height="15" fill="rgb(221,87,20)" fg:x="62568" fg:w="11"/><text x="94.5769%" y="431.50"></text></g><g><title>httpmq-rs`http::header::map::HeaderMap&lt;T&gt;::append (12 samples, 0.02%)</title><rect x="94.3541%" y="421" width="0.0181%" height="15" fill="rgb(213,74,28)" fg:x="62586" fg:w="12"/><text x="94.6041%" y="431.50"></text></g><g><title>httpmq-rs`http::header::name::HeaderName::from_bytes (14 samples, 0.02%)</title><rect x="94.3797%" y="421" width="0.0211%" height="15" fill="rgb(224,132,34)" fg:x="62603" fg:w="14"/><text x="94.6297%" y="431.50"></text></g><g><title>httpmq-rs`http::method::Method::from_bytes (14 samples, 0.02%)</title><rect x="94.4008%" y="421" width="0.0211%" height="15" fill="rgb(222,101,24)" fg:x="62617" fg:w="14"/><text x="94.6508%" y="431.50"></text></g><g><title>httpmq-rs`http::uri::Uri::from_shared (10 samples, 0.02%)</title><rect x="94.4219%" y="421" width="0.0151%" height="15" fill="rgb(254,142,4)" fg:x="62631" fg:w="10"/><text x="94.6719%" y="431.50"></text></g><g><title>httpmq-rs`httparse::Request::parse_with_uninit_headers (14 samples, 0.02%)</title><rect x="94.4370%" y="421" width="0.0211%" height="15" fill="rgb(230,229,49)" fg:x="62641" fg:w="14"/><text x="94.6870%" y="431.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::role::parse_headers (1,423 samples, 2.15%)</title><rect x="92.3249%" y="437" width="2.1453%" height="15" fill="rgb(238,70,47)" fg:x="61240" fg:w="1423"/><text x="92.5749%" y="447.50">h..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="94.4581%" y="421" width="0.0121%" height="15" fill="rgb(231,160,17)" fg:x="62655" fg:w="8"/><text x="94.7081%" y="431.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (4,867 samples, 7.34%)</title><rect x="87.6362%" y="453" width="7.3374%" height="15" fill="rgb(218,68,53)" fg:x="58130" fg:w="4867"/><text x="87.8862%" y="463.50">httpmq-rs`..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (328 samples, 0.49%)</title><rect x="94.4792%" y="437" width="0.4945%" height="15" fill="rgb(236,111,10)" fg:x="62669" fg:w="328"/><text x="94.7292%" y="447.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::role::parse_headers (12 samples, 0.02%)</title><rect x="94.9782%" y="453" width="0.0181%" height="15" fill="rgb(224,34,41)" fg:x="63000" fg:w="12"/><text x="95.2282%" y="463.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (4,981 samples, 7.51%)</title><rect x="87.5292%" y="469" width="7.5093%" height="15" fill="rgb(241,118,19)" fg:x="58059" fg:w="4981"/><text x="87.7792%" y="479.50">httpmq-rs`..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (28 samples, 0.04%)</title><rect x="94.9963%" y="453" width="0.0422%" height="15" fill="rgb(238,129,25)" fg:x="63012" fg:w="28"/><text x="95.2463%" y="463.50"></text></g><g><title>httpmq-rs`std::sys::unix::decode_error_kind (9 samples, 0.01%)</title><rect x="95.1546%" y="405" width="0.0136%" height="15" fill="rgb(238,22,31)" fg:x="63117" fg:w="9"/><text x="95.4046%" y="415.50"></text></g><g><title>httpmq-rs`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (43 samples, 0.06%)</title><rect x="95.2164%" y="373" width="0.0648%" height="15" fill="rgb(222,174,48)" fg:x="63158" fg:w="43"/><text x="95.4664%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (26 samples, 0.04%)</title><rect x="95.2420%" y="357" width="0.0392%" height="15" fill="rgb(206,152,40)" fg:x="63175" fg:w="26"/><text x="95.4920%" y="367.50"></text></g><g><title>libsystem_c.dylib`recv (7 samples, 0.01%)</title><rect x="95.2888%" y="373" width="0.0106%" height="15" fill="rgb(218,99,54)" fg:x="63206" fg:w="7"/><text x="95.5388%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__error (11 samples, 0.02%)</title><rect x="95.2993%" y="373" width="0.0166%" height="15" fill="rgb(220,174,26)" fg:x="63213" fg:w="11"/><text x="95.5493%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (536 samples, 0.81%)</title><rect x="95.3159%" y="373" width="0.8081%" height="15" fill="rgb(245,116,9)" fg:x="63224" fg:w="536"/><text x="95.5659%" y="383.50"></text></g><g><title>httpmq-rs`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (616 samples, 0.93%)</title><rect x="95.2104%" y="389" width="0.9287%" height="15" fill="rgb(209,72,35)" fg:x="63154" fg:w="616"/><text x="95.4604%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`cerror (10 samples, 0.02%)</title><rect x="96.1240%" y="373" width="0.0151%" height="15" fill="rgb(226,126,21)" fg:x="63760" fg:w="10"/><text x="96.3740%" y="383.50"></text></g><g><title>httpmq-rs`std::sys::unix::decode_error_kind (12 samples, 0.02%)</title><rect x="96.1391%" y="389" width="0.0181%" height="15" fill="rgb(227,192,1)" fg:x="63770" fg:w="12"/><text x="96.3891%" y="399.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::ref_inc (9 samples, 0.01%)</title><rect x="96.2461%" y="357" width="0.0136%" height="15" fill="rgb(237,180,29)" fg:x="63841" fg:w="9"/><text x="96.4961%" y="367.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (35 samples, 0.05%)</title><rect x="96.2190%" y="373" width="0.0528%" height="15" fill="rgb(230,197,35)" fg:x="63823" fg:w="35"/><text x="96.4690%" y="383.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::waker::clone_waker (8 samples, 0.01%)</title><rect x="96.2597%" y="357" width="0.0121%" height="15" fill="rgb(246,193,31)" fg:x="63850" fg:w="8"/><text x="96.5097%" y="367.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::ref_inc (7 samples, 0.01%)</title><rect x="96.2612%" y="341" width="0.0106%" height="15" fill="rgb(241,36,4)" fg:x="63851" fg:w="7"/><text x="96.5112%" y="351.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (94 samples, 0.14%)</title><rect x="96.1572%" y="389" width="0.1417%" height="15" fill="rgb(241,130,17)" fg:x="63782" fg:w="94"/><text x="96.4072%" y="399.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::waker::clone_waker (18 samples, 0.03%)</title><rect x="96.2717%" y="373" width="0.0271%" height="15" fill="rgb(206,137,32)" fg:x="63858" fg:w="18"/><text x="96.5217%" y="383.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_read_io (773 samples, 1.17%)</title><rect x="95.1682%" y="405" width="1.1654%" height="15" fill="rgb(237,228,51)" fg:x="63126" fg:w="773"/><text x="95.4182%" y="415.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (23 samples, 0.03%)</title><rect x="96.2989%" y="389" width="0.0347%" height="15" fill="rgb(243,6,42)" fg:x="63876" fg:w="23"/><text x="96.5489%" y="399.50"></text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (800 samples, 1.21%)</title><rect x="95.1410%" y="421" width="1.2061%" height="15" fill="rgb(251,74,28)" fg:x="63108" fg:w="800"/><text x="95.3910%" y="431.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (9 samples, 0.01%)</title><rect x="96.3335%" y="405" width="0.0136%" height="15" fill="rgb(218,20,49)" fg:x="63899" fg:w="9"/><text x="96.5835%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (10 samples, 0.02%)</title><rect x="96.4873%" y="341" width="0.0151%" height="15" fill="rgb(238,28,14)" fg:x="64001" fg:w="10"/><text x="96.7373%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (105 samples, 0.16%)</title><rect x="96.3652%" y="405" width="0.1583%" height="15" fill="rgb(229,40,46)" fg:x="63920" fg:w="105"/><text x="96.6152%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (97 samples, 0.15%)</title><rect x="96.3773%" y="389" width="0.1462%" height="15" fill="rgb(244,195,20)" fg:x="63928" fg:w="97"/><text x="96.6273%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (94 samples, 0.14%)</title><rect x="96.3818%" y="373" width="0.1417%" height="15" fill="rgb(253,56,35)" fg:x="63931" fg:w="94"/><text x="96.6318%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (48 samples, 0.07%)</title><rect x="96.4511%" y="357" width="0.0724%" height="15" fill="rgb(210,149,44)" fg:x="63977" fg:w="48"/><text x="96.7011%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (10 samples, 0.02%)</title><rect x="96.5084%" y="341" width="0.0151%" height="15" fill="rgb(240,135,12)" fg:x="64015" fg:w="10"/><text x="96.7584%" y="351.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::BytesMut::reserve_inner (120 samples, 0.18%)</title><rect x="96.3471%" y="421" width="0.1809%" height="15" fill="rgb(251,24,50)" fg:x="63908" fg:w="120"/><text x="96.5971%" y="431.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (946 samples, 1.43%)</title><rect x="95.1245%" y="437" width="1.4262%" height="15" fill="rgb(243,200,47)" fg:x="63097" fg:w="946"/><text x="95.3745%" y="447.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (972 samples, 1.47%)</title><rect x="95.0928%" y="453" width="1.4654%" height="15" fill="rgb(224,166,26)" fg:x="63076" fg:w="972"/><text x="95.3428%" y="463.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (1,014 samples, 1.53%)</title><rect x="95.0385%" y="469" width="1.5287%" height="15" fill="rgb(233,0,47)" fg:x="63040" fg:w="1014"/><text x="95.2885%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (13 samples, 0.02%)</title><rect x="96.5672%" y="469" width="0.0196%" height="15" fill="rgb(253,80,5)" fg:x="64054" fg:w="13"/><text x="96.8172%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::State::busy (15 samples, 0.02%)</title><rect x="96.5868%" y="469" width="0.0226%" height="15" fill="rgb(214,133,25)" fg:x="64067" fg:w="15"/><text x="96.8368%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::State::wants_keep_alive (8 samples, 0.01%)</title><rect x="96.6155%" y="469" width="0.0121%" height="15" fill="rgb(209,27,14)" fg:x="64086" fg:w="8"/><text x="96.8655%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (34 samples, 0.05%)</title><rect x="96.6863%" y="453" width="0.0513%" height="15" fill="rgb(219,102,51)" fg:x="64133" fg:w="34"/><text x="96.9363%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="96.7255%" y="437" width="0.0121%" height="15" fill="rgb(237,18,16)" fg:x="64159" fg:w="8"/><text x="96.9755%" y="447.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::encode::Encoder::encode_and_end (78 samples, 0.12%)</title><rect x="96.6275%" y="469" width="0.1176%" height="15" fill="rgb(241,85,17)" fg:x="64094" fg:w="78"/><text x="96.8775%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_buffer (13 samples, 0.02%)</title><rect x="96.7481%" y="469" width="0.0196%" height="15" fill="rgb(236,90,42)" fg:x="64174" fg:w="13"/><text x="96.9981%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (12 samples, 0.02%)</title><rect x="96.7813%" y="469" width="0.0181%" height="15" fill="rgb(249,57,21)" fg:x="64196" fg:w="12"/><text x="97.0313%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::role::encode_headers (12 samples, 0.02%)</title><rect x="96.7994%" y="469" width="0.0181%" height="15" fill="rgb(243,12,36)" fg:x="64208" fg:w="12"/><text x="97.0494%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (17 samples, 0.03%)</title><rect x="96.8265%" y="453" width="0.0256%" height="15" fill="rgb(253,128,47)" fg:x="64226" fg:w="17"/><text x="97.0765%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.03%)</title><rect x="96.8265%" y="437" width="0.0256%" height="15" fill="rgb(207,33,20)" fg:x="64226" fg:w="17"/><text x="97.0765%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (24 samples, 0.04%)</title><rect x="96.8175%" y="469" width="0.0362%" height="15" fill="rgb(233,215,35)" fg:x="64220" fg:w="24"/><text x="97.0675%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.01%)</title><rect x="96.9140%" y="437" width="0.0136%" height="15" fill="rgb(249,188,52)" fg:x="64284" fg:w="9"/><text x="97.1640%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (32 samples, 0.05%)</title><rect x="96.8883%" y="453" width="0.0482%" height="15" fill="rgb(225,12,32)" fg:x="64267" fg:w="32"/><text x="97.1383%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (56 samples, 0.08%)</title><rect x="96.8537%" y="469" width="0.0844%" height="15" fill="rgb(247,98,14)" fg:x="64244" fg:w="56"/><text x="97.1037%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (57,561 samples, 86.78%)</title><rect x="10.2305%" y="485" width="86.7784%" height="15" fill="rgb(247,219,48)" fg:x="6786" fg:w="57561"/><text x="10.4805%" y="495.50">httpmq-rs`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (44 samples, 0.07%)</title><rect x="96.9426%" y="469" width="0.0663%" height="15" fill="rgb(253,60,48)" fg:x="64303" fg:w="44"/><text x="97.1926%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::encode::Encoder::encode_and_end (10 samples, 0.02%)</title><rect x="97.0089%" y="485" width="0.0151%" height="15" fill="rgb(245,15,52)" fg:x="64347" fg:w="10"/><text x="97.2589%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_buffer (10 samples, 0.02%)</title><rect x="97.0316%" y="485" width="0.0151%" height="15" fill="rgb(220,133,28)" fg:x="64362" fg:w="10"/><text x="97.2816%" y="495.50"></text></g><g><title>httpmq-rs`&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (57,803 samples, 87.14%)</title><rect x="9.9245%" y="501" width="87.1433%" height="15" fill="rgb(217,180,4)" fg:x="6583" fg:w="57803"/><text x="10.1745%" y="511.50">httpmq-rs`&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.02%)</title><rect x="97.0527%" y="485" width="0.0151%" height="15" fill="rgb(251,24,1)" fg:x="64376" fg:w="10"/><text x="97.3027%" y="495.50"></text></g><g><title>httpmq-rs`&lt;hyper::server::conn::spawn_all::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (57,838 samples, 87.20%)</title><rect x="9.8868%" y="517" width="87.1960%" height="15" fill="rgb(212,185,49)" fg:x="6558" fg:w="57838"/><text x="10.1368%" y="527.50">httpmq-rs`&lt;hyper::server::conn::spawn_all::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll</text></g><g><title>httpmq-rs`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (10 samples, 0.02%)</title><rect x="97.0677%" y="501" width="0.0151%" height="15" fill="rgb(215,175,22)" fg:x="64386" fg:w="10"/><text x="97.3177%" y="511.50"></text></g><g><title>httpmq-rs`&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (9 samples, 0.01%)</title><rect x="97.0828%" y="517" width="0.0136%" height="15" fill="rgb(250,205,14)" fg:x="64396" fg:w="9"/><text x="97.3328%" y="527.50"></text></g><g><title>httpmq-rs`core::task::poll::Poll&lt;T&gt;::map (7 samples, 0.01%)</title><rect x="97.0964%" y="517" width="0.0106%" height="15" fill="rgb(225,211,22)" fg:x="64405" fg:w="7"/><text x="97.3464%" y="527.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_idle (9 samples, 0.01%)</title><rect x="97.1069%" y="517" width="0.0136%" height="15" fill="rgb(251,179,42)" fg:x="64412" fg:w="9"/><text x="97.3569%" y="527.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (57,916 samples, 87.31%)</title><rect x="9.8144%" y="533" width="87.3136%" height="15" fill="rgb(208,216,51)" fg:x="6510" fg:w="57916"/><text x="10.0644%" y="543.50">httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_idle (8 samples, 0.01%)</title><rect x="97.1280%" y="533" width="0.0121%" height="15" fill="rgb(235,36,11)" fg:x="64426" fg:w="8"/><text x="97.3780%" y="543.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_running (7 samples, 0.01%)</title><rect x="97.1401%" y="533" width="0.0106%" height="15" fill="rgb(213,189,28)" fg:x="64434" fg:w="7"/><text x="97.3901%" y="543.50"></text></g><g><title>httpmq-rs`std::thread::local::LocalKey&lt;T&gt;::with (58,008 samples, 87.45%)</title><rect x="9.7179%" y="549" width="87.4523%" height="15" fill="rgb(227,203,42)" fg:x="6446" fg:w="58008"/><text x="9.9679%" y="559.50">httpmq-rs`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.02%)</title><rect x="97.1507%" y="533" width="0.0196%" height="15" fill="rgb(244,72,36)" fg:x="64441" fg:w="13"/><text x="97.4007%" y="543.50"></text></g><g><title>httpmq-rs`tokio::coop::CURRENT::__getit (15 samples, 0.02%)</title><rect x="97.1703%" y="549" width="0.0226%" height="15" fill="rgb(213,53,17)" fg:x="64454" fg:w="15"/><text x="97.4203%" y="559.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (9 samples, 0.01%)</title><rect x="97.1929%" y="549" width="0.0136%" height="15" fill="rgb(207,167,3)" fg:x="64469" fg:w="9"/><text x="97.4429%" y="559.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::raw::poll (24 samples, 0.04%)</title><rect x="97.2064%" y="549" width="0.0362%" height="15" fill="rgb(216,98,30)" fg:x="64478" fg:w="24"/><text x="97.4564%" y="559.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Shared::notify_parked (21 samples, 0.03%)</title><rect x="97.2426%" y="549" width="0.0317%" height="15" fill="rgb(236,123,15)" fg:x="64502" fg:w="21"/><text x="97.4926%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (9 samples, 0.01%)</title><rect x="97.2848%" y="549" width="0.0136%" height="15" fill="rgb(248,81,50)" fg:x="64530" fg:w="9"/><text x="97.5348%" y="559.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Context::run (64,534 samples, 97.29%)</title><rect x="0.0271%" y="581" width="97.2909%" height="15" fill="rgb(214,120,4)" fg:x="18" fg:w="64534"/><text x="0.2771%" y="591.50">httpmq-rs`tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Context::run_task (59,060 samples, 89.04%)</title><rect x="8.2797%" y="565" width="89.0383%" height="15" fill="rgb(208,179,34)" fg:x="5492" fg:w="59060"/><text x="8.5297%" y="575.50">httpmq-rs`tokio::runtime::thread_pool::worker::Context::run_task</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (13 samples, 0.02%)</title><rect x="97.2984%" y="549" width="0.0196%" height="15" fill="rgb(227,140,7)" fg:x="64539" fg:w="13"/><text x="97.5484%" y="559.50"></text></g><g><title>httpmq-rs`std::sys_common::backtrace::__rust_begin_short_backtrace (64,555 samples, 97.32%)</title><rect x="0.0060%" y="677" width="97.3225%" height="15" fill="rgb(214,22,6)" fg:x="4" fg:w="64555"/><text x="0.2560%" y="687.50">httpmq-rs`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>httpmq-rs`tokio::runtime::blocking::pool::Inner::run (64,555 samples, 97.32%)</title><rect x="0.0060%" y="661" width="97.3225%" height="15" fill="rgb(207,137,27)" fg:x="4" fg:w="64555"/><text x="0.2560%" y="671.50">httpmq-rs`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (64,555 samples, 97.32%)</title><rect x="0.0060%" y="645" width="97.3225%" height="15" fill="rgb(210,8,46)" fg:x="4" fg:w="64555"/><text x="0.2560%" y="655.50">httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>httpmq-rs`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (64,555 samples, 97.32%)</title><rect x="0.0060%" y="629" width="97.3225%" height="15" fill="rgb(240,16,54)" fg:x="4" fg:w="64555"/><text x="0.2560%" y="639.50">httpmq-rs`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::run (64,555 samples, 97.32%)</title><rect x="0.0060%" y="613" width="97.3225%" height="15" fill="rgb(211,209,29)" fg:x="4" fg:w="64555"/><text x="0.2560%" y="623.50">httpmq-rs`tokio::runtime::thread_pool::worker::run</text></g><g><title>httpmq-rs`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (64,555 samples, 97.32%)</title><rect x="0.0060%" y="597" width="97.3225%" height="15" fill="rgb(226,228,24)" fg:x="4" fg:w="64555"/><text x="0.2560%" y="607.50">httpmq-rs`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Context::run_task (7 samples, 0.01%)</title><rect x="97.3180%" y="581" width="0.0106%" height="15" fill="rgb(222,84,9)" fg:x="64552" fg:w="7"/><text x="97.5680%" y="591.50"></text></g><g><title>httpmq-rs`std::sys::unix::thread::Thread::new::thread_start (64,556 samples, 97.32%)</title><rect x="0.0060%" y="709" width="97.3240%" height="15" fill="rgb(234,203,30)" fg:x="4" fg:w="64556"/><text x="0.2560%" y="719.50">httpmq-rs`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>httpmq-rs`core::ops::function::FnOnce::call_once{{vtable.shim}} (64,556 samples, 97.32%)</title><rect x="0.0060%" y="693" width="97.3240%" height="15" fill="rgb(238,109,14)" fg:x="4" fg:w="64556"/><text x="0.2560%" y="703.50">httpmq-rs`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>httpmq-rs`snappy::internal::CompressFragment (76 samples, 0.11%)</title><rect x="97.4461%" y="437" width="0.1146%" height="15" fill="rgb(233,206,34)" fg:x="64637" fg:w="76"/><text x="97.6961%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.02%)</title><rect x="97.5607%" y="421" width="0.0196%" height="15" fill="rgb(220,167,47)" fg:x="64713" fg:w="13"/><text x="97.8107%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.02%)</title><rect x="97.5607%" y="405" width="0.0196%" height="15" fill="rgb(238,105,10)" fg:x="64713" fg:w="13"/><text x="97.8107%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (13 samples, 0.02%)</title><rect x="97.5607%" y="389" width="0.0196%" height="15" fill="rgb(213,227,17)" fg:x="64713" fg:w="13"/><text x="97.8107%" y="399.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (15 samples, 0.02%)</title><rect x="97.5607%" y="437" width="0.0226%" height="15" fill="rgb(217,132,38)" fg:x="64713" fg:w="15"/><text x="97.8107%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="97.5833%" y="437" width="0.0106%" height="15" fill="rgb(242,146,4)" fg:x="64728" fg:w="7"/><text x="97.8333%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_small (11 samples, 0.02%)</title><rect x="97.5939%" y="437" width="0.0166%" height="15" fill="rgb(212,61,9)" fg:x="64735" fg:w="11"/><text x="97.8439%" y="447.50"></text></g><g><title>httpmq-rs`snappy::Compress (148 samples, 0.22%)</title><rect x="97.4296%" y="453" width="0.2231%" height="15" fill="rgb(247,126,22)" fg:x="64626" fg:w="148"/><text x="97.6796%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (23 samples, 0.03%)</title><rect x="97.6180%" y="437" width="0.0347%" height="15" fill="rgb(220,196,2)" fg:x="64751" fg:w="23"/><text x="97.8680%" y="447.50"></text></g><g><title>httpmq-rs`snappy::RawCompress (152 samples, 0.23%)</title><rect x="97.4296%" y="469" width="0.2292%" height="15" fill="rgb(208,46,4)" fg:x="64626" fg:w="152"/><text x="97.6796%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="97.6632%" y="437" width="0.0196%" height="15" fill="rgb(252,104,46)" fg:x="64781" fg:w="13"/><text x="97.9132%" y="447.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (14 samples, 0.02%)</title><rect x="97.6632%" y="453" width="0.0211%" height="15" fill="rgb(237,152,48)" fg:x="64781" fg:w="14"/><text x="97.9132%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::CompressData(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, unsigned int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (177 samples, 0.27%)</title><rect x="97.4190%" y="485" width="0.2668%" height="15" fill="rgb(221,59,37)" fg:x="64619" fg:w="177"/><text x="97.6690%" y="495.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::resize (16 samples, 0.02%)</title><rect x="97.6617%" y="469" width="0.0241%" height="15" fill="rgb(209,202,51)" fg:x="64780" fg:w="16"/><text x="97.9117%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (179 samples, 0.27%)</title><rect x="97.4175%" y="501" width="0.2699%" height="15" fill="rgb(228,81,30)" fg:x="64618" fg:w="179"/><text x="97.6675%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext const&amp;, rocksdb::UncompressionContext*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (186 samples, 0.28%)</title><rect x="97.4100%" y="517" width="0.2804%" height="15" fill="rgb(227,42,39)" fg:x="64613" fg:w="186"/><text x="97.6600%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Flush (8 samples, 0.01%)</title><rect x="97.7100%" y="485" width="0.0121%" height="15" fill="rgb(221,26,2)" fg:x="64812" fg:w="8"/><text x="97.9600%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::WriteBuffered (8 samples, 0.01%)</title><rect x="97.7100%" y="469" width="0.0121%" height="15" fill="rgb(254,61,31)" fg:x="64812" fg:w="8"/><text x="97.9600%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`write (8 samples, 0.01%)</title><rect x="97.7100%" y="453" width="0.0121%" height="15" fill="rgb(222,173,38)" fg:x="64812" fg:w="8"/><text x="97.9600%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Append (20 samples, 0.03%)</title><rect x="97.6994%" y="501" width="0.0302%" height="15" fill="rgb(218,50,12)" fg:x="64805" fg:w="20"/><text x="97.9494%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::crc32c::Extend (37 samples, 0.06%)</title><rect x="97.7296%" y="501" width="0.0558%" height="15" fill="rgb(223,88,40)" fg:x="64825" fg:w="37"/><text x="97.9796%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteRawBlock (64 samples, 0.10%)</title><rect x="97.6904%" y="517" width="0.0965%" height="15" fill="rgb(237,54,19)" fg:x="64799" fg:w="64"/><text x="97.9404%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteBlock (256 samples, 0.39%)</title><rect x="97.4069%" y="533" width="0.3859%" height="15" fill="rgb(251,129,25)" fg:x="64611" fg:w="256"/><text x="97.6569%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBuilder::Finish (7 samples, 0.01%)</title><rect x="97.7944%" y="533" width="0.0106%" height="15" fill="rgb(238,97,19)" fg:x="64868" fg:w="7"/><text x="98.0444%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteBlock (280 samples, 0.42%)</title><rect x="97.4054%" y="549" width="0.4221%" height="15" fill="rgb(240,169,18)" fg:x="64610" fg:w="280"/><text x="97.6554%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_small (11 samples, 0.02%)</title><rect x="97.8110%" y="533" width="0.0166%" height="15" fill="rgb(230,187,49)" fg:x="64879" fg:w="11"/><text x="98.0610%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::Flush (283 samples, 0.43%)</title><rect x="97.4024%" y="565" width="0.4266%" height="15" fill="rgb(209,44,26)" fg:x="64608" fg:w="283"/><text x="97.6524%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (28 samples, 0.04%)</title><rect x="97.9271%" y="469" width="0.0422%" height="15" fill="rgb(244,0,6)" fg:x="64956" fg:w="28"/><text x="98.1771%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (14 samples, 0.02%)</title><rect x="97.9482%" y="453" width="0.0211%" height="15" fill="rgb(248,18,21)" fg:x="64970" fg:w="14"/><text x="98.1982%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (48 samples, 0.07%)</title><rect x="97.9225%" y="485" width="0.0724%" height="15" fill="rgb(245,180,19)" fg:x="64953" fg:w="48"/><text x="98.1725%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.03%)</title><rect x="97.9693%" y="469" width="0.0256%" height="15" fill="rgb(252,118,36)" fg:x="64984" fg:w="17"/><text x="98.2193%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.01%)</title><rect x="97.9813%" y="453" width="0.0136%" height="15" fill="rgb(210,224,19)" fg:x="64992" fg:w="9"/><text x="98.2313%" y="463.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (52 samples, 0.08%)</title><rect x="97.9180%" y="517" width="0.0784%" height="15" fill="rgb(218,30,24)" fg:x="64950" fg:w="52"/><text x="98.1680%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (52 samples, 0.08%)</title><rect x="97.9180%" y="501" width="0.0784%" height="15" fill="rgb(219,75,50)" fg:x="64950" fg:w="52"/><text x="98.1680%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_small (9 samples, 0.01%)</title><rect x="98.0085%" y="517" width="0.0136%" height="15" fill="rgb(234,72,50)" fg:x="65010" fg:w="9"/><text x="98.2585%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.02%)</title><rect x="98.0220%" y="517" width="0.0166%" height="15" fill="rgb(219,100,48)" fg:x="65019" fg:w="11"/><text x="98.2720%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="98.0281%" y="501" width="0.0106%" height="15" fill="rgb(253,5,41)" fg:x="65023" fg:w="7"/><text x="98.2781%" y="511.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__grow_by_and_replace (106 samples, 0.16%)</title><rect x="97.9090%" y="533" width="0.1598%" height="15" fill="rgb(247,181,11)" fg:x="64944" fg:w="106"/><text x="98.1590%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.02%)</title><rect x="98.0462%" y="517" width="0.0226%" height="15" fill="rgb(222,223,25)" fg:x="65035" fg:w="15"/><text x="98.2962%" y="527.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (137 samples, 0.21%)</title><rect x="97.8879%" y="549" width="0.2065%" height="15" fill="rgb(214,198,28)" fg:x="64930" fg:w="137"/><text x="98.1379%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.02%)</title><rect x="98.0718%" y="533" width="0.0226%" height="15" fill="rgb(230,46,43)" fg:x="65052" fg:w="15"/><text x="98.3218%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBuilder::Add (173 samples, 0.26%)</title><rect x="97.8381%" y="565" width="0.2608%" height="15" fill="rgb(233,65,53)" fg:x="64897" fg:w="173"/><text x="98.0881%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::FlushBlockBySizePolicy::Update (9 samples, 0.01%)</title><rect x="98.1050%" y="565" width="0.0136%" height="15" fill="rgb(221,121,27)" fg:x="65074" fg:w="9"/><text x="98.3550%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::NotifyCollectTableCollectorsOnAdd(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long long, std::__1::vector&lt;std::__1::unique_ptr&lt;rocksdb::IntTblPropCollector, std::__1::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::__1::allocator&lt;std::__1::unique_ptr&lt;rocksdb::IntTblPropCollector, std::__1::default_delete (8 samples, 0.01%)</title><rect x="98.1261%" y="565" width="0.0121%" height="15" fill="rgb(247,70,47)" fg:x="65088" fg:w="8"/><text x="98.3761%" y="575.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (9 samples, 0.01%)</title><rect x="98.1698%" y="533" width="0.0136%" height="15" fill="rgb(228,85,35)" fg:x="65117" fg:w="9"/><text x="98.4198%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBuilder::Add (21 samples, 0.03%)</title><rect x="98.1547%" y="549" width="0.0317%" height="15" fill="rgb(209,50,18)" fg:x="65107" fg:w="21"/><text x="98.4047%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::IndexValue::EncodeTo(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (8 samples, 0.01%)</title><rect x="98.1864%" y="549" width="0.0121%" height="15" fill="rgb(250,19,35)" fg:x="65128" fg:w="8"/><text x="98.4364%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::ShortenedIndexBuilder::AddIndexEntry(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (48 samples, 0.07%)</title><rect x="98.1381%" y="565" width="0.0724%" height="15" fill="rgb(253,107,29)" fg:x="65096" fg:w="48"/><text x="98.3881%" y="575.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external (8 samples, 0.01%)</title><rect x="98.2150%" y="565" width="0.0121%" height="15" fill="rgb(252,179,29)" fg:x="65147" fg:w="8"/><text x="98.4650%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::Add (562 samples, 0.85%)</title><rect x="97.3828%" y="581" width="0.8473%" height="15" fill="rgb(238,194,6)" fg:x="64595" fg:w="562"/><text x="97.6328%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (10 samples, 0.02%)</title><rect x="98.3055%" y="549" width="0.0151%" height="15" fill="rgb(238,164,29)" fg:x="65207" fg:w="10"/><text x="98.5555%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.01%)</title><rect x="98.3085%" y="533" width="0.0121%" height="15" fill="rgb(224,25,9)" fg:x="65209" fg:w="8"/><text x="98.5585%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::NextFromInput (58 samples, 0.09%)</title><rect x="98.2587%" y="565" width="0.0874%" height="15" fill="rgb(244,153,23)" fg:x="65176" fg:w="58"/><text x="98.5087%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::PrepareOutput (15 samples, 0.02%)</title><rect x="98.3462%" y="565" width="0.0226%" height="15" fill="rgb(212,203,14)" fg:x="65234" fg:w="15"/><text x="98.5962%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::RealCompaction::allow_ingest_behind (9 samples, 0.01%)</title><rect x="98.3688%" y="565" width="0.0136%" height="15" fill="rgb(220,164,20)" fg:x="65249" fg:w="9"/><text x="98.6188%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::RegisterCleanup(void (*) (10 samples, 0.02%)</title><rect x="98.4834%" y="453" width="0.0151%" height="15" fill="rgb(222,203,48)" fg:x="65325" fg:w="10"/><text x="98.7334%" y="463.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (10 samples, 0.02%)</title><rect x="98.4834%" y="437" width="0.0151%" height="15" fill="rgb(215,159,22)" fg:x="65325" fg:w="10"/><text x="98.7334%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.02%)</title><rect x="98.4834%" y="421" width="0.0151%" height="15" fill="rgb(216,183,47)" fg:x="65325" fg:w="10"/><text x="98.7334%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.02%)</title><rect x="98.4834%" y="405" width="0.0151%" height="15" fill="rgb(229,195,25)" fg:x="65325" fg:w="10"/><text x="98.7334%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 0.01%)</title><rect x="98.4849%" y="389" width="0.0136%" height="15" fill="rgb(224,132,51)" fg:x="65326" fg:w="9"/><text x="98.7349%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.01%)</title><rect x="98.5271%" y="405" width="0.0121%" height="15" fill="rgb(240,63,7)" fg:x="65354" fg:w="8"/><text x="98.7771%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="98.5271%" y="389" width="0.0121%" height="15" fill="rgb(249,182,41)" fg:x="65354" fg:w="8"/><text x="98.7771%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.01%)</title><rect x="98.5286%" y="373" width="0.0106%" height="15" fill="rgb(243,47,26)" fg:x="65355" fg:w="7"/><text x="98.7786%" y="383.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (10 samples, 0.02%)</title><rect x="98.5256%" y="421" width="0.0151%" height="15" fill="rgb(233,48,2)" fg:x="65353" fg:w="10"/><text x="98.7756%" y="431.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*) (23 samples, 0.03%)</title><rect x="98.5120%" y="437" width="0.0347%" height="15" fill="rgb(244,165,34)" fg:x="65344" fg:w="23"/><text x="98.7620%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*) (32 samples, 0.05%)</title><rect x="98.4999%" y="453" width="0.0482%" height="15" fill="rgb(207,89,7)" fg:x="65336" fg:w="32"/><text x="98.7499%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::VerifyBlockChecksum(rocksdb::ChecksumType, char const*, unsigned long, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (37 samples, 0.06%)</title><rect x="98.6085%" y="389" width="0.0558%" height="15" fill="rgb(244,117,36)" fg:x="65408" fg:w="37"/><text x="98.8585%" y="399.50"></text></g><g><title>httpmq-rs`rocksdb::crc32c::Extend (34 samples, 0.05%)</title><rect x="98.6130%" y="373" width="0.0513%" height="15" fill="rgb(226,144,34)" fg:x="65411" fg:w="34"/><text x="98.8630%" y="383.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::CheckBlockChecksum (44 samples, 0.07%)</title><rect x="98.6010%" y="405" width="0.0663%" height="15" fill="rgb(213,23,19)" fg:x="65403" fg:w="44"/><text x="98.8510%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long long, unsigned long, rocksdb::Slice*, char*, std::__1::unique_ptr&lt;char [], std::__1::default_delete (185 samples, 0.28%)</title><rect x="98.6854%" y="405" width="0.2789%" height="15" fill="rgb(217,75,12)" fg:x="65459" fg:w="185"/><text x="98.9354%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`pread (168 samples, 0.25%)</title><rect x="98.7110%" y="389" width="0.2533%" height="15" fill="rgb(224,159,17)" fg:x="65476" fg:w="168"/><text x="98.9610%" y="399.50"></text></g><g><title>httpmq-rs`snappy::RawUncompress (68 samples, 0.10%)</title><rect x="98.9763%" y="341" width="0.1025%" height="15" fill="rgb(217,118,1)" fg:x="65652" fg:w="68"/><text x="99.2263%" y="351.50"></text></g><g><title>httpmq-rs`snappy::RawUncompress (68 samples, 0.10%)</title><rect x="98.9763%" y="325" width="0.1025%" height="15" fill="rgb(232,180,48)" fg:x="65652" fg:w="68"/><text x="99.2263%" y="335.50"></text></g><g><title>httpmq-rs`void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt; (67 samples, 0.10%)</title><rect x="98.9779%" y="309" width="0.1010%" height="15" fill="rgb(230,27,33)" fg:x="65653" fg:w="67"/><text x="99.2279%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="99.0789%" y="325" width="0.0136%" height="15" fill="rgb(205,31,21)" fg:x="65720" fg:w="9"/><text x="99.3289%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.01%)</title><rect x="99.0819%" y="309" width="0.0106%" height="15" fill="rgb(253,59,4)" fg:x="65722" fg:w="7"/><text x="99.3319%" y="319.50"></text></g><g><title>httpmq-rs`rocksdb::Snappy_Uncompress (79 samples, 0.12%)</title><rect x="98.9763%" y="357" width="0.1191%" height="15" fill="rgb(224,201,9)" fg:x="65652" fg:w="79"/><text x="99.2263%" y="367.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (11 samples, 0.02%)</title><rect x="99.0789%" y="341" width="0.0166%" height="15" fill="rgb(229,206,30)" fg:x="65720" fg:w="11"/><text x="99.3289%" y="351.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressBlockContents (88 samples, 0.13%)</title><rect x="98.9643%" y="405" width="0.1327%" height="15" fill="rgb(212,67,47)" fg:x="65644" fg:w="88"/><text x="99.2143%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressBlockContentsForCompressionType (88 samples, 0.13%)</title><rect x="98.9643%" y="389" width="0.1327%" height="15" fill="rgb(211,96,50)" fg:x="65644" fg:w="88"/><text x="99.2143%" y="399.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressData (80 samples, 0.12%)</title><rect x="98.9763%" y="373" width="0.1206%" height="15" fill="rgb(252,114,18)" fg:x="65652" fg:w="80"/><text x="99.2263%" y="383.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::ReadBlockContents (349 samples, 0.53%)</title><rect x="98.5798%" y="421" width="0.5261%" height="15" fill="rgb(223,58,37)" fg:x="65389" fg:w="349"/><text x="98.8298%" y="431.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (14 samples, 0.02%)</title><rect x="99.1135%" y="421" width="0.0211%" height="15" fill="rgb(237,70,4)" fg:x="65743" fg:w="14"/><text x="99.3635%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.02%)</title><rect x="99.1135%" y="405" width="0.0211%" height="15" fill="rgb(244,85,46)" fg:x="65743" fg:w="14"/><text x="99.3635%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (14 samples, 0.02%)</title><rect x="99.1135%" y="389" width="0.0211%" height="15" fill="rgb(223,39,52)" fg:x="65743" fg:w="14"/><text x="99.3635%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 0.02%)</title><rect x="99.1150%" y="373" width="0.0196%" height="15" fill="rgb(218,200,14)" fg:x="65744" fg:w="13"/><text x="99.3650%" y="383.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile&lt;rocksdb::Block&gt;(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&amp;, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, std::__1::unique_ptr&lt;rocksdb::Block, std::__1::default_delete (384 samples, 0.58%)</title><rect x="98.5572%" y="437" width="0.5789%" height="15" fill="rgb(208,171,16)" fg:x="65374" fg:w="384"/><text x="98.8072%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (418 samples, 0.63%)</title><rect x="98.5482%" y="453" width="0.6302%" height="15" fill="rgb(234,200,18)" fg:x="65368" fg:w="418"/><text x="98.7982%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (28 samples, 0.04%)</title><rect x="99.1362%" y="437" width="0.0422%" height="15" fill="rgb(228,45,11)" fg:x="65758" fg:w="28"/><text x="99.3862%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry (19 samples, 0.03%)</title><rect x="99.1497%" y="421" width="0.0286%" height="15" fill="rgb(237,182,11)" fg:x="65767" fg:w="19"/><text x="99.3997%" y="431.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (488 samples, 0.74%)</title><rect x="98.4502%" y="469" width="0.7357%" height="15" fill="rgb(241,175,49)" fg:x="65303" fg:w="488"/><text x="98.7002%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::InitDataBlock (495 samples, 0.75%)</title><rect x="98.4427%" y="485" width="0.7463%" height="15" fill="rgb(247,38,35)" fg:x="65298" fg:w="495"/><text x="98.6927%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::SeekToFirst (10 samples, 0.02%)</title><rect x="99.1995%" y="485" width="0.0151%" height="15" fill="rgb(228,39,49)" fg:x="65800" fg:w="10"/><text x="99.4495%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::CachableEntry&lt;rocksdb::Block&gt;::DeleteValue (8 samples, 0.01%)</title><rect x="99.2161%" y="469" width="0.0121%" height="15" fill="rgb(226,101,26)" fg:x="65811" fg:w="8"/><text x="99.4661%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Release (22 samples, 0.03%)</title><rect x="99.2326%" y="469" width="0.0332%" height="15" fill="rgb(206,141,19)" fg:x="65822" fg:w="22"/><text x="99.4826%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::Invalidate (59 samples, 0.09%)</title><rect x="99.2161%" y="485" width="0.0889%" height="15" fill="rgb(211,200,13)" fg:x="65811" fg:w="59"/><text x="99.4661%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.03%)</title><rect x="99.2794%" y="469" width="0.0256%" height="15" fill="rgb(241,121,6)" fg:x="65853" fg:w="17"/><text x="99.5294%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.02%)</title><rect x="99.2884%" y="453" width="0.0166%" height="15" fill="rgb(234,221,29)" fg:x="65859" fg:w="11"/><text x="99.5384%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::FindBlockForward (583 samples, 0.88%)</title><rect x="98.4336%" y="501" width="0.8789%" height="15" fill="rgb(229,136,5)" fg:x="65292" fg:w="583"/><text x="98.6836%" y="511.50"></text></g><g><title>httpmq-rs`bool rocksdb::DataBlockIter::ParseNextDataKey&lt;rocksdb::DecodeEntry&gt; (10 samples, 0.02%)</title><rect x="99.3171%" y="485" width="0.0151%" height="15" fill="rgb(238,36,11)" fg:x="65878" fg:w="10"/><text x="99.5671%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Next (15 samples, 0.02%)</title><rect x="99.3125%" y="501" width="0.0226%" height="15" fill="rgb(251,55,41)" fg:x="65875" fg:w="15"/><text x="99.5625%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::NextAndGetResult (611 samples, 0.92%)</title><rect x="98.4185%" y="533" width="0.9211%" height="15" fill="rgb(242,34,40)" fg:x="65282" fg:w="611"/><text x="98.6685%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::Next (606 samples, 0.91%)</title><rect x="98.4261%" y="517" width="0.9136%" height="15" fill="rgb(215,42,17)" fg:x="65287" fg:w="606"/><text x="98.6761%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::LevelIterator::NextAndGetResult (625 samples, 0.94%)</title><rect x="98.4004%" y="549" width="0.9422%" height="15" fill="rgb(207,44,46)" fg:x="65270" fg:w="625"/><text x="98.6504%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::BinaryHeap&lt;rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*, rocksdb::MinIteratorComparator&gt;::downheap (8 samples, 0.01%)</title><rect x="99.3427%" y="549" width="0.0121%" height="15" fill="rgb(211,206,28)" fg:x="65895" fg:w="8"/><text x="99.5927%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long long, unsigned long, rocksdb::Slice*, char*, std::__1::unique_ptr&lt;char [], std::__1::default_delete (21 samples, 0.03%)</title><rect x="99.3804%" y="421" width="0.0317%" height="15" fill="rgb(237,167,16)" fg:x="65920" fg:w="21"/><text x="99.6304%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`pread (18 samples, 0.03%)</title><rect x="99.3849%" y="405" width="0.0271%" height="15" fill="rgb(233,66,6)" fg:x="65923" fg:w="18"/><text x="99.6349%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::ReadBlockContents (34 samples, 0.05%)</title><rect x="99.3759%" y="437" width="0.0513%" height="15" fill="rgb(246,123,29)" fg:x="65917" fg:w="34"/><text x="99.6259%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressBlockContents (10 samples, 0.02%)</title><rect x="99.4120%" y="421" width="0.0151%" height="15" fill="rgb(209,62,40)" fg:x="65941" fg:w="10"/><text x="99.6620%" y="431.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressBlockContentsForCompressionType (10 samples, 0.02%)</title><rect x="99.4120%" y="405" width="0.0151%" height="15" fill="rgb(218,4,25)" fg:x="65941" fg:w="10"/><text x="99.6620%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressData (10 samples, 0.02%)</title><rect x="99.4120%" y="389" width="0.0151%" height="15" fill="rgb(253,91,49)" fg:x="65941" fg:w="10"/><text x="99.6620%" y="399.50"></text></g><g><title>httpmq-rs`rocksdb::Snappy_Uncompress (10 samples, 0.02%)</title><rect x="99.4120%" y="373" width="0.0151%" height="15" fill="rgb(228,155,29)" fg:x="65941" fg:w="10"/><text x="99.6620%" y="383.50"></text></g><g><title>httpmq-rs`snappy::RawUncompress (10 samples, 0.02%)</title><rect x="99.4120%" y="357" width="0.0151%" height="15" fill="rgb(243,57,37)" fg:x="65941" fg:w="10"/><text x="99.6620%" y="367.50"></text></g><g><title>httpmq-rs`snappy::RawUncompress (10 samples, 0.02%)</title><rect x="99.4120%" y="341" width="0.0151%" height="15" fill="rgb(244,167,17)" fg:x="65941" fg:w="10"/><text x="99.6620%" y="351.50"></text></g><g><title>httpmq-rs`void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt; (9 samples, 0.01%)</title><rect x="99.4135%" y="325" width="0.0136%" height="15" fill="rgb(207,181,38)" fg:x="65942" fg:w="9"/><text x="99.6635%" y="335.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile&lt;rocksdb::Block&gt;(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&amp;, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, std::__1::unique_ptr&lt;rocksdb::Block, std::__1::default_delete (39 samples, 0.06%)</title><rect x="99.3713%" y="453" width="0.0588%" height="15" fill="rgb(211,8,23)" fg:x="65914" fg:w="39"/><text x="99.6213%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::InitDataBlock (50 samples, 0.08%)</title><rect x="99.3593%" y="501" width="0.0754%" height="15" fill="rgb(235,11,44)" fg:x="65906" fg:w="50"/><text x="99.6093%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (48 samples, 0.07%)</title><rect x="99.3623%" y="485" width="0.0724%" height="15" fill="rgb(248,18,52)" fg:x="65908" fg:w="48"/><text x="99.6123%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (43 samples, 0.06%)</title><rect x="99.3698%" y="469" width="0.0648%" height="15" fill="rgb(208,4,7)" fg:x="65913" fg:w="43"/><text x="99.6198%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::FindBlockForward (58 samples, 0.09%)</title><rect x="99.3593%" y="517" width="0.0874%" height="15" fill="rgb(240,17,39)" fg:x="65906" fg:w="58"/><text x="99.6093%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::Invalidate (7 samples, 0.01%)</title><rect x="99.4362%" y="501" width="0.0106%" height="15" fill="rgb(207,170,3)" fg:x="65957" fg:w="7"/><text x="99.6862%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::MergingIterator::Next (705 samples, 1.06%)</title><rect x="98.3899%" y="565" width="1.0629%" height="15" fill="rgb(236,100,52)" fg:x="65263" fg:w="705"/><text x="98.6399%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::NextAndGetResult (65 samples, 0.10%)</title><rect x="99.3548%" y="549" width="0.0980%" height="15" fill="rgb(246,78,51)" fg:x="65903" fg:w="65"/><text x="99.6048%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::Next (63 samples, 0.09%)</title><rect x="99.3578%" y="533" width="0.0950%" height="15" fill="rgb(211,17,15)" fg:x="65905" fg:w="63"/><text x="99.6078%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::Next (813 samples, 1.23%)</title><rect x="98.2316%" y="581" width="1.2257%" height="15" fill="rgb(209,59,46)" fg:x="65158" fg:w="813"/><text x="98.4816%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteBlock (8 samples, 0.01%)</title><rect x="99.4603%" y="533" width="0.0121%" height="15" fill="rgb(210,92,25)" fg:x="65973" fg:w="8"/><text x="99.7103%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::Finish (11 samples, 0.02%)</title><rect x="99.4603%" y="565" width="0.0166%" height="15" fill="rgb(238,174,52)" fg:x="65973" fg:w="11"/><text x="99.7103%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteIndexBlock (11 samples, 0.02%)</title><rect x="99.4603%" y="549" width="0.0166%" height="15" fill="rgb(230,73,7)" fg:x="65973" fg:w="11"/><text x="99.7103%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionJob::FinishCompactionOutputFile (13 samples, 0.02%)</title><rect x="99.4603%" y="581" width="0.0196%" height="15" fill="rgb(243,124,40)" fg:x="65973" fg:w="13"/><text x="99.7103%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionJob::SubcompactionState::ShouldStopBefore (10 samples, 0.02%)</title><rect x="99.4799%" y="581" width="0.0151%" height="15" fill="rgb(244,170,11)" fg:x="65986" fg:w="10"/><text x="99.7299%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::FileMetaData::UpdateBoundaries (14 samples, 0.02%)</title><rect x="99.4950%" y="581" width="0.0211%" height="15" fill="rgb(207,114,54)" fg:x="65996" fg:w="14"/><text x="99.7450%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (9 samples, 0.01%)</title><rect x="99.5432%" y="565" width="0.0136%" height="15" fill="rgb(205,42,20)" fg:x="66028" fg:w="9"/><text x="99.7932%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::OutputValidator::Add (34 samples, 0.05%)</title><rect x="99.5281%" y="581" width="0.0513%" height="15" fill="rgb(230,30,28)" fg:x="66018" fg:w="34"/><text x="99.7781%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionJob::ProcessKeyValueCompaction (1,498 samples, 2.26%)</title><rect x="97.3421%" y="597" width="2.2584%" height="15" fill="rgb(205,73,54)" fg:x="64568" fg:w="1498"/><text x="97.5921%" y="607.50">h..</text></g><g><title>httpmq-rs`rocksdb::DBImpl::BackgroundCompaction (1,511 samples, 2.28%)</title><rect x="97.3376%" y="629" width="2.2780%" height="15" fill="rgb(254,227,23)" fg:x="64565" fg:w="1511"/><text x="97.5876%" y="639.50">h..</text></g><g><title>httpmq-rs`rocksdb::CompactionJob::Run (1,511 samples, 2.28%)</title><rect x="97.3376%" y="613" width="2.2780%" height="15" fill="rgb(228,202,34)" fg:x="64565" fg:w="1511"/><text x="97.5876%" y="623.50">h..</text></g><g><title>httpmq-rs`rocksdb::DBImpl::BGWorkCompaction (1,516 samples, 2.29%)</title><rect x="97.3376%" y="661" width="2.2855%" height="15" fill="rgb(222,225,37)" fg:x="64565" fg:w="1516"/><text x="97.5876%" y="671.50">h..</text></g><g><title>httpmq-rs`rocksdb::DBImpl::BackgroundCallCompaction (1,516 samples, 2.29%)</title><rect x="97.3376%" y="645" width="2.2855%" height="15" fill="rgb(221,14,54)" fg:x="64565" fg:w="1516"/><text x="97.5876%" y="655.50">h..</text></g><g><title>httpmq-rs`snappy::RawCompress (19 samples, 0.03%)</title><rect x="99.6306%" y="437" width="0.0286%" height="15" fill="rgb(254,102,2)" fg:x="66086" fg:w="19"/><text x="99.8806%" y="447.50"></text></g><g><title>httpmq-rs`snappy::Compress (19 samples, 0.03%)</title><rect x="99.6306%" y="421" width="0.0286%" height="15" fill="rgb(232,104,17)" fg:x="66086" fg:w="19"/><text x="99.8806%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="99.6487%" y="405" width="0.0106%" height="15" fill="rgb(250,220,14)" fg:x="66098" fg:w="7"/><text x="99.8987%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (22 samples, 0.03%)</title><rect x="99.6291%" y="469" width="0.0332%" height="15" fill="rgb(241,158,9)" fg:x="66085" fg:w="22"/><text x="99.8791%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::CompressData(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, unsigned int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (22 samples, 0.03%)</title><rect x="99.6291%" y="453" width="0.0332%" height="15" fill="rgb(246,9,43)" fg:x="66085" fg:w="22"/><text x="99.8791%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext const&amp;, rocksdb::UncompressionContext*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (23 samples, 0.03%)</title><rect x="99.6291%" y="485" width="0.0347%" height="15" fill="rgb(206,73,33)" fg:x="66085" fg:w="23"/><text x="99.8791%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Append (7 samples, 0.01%)</title><rect x="99.6638%" y="469" width="0.0106%" height="15" fill="rgb(222,79,8)" fg:x="66108" fg:w="7"/><text x="99.9138%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteBlock (33 samples, 0.05%)</title><rect x="99.6291%" y="501" width="0.0498%" height="15" fill="rgb(234,8,54)" fg:x="66085" fg:w="33"/><text x="99.8791%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteRawBlock (10 samples, 0.02%)</title><rect x="99.6638%" y="485" width="0.0151%" height="15" fill="rgb(209,134,38)" fg:x="66108" fg:w="10"/><text x="99.9138%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::Flush (37 samples, 0.06%)</title><rect x="99.6291%" y="533" width="0.0558%" height="15" fill="rgb(230,127,29)" fg:x="66085" fg:w="37"/><text x="99.8791%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteBlock (37 samples, 0.06%)</title><rect x="99.6291%" y="517" width="0.0558%" height="15" fill="rgb(242,44,41)" fg:x="66085" fg:w="37"/><text x="99.8791%" y="527.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__grow_by_and_replace (12 samples, 0.02%)</title><rect x="99.6909%" y="501" width="0.0181%" height="15" fill="rgb(222,56,43)" fg:x="66126" fg:w="12"/><text x="99.9409%" y="511.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (22 samples, 0.03%)</title><rect x="99.6864%" y="517" width="0.0332%" height="15" fill="rgb(238,39,47)" fg:x="66123" fg:w="22"/><text x="99.9364%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="99.7090%" y="501" width="0.0106%" height="15" fill="rgb(226,79,43)" fg:x="66138" fg:w="7"/><text x="99.9590%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBuilder::Add (24 samples, 0.04%)</title><rect x="99.6864%" y="533" width="0.0362%" height="15" fill="rgb(242,105,53)" fg:x="66123" fg:w="24"/><text x="99.9364%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::ShortenedIndexBuilder::AddIndexEntry(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (11 samples, 0.02%)</title><rect x="99.7226%" y="533" width="0.0166%" height="15" fill="rgb(251,132,46)" fg:x="66147" fg:w="11"/><text x="99.9726%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::Add (78 samples, 0.12%)</title><rect x="99.6246%" y="549" width="0.1176%" height="15" fill="rgb(231,77,14)" fg:x="66082" fg:w="78"/><text x="99.8746%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableIterator::Next (9 samples, 0.01%)</title><rect x="99.7844%" y="517" width="0.0136%" height="15" fill="rgb(240,135,9)" fg:x="66188" fg:w="9"/><text x="100.0344%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableIterator::key (58 samples, 0.09%)</title><rect x="99.7980%" y="517" width="0.0874%" height="15" fill="rgb(248,109,14)" fg:x="66197" fg:w="58"/><text x="100.0480%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableIterator::value (7 samples, 0.01%)</title><rect x="99.8854%" y="517" width="0.0106%" height="15" fill="rgb(227,146,52)" fg:x="66255" fg:w="7"/><text x="100.1354%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::NextFromInput (103 samples, 0.16%)</title><rect x="99.7512%" y="533" width="0.1553%" height="15" fill="rgb(232,54,3)" fg:x="66166" fg:w="103"/><text x="100.0012%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::Next (111 samples, 0.17%)</title><rect x="99.7452%" y="549" width="0.1673%" height="15" fill="rgb(229,201,43)" fg:x="66162" fg:w="111"/><text x="99.9952%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::BuildTable(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::TableCache*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, std::__1::vector&lt;std::__1::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt;, std::__1::allocator&lt;std::__1::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt; &gt; &gt;, rocksdb::FileMetaData*, std::__1::vector&lt;rocksdb::BlobFileAddition, std::__1::allocator&lt;rocksdb::BlobFileAddition&gt; &gt;*, rocksdb::InternalKeyComparator const&amp;, std::__1::vector&lt;std::__1::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::__1::default_delete&lt;rocksdb::IntTblPropCollectorFactory&gt; &gt;, std::__1::allocator&lt;std::__1::unique_ptr (202 samples, 0.30%)</title><rect x="99.6231%" y="565" width="0.3045%" height="15" fill="rgb(252,161,33)" fg:x="66081" fg:w="202"/><text x="99.8731%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::FlushJob::WriteLevel0Table (203 samples, 0.31%)</title><rect x="99.6231%" y="581" width="0.3060%" height="15" fill="rgb(226,146,40)" fg:x="66081" fg:w="203"/><text x="99.8731%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::BackgroundFlush (204 samples, 0.31%)</title><rect x="99.6231%" y="645" width="0.3075%" height="15" fill="rgb(219,47,25)" fg:x="66081" fg:w="204"/><text x="99.8731%" y="655.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector (204 samples, 0.31%)</title><rect x="99.6231%" y="629" width="0.3075%" height="15" fill="rgb(250,135,13)" fg:x="66081" fg:w="204"/><text x="99.8731%" y="639.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&amp;, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::__1::vector&lt;unsigned long long, std::__1::allocator (204 samples, 0.31%)</title><rect x="99.6231%" y="613" width="0.3075%" height="15" fill="rgb(219,229,18)" fg:x="66081" fg:w="204"/><text x="99.8731%" y="623.50"></text></g><g><title>httpmq-rs`rocksdb::FlushJob::Run (204 samples, 0.31%)</title><rect x="99.6231%" y="597" width="0.3075%" height="15" fill="rgb(217,152,27)" fg:x="66081" fg:w="204"/><text x="99.8731%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::PurgeObsoleteFiles (19 samples, 0.03%)</title><rect x="99.9307%" y="645" width="0.0286%" height="15" fill="rgb(225,71,47)" fg:x="66285" fg:w="19"/><text x="100.1807%" y="655.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (19 samples, 0.03%)</title><rect x="99.9307%" y="629" width="0.0286%" height="15" fill="rgb(220,139,14)" fg:x="66285" fg:w="19"/><text x="100.1807%" y="639.50"></text></g><g><title>httpmq-rs`rocksdb::DeleteDBFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (19 samples, 0.03%)</title><rect x="99.9307%" y="613" width="0.0286%" height="15" fill="rgb(247,54,32)" fg:x="66285" fg:w="19"/><text x="100.1807%" y="623.50"></text></g><g><title>httpmq-rs`rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (19 samples, 0.03%)</title><rect x="99.9307%" y="597" width="0.0286%" height="15" fill="rgb(252,131,39)" fg:x="66285" fg:w="19"/><text x="100.1807%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (19 samples, 0.03%)</title><rect x="99.9307%" y="581" width="0.0286%" height="15" fill="rgb(210,108,39)" fg:x="66285" fg:w="19"/><text x="100.1807%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::PosixFileSystem::DeleteFile(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (19 samples, 0.03%)</title><rect x="99.9307%" y="565" width="0.0286%" height="15" fill="rgb(205,23,29)" fg:x="66285" fg:w="19"/><text x="100.1807%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`__unlink (19 samples, 0.03%)</title><rect x="99.9307%" y="549" width="0.0286%" height="15" fill="rgb(246,139,46)" fg:x="66285" fg:w="19"/><text x="100.1807%" y="559.50"></text></g><g><title>httpmq-rs`void* std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, void (*)(void*), rocksdb::BGThreadMetadata*&gt; &gt; (1,765 samples, 2.66%)</title><rect x="97.3376%" y="709" width="2.6609%" height="15" fill="rgb(250,81,26)" fg:x="64565" fg:w="1765"/><text x="97.5876%" y="719.50">ht..</text></g><g><title>httpmq-rs`rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper (1,765 samples, 2.66%)</title><rect x="97.3376%" y="693" width="2.6609%" height="15" fill="rgb(214,104,7)" fg:x="64565" fg:w="1765"/><text x="97.5876%" y="703.50">ht..</text></g><g><title>httpmq-rs`rocksdb::ThreadPoolImpl::Impl::BGThread (1,765 samples, 2.66%)</title><rect x="97.3376%" y="677" width="2.6609%" height="15" fill="rgb(233,189,8)" fg:x="64565" fg:w="1765"/><text x="97.5876%" y="687.50">ht..</text></g><g><title>httpmq-rs`rocksdb::DBImpl::BackgroundCallFlush (249 samples, 0.38%)</title><rect x="99.6231%" y="661" width="0.3754%" height="15" fill="rgb(228,141,17)" fg:x="66081" fg:w="249"/><text x="99.8731%" y="671.50"></text></g><g><title>httpmq-rs`rocksdb::JobContext::Clean (26 samples, 0.04%)</title><rect x="99.9593%" y="645" width="0.0392%" height="15" fill="rgb(247,157,1)" fg:x="66304" fg:w="26"/><text x="100.2093%" y="655.50"></text></g><g><title>httpmq-rs`rocksdb::SuperVersionContext::Clean (26 samples, 0.04%)</title><rect x="99.9593%" y="629" width="0.0392%" height="15" fill="rgb(249,225,5)" fg:x="66304" fg:w="26"/><text x="100.2093%" y="639.50"></text></g><g><title>httpmq-rs`rocksdb::SuperVersion::~SuperVersion (26 samples, 0.04%)</title><rect x="99.9593%" y="613" width="0.0392%" height="15" fill="rgb(242,55,13)" fg:x="66304" fg:w="26"/><text x="100.2093%" y="623.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::~MemTable (26 samples, 0.04%)</title><rect x="99.9593%" y="597" width="0.0392%" height="15" fill="rgb(230,49,50)" fg:x="66304" fg:w="26"/><text x="100.2093%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::Arena::~Arena (26 samples, 0.04%)</title><rect x="99.9593%" y="581" width="0.0392%" height="15" fill="rgb(241,111,38)" fg:x="66304" fg:w="26"/><text x="100.2093%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (26 samples, 0.04%)</title><rect x="99.9593%" y="565" width="0.0392%" height="15" fill="rgb(252,155,4)" fg:x="66304" fg:w="26"/><text x="100.2093%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`madvise (26 samples, 0.04%)</title><rect x="99.9593%" y="549" width="0.0392%" height="15" fill="rgb(212,69,32)" fg:x="66304" fg:w="26"/><text x="100.2093%" y="559.50"></text></g><g><title>all (66,331 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(243,107,47)" fg:x="0" fg:w="66331"/><text x="0.2500%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (66,327 samples, 99.99%)</title><rect x="0.0060%" y="741" width="99.9940%" height="15" fill="rgb(247,130,12)" fg:x="4" fg:w="66327"/><text x="0.2560%" y="751.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (66,327 samples, 99.99%)</title><rect x="0.0060%" y="725" width="99.9940%" height="15" fill="rgb(233,74,16)" fg:x="4" fg:w="66327"/><text x="0.2560%" y="735.50">libsystem_pthread.dylib`_pthread_start</text></g></svg></svg>