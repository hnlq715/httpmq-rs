<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="822" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="805.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="805.00"> </text><svg id="frames" x="10" width="1180" total_samples="72168"><g><title>httpmq-rs`rocksdb::DBImpl::Recover(std::__1::vector&lt;rocksdb::ColumnFamilyDescriptor, std::__1::allocator (9 samples, 0.01%)</title><rect x="0.0028%" y="501" width="0.0125%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="9"/><text x="0.2528%" y="511.50"></text></g><g><title>httpmq-rs`httpmq_rs::service::State::new (12 samples, 0.02%)</title><rect x="0.0000%" y="581" width="0.0166%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="12"/><text x="0.2500%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::open_default (12 samples, 0.02%)</title><rect x="0.0000%" y="565" width="0.0166%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="12"/><text x="0.2500%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb_open (12 samples, 0.02%)</title><rect x="0.0000%" y="549" width="0.0166%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="12"/><text x="0.2500%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::DB::Open(rocksdb::Options const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (12 samples, 0.02%)</title><rect x="0.0000%" y="533" width="0.0166%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="12"/><text x="0.2500%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::Open(rocksdb::DBOptions const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyDescriptor, std::__1::allocator&lt;rocksdb::ColumnFamilyDescriptor&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator (12 samples, 0.02%)</title><rect x="0.0000%" y="517" width="0.0166%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="12"/><text x="0.2500%" y="527.50"></text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.02%)</title><rect x="0.0000%" y="597" width="0.0180%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="13"/><text x="0.2500%" y="607.50"></text></g><g><title>httpmq-rs`tokio::runtime::Runtime::block_on (14 samples, 0.02%)</title><rect x="0.0000%" y="645" width="0.0194%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="14"/><text x="0.2500%" y="655.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::ThreadPool::block_on (14 samples, 0.02%)</title><rect x="0.0000%" y="629" width="0.0194%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="14"/><text x="0.2500%" y="639.50"></text></g><g><title>httpmq-rs`tokio::park::thread::CachedParkThread::block_on (14 samples, 0.02%)</title><rect x="0.0000%" y="613" width="0.0194%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="14"/><text x="0.2500%" y="623.50"></text></g><g><title>0x1 (15 samples, 0.02%)</title><rect x="0.0000%" y="757" width="0.0208%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="15"/><text x="0.2500%" y="767.50"></text></g><g><title>libdyld.dylib`start (15 samples, 0.02%)</title><rect x="0.0000%" y="741" width="0.0208%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="15"/><text x="0.2500%" y="751.50"></text></g><g><title>httpmq-rs`main (15 samples, 0.02%)</title><rect x="0.0000%" y="725" width="0.0208%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="15"/><text x="0.2500%" y="735.50"></text></g><g><title>httpmq-rs`std::rt::lang_start_internal (15 samples, 0.02%)</title><rect x="0.0000%" y="709" width="0.0208%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="15"/><text x="0.2500%" y="719.50"></text></g><g><title>httpmq-rs`std::rt::lang_start::_{{closure}} (15 samples, 0.02%)</title><rect x="0.0000%" y="693" width="0.0208%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="15"/><text x="0.2500%" y="703.50"></text></g><g><title>httpmq-rs`std::sys_common::backtrace::__rust_begin_short_backtrace (15 samples, 0.02%)</title><rect x="0.0000%" y="677" width="0.0208%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="15"/><text x="0.2500%" y="687.50"></text></g><g><title>httpmq-rs`httpmq_rs::main (15 samples, 0.02%)</title><rect x="0.0000%" y="661" width="0.0208%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="15"/><text x="0.2500%" y="671.50"></text></g><g><title>httpmq-rs`tokio::runtime::queue::Steal&lt;T&gt;::steal_into (13 samples, 0.02%)</title><rect x="0.0222%" y="597" width="0.0180%" height="15" fill="rgb(210,31,41)" fg:x="16" fg:w="13"/><text x="0.2722%" y="607.50"></text></g><g><title>httpmq-rs`&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (15 samples, 0.02%)</title><rect x="0.6762%" y="581" width="0.0208%" height="15" fill="rgb(221,200,47)" fg:x="488" fg:w="15"/><text x="0.9262%" y="591.50"></text></g><g><title>httpmq-rs`parking_lot::condvar::Condvar::notify_one_slow (12 samples, 0.02%)</title><rect x="0.6970%" y="581" width="0.0166%" height="15" fill="rgb(226,26,5)" fg:x="503" fg:w="12"/><text x="0.9470%" y="591.50"></text></g><g><title>httpmq-rs`std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.02%)</title><rect x="0.7164%" y="581" width="0.0180%" height="15" fill="rgb(249,33,26)" fg:x="517" fg:w="13"/><text x="0.9664%" y="591.50"></text></g><g><title>httpmq-rs`tokio::runtime::queue::Steal&lt;T&gt;::steal_into (187 samples, 0.26%)</title><rect x="0.7344%" y="581" width="0.2591%" height="15" fill="rgb(235,183,28)" fg:x="530" fg:w="187"/><text x="0.9844%" y="591.50"></text></g><g><title>httpmq-rs`tokio::io::driver::Driver::turn (20 samples, 0.03%)</title><rect x="1.6406%" y="533" width="0.0277%" height="15" fill="rgb(221,5,38)" fg:x="1184" fg:w="20"/><text x="1.8906%" y="543.50"></text></g><g><title>httpmq-rs`tokio::signal::unix::driver::Driver::process (15 samples, 0.02%)</title><rect x="1.6711%" y="533" width="0.0208%" height="15" fill="rgb(247,18,42)" fg:x="1206" fg:w="15"/><text x="1.9211%" y="543.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (17 samples, 0.02%)</title><rect x="1.7972%" y="517" width="0.0236%" height="15" fill="rgb(241,131,45)" fg:x="1297" fg:w="17"/><text x="2.0472%" y="527.50"></text></g><g><title> 32]&gt; (17 samples, 0.02%)</title><rect x="1.7972%" y="501" width="0.0236%" height="15" fill="rgb(249,31,29)" fg:x="1297" fg:w="17"/><text x="2.0472%" y="511.50"></text></g><g><title>httpmq-rs`mio::event::event::Event::token (16 samples, 0.02%)</title><rect x="1.8235%" y="517" width="0.0222%" height="15" fill="rgb(225,111,53)" fg:x="1316" fg:w="16"/><text x="2.0735%" y="527.50"></text></g><g><title>httpmq-rs`mio::poll::Poll::poll (8 samples, 0.01%)</title><rect x="1.8554%" y="517" width="0.0111%" height="15" fill="rgb(238,160,17)" fg:x="1339" fg:w="8"/><text x="2.1054%" y="527.50"></text></g><g><title>httpmq-rs`std::time::Instant::checked_duration_since (30 samples, 0.04%)</title><rect x="1.8679%" y="517" width="0.0416%" height="15" fill="rgb(214,148,48)" fg:x="1348" fg:w="30"/><text x="2.1179%" y="527.50"></text></g><g><title>httpmq-rs`mio::event::event::Event::token (8 samples, 0.01%)</title><rect x="2.1381%" y="501" width="0.0111%" height="15" fill="rgb(232,36,49)" fg:x="1543" fg:w="8"/><text x="2.3881%" y="511.50"></text></g><g><title>httpmq-rs`mio::poll::Poll::poll (57 samples, 0.08%)</title><rect x="2.1505%" y="501" width="0.0790%" height="15" fill="rgb(209,103,24)" fg:x="1552" fg:w="57"/><text x="2.4005%" y="511.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_notified_by_val (10 samples, 0.01%)</title><rect x="2.2877%" y="485" width="0.0139%" height="15" fill="rgb(229,88,8)" fg:x="1651" fg:w="10"/><text x="2.5377%" y="495.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::ref_dec (11 samples, 0.02%)</title><rect x="2.3196%" y="469" width="0.0152%" height="15" fill="rgb(213,181,19)" fg:x="1674" fg:w="11"/><text x="2.5696%" y="479.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_notified_by_val (23 samples, 0.03%)</title><rect x="2.3348%" y="469" width="0.0319%" height="15" fill="rgb(254,191,54)" fg:x="1685" fg:w="23"/><text x="2.5848%" y="479.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (11 samples, 0.02%)</title><rect x="2.3944%" y="437" width="0.0152%" height="15" fill="rgb(241,83,37)" fg:x="1728" fg:w="11"/><text x="2.6444%" y="447.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Shared::schedule_local (8 samples, 0.01%)</title><rect x="2.4097%" y="437" width="0.0111%" height="15" fill="rgb(233,36,39)" fg:x="1739" fg:w="8"/><text x="2.6597%" y="447.50"></text></g><g><title>httpmq-rs`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (59 samples, 0.08%)</title><rect x="2.3667%" y="453" width="0.0818%" height="15" fill="rgb(226,3,54)" fg:x="1708" fg:w="59"/><text x="2.6167%" y="463.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (20 samples, 0.03%)</title><rect x="2.4207%" y="437" width="0.0277%" height="15" fill="rgb(245,192,40)" fg:x="1747" fg:w="20"/><text x="2.6707%" y="447.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::waker::wake_by_val (109 samples, 0.15%)</title><rect x="2.3016%" y="485" width="0.1510%" height="15" fill="rgb(238,167,29)" fg:x="1661" fg:w="109"/><text x="2.5516%" y="495.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (62 samples, 0.09%)</title><rect x="2.3667%" y="469" width="0.0859%" height="15" fill="rgb(232,182,51)" fg:x="1708" fg:w="62"/><text x="2.6167%" y="479.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::wake0 (169 samples, 0.23%)</title><rect x="2.2295%" y="501" width="0.2342%" height="15" fill="rgb(231,60,39)" fg:x="1609" fg:w="169"/><text x="2.4795%" y="511.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::schedule (8 samples, 0.01%)</title><rect x="2.4526%" y="485" width="0.0111%" height="15" fill="rgb(208,69,12)" fg:x="1770" fg:w="8"/><text x="2.7026%" y="495.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::waker::wake_by_val (16 samples, 0.02%)</title><rect x="2.4637%" y="501" width="0.0222%" height="15" fill="rgb(235,93,37)" fg:x="1778" fg:w="16"/><text x="2.7137%" y="511.50"></text></g><g><title>httpmq-rs`tokio::io::driver::Driver::turn (2,409 samples, 3.34%)</title><rect x="1.9094%" y="517" width="3.3380%" height="15" fill="rgb(213,116,39)" fg:x="1378" fg:w="2409"/><text x="2.1594%" y="527.50">htt..</text></g><g><title>libsystem_kernel.dylib`kevent (1,993 samples, 2.76%)</title><rect x="2.4859%" y="501" width="2.7616%" height="15" fill="rgb(222,207,29)" fg:x="1794" fg:w="1993"/><text x="2.7359%" y="511.50">li..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (12 samples, 0.02%)</title><rect x="5.2475%" y="517" width="0.0166%" height="15" fill="rgb(206,96,30)" fg:x="3787" fg:w="12"/><text x="5.4975%" y="527.50"></text></g><g><title>httpmq-rs`tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (45 samples, 0.06%)</title><rect x="5.2655%" y="517" width="0.0624%" height="15" fill="rgb(218,138,4)" fg:x="3800" fg:w="45"/><text x="5.5155%" y="527.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (60 samples, 0.08%)</title><rect x="5.3417%" y="501" width="0.0831%" height="15" fill="rgb(250,191,14)" fg:x="3855" fg:w="60"/><text x="5.5917%" y="511.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (30 samples, 0.04%)</title><rect x="5.3833%" y="485" width="0.0416%" height="15" fill="rgb(239,60,40)" fg:x="3885" fg:w="30"/><text x="5.6333%" y="495.50"></text></g><g><title>httpmq-rs`tokio::signal::unix::driver::Driver::process (90 samples, 0.12%)</title><rect x="5.3278%" y="517" width="0.1247%" height="15" fill="rgb(206,27,48)" fg:x="3845" fg:w="90"/><text x="5.5778%" y="527.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (19 samples, 0.03%)</title><rect x="5.4262%" y="501" width="0.0263%" height="15" fill="rgb(225,35,8)" fg:x="3916" fg:w="19"/><text x="5.6762%" y="511.50"></text></g><g><title>httpmq-rs`tokio::signal::unix::driver::noop (9 samples, 0.01%)</title><rect x="5.4526%" y="517" width="0.0125%" height="15" fill="rgb(250,213,24)" fg:x="3935" fg:w="9"/><text x="5.7026%" y="527.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (59 samples, 0.08%)</title><rect x="5.5454%" y="501" width="0.0818%" height="15" fill="rgb(247,123,22)" fg:x="4002" fg:w="59"/><text x="5.7954%" y="511.50"></text></g><g><title> 32]&gt; (59 samples, 0.08%)</title><rect x="5.5454%" y="485" width="0.0818%" height="15" fill="rgb(231,138,38)" fg:x="4002" fg:w="59"/><text x="5.7954%" y="495.50"></text></g><g><title>httpmq-rs`tokio::time::driver::wheel::Wheel::next_expiration (48 samples, 0.07%)</title><rect x="5.6271%" y="501" width="0.0665%" height="15" fill="rgb(231,145,46)" fg:x="4061" fg:w="48"/><text x="5.8771%" y="511.50"></text></g><g><title>httpmq-rs`tokio::time::driver::wheel::level::Level::next_expiration (33 samples, 0.05%)</title><rect x="5.6479%" y="485" width="0.0457%" height="15" fill="rgb(251,118,11)" fg:x="4076" fg:w="33"/><text x="5.8979%" y="495.50"></text></g><g><title>httpmq-rs`tokio::time::driver::_&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (171 samples, 0.24%)</title><rect x="5.4650%" y="517" width="0.2369%" height="15" fill="rgb(217,147,25)" fg:x="3944" fg:w="171"/><text x="5.7150%" y="527.50"></text></g><g><title>httpmq-rs`tokio::time::driver::wheel::Wheel::next_expiration (33 samples, 0.05%)</title><rect x="5.7020%" y="517" width="0.0457%" height="15" fill="rgb(247,81,37)" fg:x="4115" fg:w="33"/><text x="5.9520%" y="527.50"></text></g><g><title>httpmq-rs`tokio::time::driver::wheel::level::Level::next_expiration (29 samples, 0.04%)</title><rect x="5.7075%" y="501" width="0.0402%" height="15" fill="rgb(209,12,38)" fg:x="4119" fg:w="29"/><text x="5.9575%" y="511.50"></text></g><g><title>httpmq-rs`tokio::time::driver::Driver&lt;P&gt;::park_internal (2,961 samples, 4.10%)</title><rect x="1.6919%" y="533" width="4.1029%" height="15" fill="rgb(227,1,9)" fg:x="1221" fg:w="2961"/><text x="1.9419%" y="543.50">http..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (32 samples, 0.04%)</title><rect x="5.7505%" y="517" width="0.0443%" height="15" fill="rgb(248,47,43)" fg:x="4150" fg:w="32"/><text x="6.0005%" y="527.50"></text></g><g><title>httpmq-rs`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (3,034 samples, 4.20%)</title><rect x="1.6087%" y="549" width="4.2041%" height="15" fill="rgb(221,10,30)" fg:x="1161" fg:w="3034"/><text x="1.8587%" y="559.50">httpm..</text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (13 samples, 0.02%)</title><rect x="5.7948%" y="533" width="0.0180%" height="15" fill="rgb(210,229,1)" fg:x="4182" fg:w="13"/><text x="6.0448%" y="543.50"></text></g><g><title>httpmq-rs`DYLD-STUB$$pthread_mutex_unlock (11 samples, 0.02%)</title><rect x="5.8128%" y="549" width="0.0152%" height="15" fill="rgb(222,148,37)" fg:x="4195" fg:w="11"/><text x="6.0628%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1,871 samples, 2.59%)</title><rect x="6.1149%" y="533" width="2.5926%" height="15" fill="rgb(234,67,33)" fg:x="4413" fg:w="1871"/><text x="6.3649%" y="543.50">li..</text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (55 samples, 0.08%)</title><rect x="8.8155%" y="501" width="0.0762%" height="15" fill="rgb(247,98,35)" fg:x="6362" fg:w="55"/><text x="9.0655%" y="511.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (59 samples, 0.08%)</title><rect x="8.8155%" y="517" width="0.0818%" height="15" fill="rgb(247,138,52)" fg:x="6362" fg:w="59"/><text x="9.0655%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (63 samples, 0.09%)</title><rect x="8.8973%" y="517" width="0.0873%" height="15" fill="rgb(213,79,30)" fg:x="6421" fg:w="63"/><text x="9.1473%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (225 samples, 0.31%)</title><rect x="8.7102%" y="533" width="0.3118%" height="15" fill="rgb(246,177,23)" fg:x="6286" fg:w="225"/><text x="8.9602%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (27 samples, 0.04%)</title><rect x="8.9846%" y="517" width="0.0374%" height="15" fill="rgb(230,62,27)" fg:x="6484" fg:w="27"/><text x="9.2346%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (13 samples, 0.02%)</title><rect x="9.0262%" y="533" width="0.0180%" height="15" fill="rgb(216,154,8)" fg:x="6514" fg:w="13"/><text x="9.2762%" y="543.50"></text></g><g><title>httpmq-rs`parking_lot::condvar::Condvar::wait_until_internal (2,340 samples, 3.24%)</title><rect x="5.8281%" y="549" width="3.2424%" height="15" fill="rgb(244,35,45)" fg:x="4206" fg:w="2340"/><text x="6.0781%" y="559.50">htt..</text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (19 samples, 0.03%)</title><rect x="9.0442%" y="533" width="0.0263%" height="15" fill="rgb(251,115,12)" fg:x="6527" fg:w="19"/><text x="9.2942%" y="543.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="9.0774%" y="549" width="0.0152%" height="15" fill="rgb(240,54,50)" fg:x="6551" fg:w="11"/><text x="9.3274%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_wait (10 samples, 0.01%)</title><rect x="9.1010%" y="549" width="0.0139%" height="15" fill="rgb(233,84,52)" fg:x="6568" fg:w="10"/><text x="9.3510%" y="559.50"></text></g><g><title>httpmq-rs`&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (5,764 samples, 7.99%)</title><rect x="1.1750%" y="565" width="7.9869%" height="15" fill="rgb(207,117,47)" fg:x="848" fg:w="5764"/><text x="1.4250%" y="575.50">httpmq-rs`&lt;..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (31 samples, 0.04%)</title><rect x="9.1190%" y="549" width="0.0430%" height="15" fill="rgb(249,43,39)" fg:x="6581" fg:w="31"/><text x="9.3690%" y="559.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::wake0 (8 samples, 0.01%)</title><rect x="9.1883%" y="501" width="0.0111%" height="15" fill="rgb(209,38,44)" fg:x="6631" fg:w="8"/><text x="9.4383%" y="511.50"></text></g><g><title>httpmq-rs`tokio::io::driver::Driver::turn (66 samples, 0.09%)</title><rect x="9.1744%" y="517" width="0.0915%" height="15" fill="rgb(236,212,23)" fg:x="6621" fg:w="66"/><text x="9.4244%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`kevent (48 samples, 0.07%)</title><rect x="9.1994%" y="501" width="0.0665%" height="15" fill="rgb(242,79,21)" fg:x="6639" fg:w="48"/><text x="9.4494%" y="511.50"></text></g><g><title>httpmq-rs`tokio::time::driver::Driver&lt;P&gt;::park_internal (88 samples, 0.12%)</title><rect x="9.1661%" y="533" width="0.1219%" height="15" fill="rgb(211,96,35)" fg:x="6615" fg:w="88"/><text x="9.4161%" y="543.50"></text></g><g><title>httpmq-rs`&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park_timeout (92 samples, 0.13%)</title><rect x="9.1620%" y="565" width="0.1275%" height="15" fill="rgb(253,215,40)" fg:x="6612" fg:w="92"/><text x="9.4120%" y="575.50"></text></g><g><title>httpmq-rs`&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park_timeout (90 samples, 0.12%)</title><rect x="9.1647%" y="549" width="0.1247%" height="15" fill="rgb(211,81,21)" fg:x="6614" fg:w="90"/><text x="9.4147%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (101 samples, 0.14%)</title><rect x="9.3033%" y="549" width="0.1400%" height="15" fill="rgb(208,190,38)" fg:x="6714" fg:w="101"/><text x="9.5533%" y="559.50"></text></g><g><title>httpmq-rs`parking_lot::condvar::Condvar::notify_one_slow (123 samples, 0.17%)</title><rect x="9.2950%" y="565" width="0.1704%" height="15" fill="rgb(235,213,38)" fg:x="6708" fg:w="123"/><text x="9.5450%" y="575.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Shared::notify_parked (12 samples, 0.02%)</title><rect x="9.4682%" y="565" width="0.0166%" height="15" fill="rgb(237,122,38)" fg:x="6833" fg:w="12"/><text x="9.7182%" y="575.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Context::park_timeout (6,133 samples, 8.50%)</title><rect x="0.9935%" y="581" width="8.4982%" height="15" fill="rgb(244,218,35)" fg:x="717" fg:w="6133"/><text x="1.2435%" y="591.50">httpmq-rs`to..</text></g><g><title>httpmq-rs`&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (24 samples, 0.03%)</title><rect x="9.5499%" y="565" width="0.0333%" height="15" fill="rgb(240,68,47)" fg:x="6892" fg:w="24"/><text x="9.7999%" y="575.50"></text></g><g><title>httpmq-rs`parking_lot_core::parking_lot::lock_bucket_pair (34 samples, 0.05%)</title><rect x="9.6248%" y="549" width="0.0471%" height="15" fill="rgb(210,16,53)" fg:x="6946" fg:w="34"/><text x="9.8748%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (975 samples, 1.35%)</title><rect x="9.6719%" y="549" width="1.3510%" height="15" fill="rgb(235,124,12)" fg:x="6980" fg:w="975"/><text x="9.9219%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (8 samples, 0.01%)</title><rect x="11.0229%" y="549" width="0.0111%" height="15" fill="rgb(224,169,11)" fg:x="7955" fg:w="8"/><text x="11.2729%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (9 samples, 0.01%)</title><rect x="11.0367%" y="549" width="0.0125%" height="15" fill="rgb(250,166,2)" fg:x="7965" fg:w="9"/><text x="11.2867%" y="559.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (50 samples, 0.07%)</title><rect x="11.0492%" y="549" width="0.0693%" height="15" fill="rgb(242,216,29)" fg:x="7974" fg:w="50"/><text x="11.2992%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (49 samples, 0.07%)</title><rect x="11.0506%" y="533" width="0.0679%" height="15" fill="rgb(230,116,27)" fg:x="7975" fg:w="49"/><text x="11.3006%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (30 samples, 0.04%)</title><rect x="11.1185%" y="549" width="0.0416%" height="15" fill="rgb(228,99,48)" fg:x="8024" fg:w="30"/><text x="11.3685%" y="559.50"></text></g><g><title>httpmq-rs`parking_lot::condvar::Condvar::notify_one_slow (1,150 samples, 1.59%)</title><rect x="9.5874%" y="565" width="1.5935%" height="15" fill="rgb(253,11,6)" fg:x="6919" fg:w="1150"/><text x="9.8374%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (10 samples, 0.01%)</title><rect x="11.1670%" y="549" width="0.0139%" height="15" fill="rgb(247,143,39)" fg:x="8059" fg:w="10"/><text x="11.4170%" y="559.50"></text></g><g><title>httpmq-rs`parking_lot_core::parking_lot::lock_bucket_pair (10 samples, 0.01%)</title><rect x="11.1836%" y="565" width="0.0139%" height="15" fill="rgb(236,97,10)" fg:x="8071" fg:w="10"/><text x="11.4336%" y="575.50"></text></g><g><title>httpmq-rs`&lt;hyper::server::conn::spawn_all::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (15 samples, 0.02%)</title><rect x="11.2806%" y="549" width="0.0208%" height="15" fill="rgb(233,208,19)" fg:x="8141" fg:w="15"/><text x="11.5306%" y="559.50"></text></g><g><title>httpmq-rs`&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (13 samples, 0.02%)</title><rect x="11.4968%" y="501" width="0.0180%" height="15" fill="rgb(216,164,2)" fg:x="8297" fg:w="13"/><text x="11.7468%" y="511.50"></text></g><g><title>httpmq-rs`&lt;http_body::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::is_end_stream (21 samples, 0.03%)</title><rect x="11.5148%" y="501" width="0.0291%" height="15" fill="rgb(220,129,5)" fg:x="8310" fg:w="21"/><text x="11.7648%" y="511.50"></text></g><g><title>httpmq-rs`&lt;http_body::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::poll_data (13 samples, 0.02%)</title><rect x="11.5439%" y="501" width="0.0180%" height="15" fill="rgb(242,17,10)" fg:x="8331" fg:w="13"/><text x="11.7939%" y="511.50"></text></g><g><title>httpmq-rs`&lt;http_body::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::size_hint (8 samples, 0.01%)</title><rect x="11.5619%" y="501" width="0.0111%" height="15" fill="rgb(242,107,0)" fg:x="8344" fg:w="8"/><text x="11.8119%" y="511.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (8 samples, 0.01%)</title><rect x="11.5730%" y="501" width="0.0111%" height="15" fill="rgb(251,28,31)" fg:x="8352" fg:w="8"/><text x="11.8230%" y="511.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (11 samples, 0.02%)</title><rect x="11.5841%" y="501" width="0.0152%" height="15" fill="rgb(233,223,10)" fg:x="8360" fg:w="11"/><text x="11.8341%" y="511.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (10 samples, 0.01%)</title><rect x="11.5993%" y="501" width="0.0139%" height="15" fill="rgb(215,21,27)" fg:x="8371" fg:w="10"/><text x="11.8493%" y="511.50"></text></g><g><title>httpmq-rs`__rdl_dealloc (10 samples, 0.01%)</title><rect x="11.6160%" y="501" width="0.0139%" height="15" fill="rgb(232,23,21)" fg:x="8383" fg:w="10"/><text x="11.8660%" y="511.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;http_body::combinators::map_err::MapErr&lt;http_body::full::Full&lt;bytes::bytes::Bytes&gt;,axum_core::error::Error::new&lt;core::convert::Infallible&gt;&gt;&gt; (13 samples, 0.02%)</title><rect x="11.6298%" y="501" width="0.0180%" height="15" fill="rgb(244,5,23)" fg:x="8393" fg:w="13"/><text x="11.8798%" y="511.50"></text></g><g><title>httpmq-rs`core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (9 samples, 0.01%)</title><rect x="11.6478%" y="501" width="0.0125%" height="15" fill="rgb(226,81,46)" fg:x="8406" fg:w="9"/><text x="11.8978%" y="511.50"></text></g><g><title>httpmq-rs`hyper::body::body::Body::new (8 samples, 0.01%)</title><rect x="11.6603%" y="501" width="0.0111%" height="15" fill="rgb(247,70,30)" fg:x="8415" fg:w="8"/><text x="11.9103%" y="511.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::Wants::contains (9 samples, 0.01%)</title><rect x="11.6714%" y="501" width="0.0125%" height="15" fill="rgb(212,68,19)" fg:x="8423" fg:w="9"/><text x="11.9214%" y="511.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (10 samples, 0.01%)</title><rect x="11.6866%" y="501" width="0.0139%" height="15" fill="rgb(240,187,13)" fg:x="8434" fg:w="10"/><text x="11.9366%" y="511.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (10 samples, 0.01%)</title><rect x="11.7060%" y="501" width="0.0139%" height="15" fill="rgb(223,113,26)" fg:x="8448" fg:w="10"/><text x="11.9560%" y="511.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.03%)</title><rect x="12.2520%" y="485" width="0.0263%" height="15" fill="rgb(206,192,2)" fg:x="8842" fg:w="19"/><text x="12.5020%" y="495.50"></text></g><g><title>httpmq-rs`&lt;axum::error_handling::HandleError&lt;S,F,()&gt; as tower_service::Service&lt;http::request::Request&lt;ReqBody&gt;&gt;&gt;::call (15 samples, 0.02%)</title><rect x="12.4099%" y="453" width="0.0208%" height="15" fill="rgb(241,108,4)" fg:x="8956" fg:w="15"/><text x="12.6599%" y="463.50"></text></g><g><title>httpmq-rs`&lt;axum::error_handling::future::HandleErrorFuture as core::future::future::Future&gt;::poll (13 samples, 0.02%)</title><rect x="12.4307%" y="453" width="0.0180%" height="15" fill="rgb(247,173,49)" fg:x="8971" fg:w="13"/><text x="12.6807%" y="463.50"></text></g><g><title>httpmq-rs`&lt;T as tower::util::boxed_clone::CloneService&lt;R&gt;&gt;::clone_box (9 samples, 0.01%)</title><rect x="12.4543%" y="437" width="0.0125%" height="15" fill="rgb(224,114,35)" fg:x="8988" fg:w="9"/><text x="12.7043%" y="447.50"></text></g><g><title>httpmq-rs`&lt;tokio_util::sync::poll_semaphore::PollSemaphore as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="12.5319%" y="421" width="0.0194%" height="15" fill="rgb(245,159,27)" fg:x="9044" fg:w="14"/><text x="12.7819%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (16 samples, 0.02%)</title><rect x="12.5624%" y="405" width="0.0222%" height="15" fill="rgb(245,172,44)" fg:x="9066" fg:w="16"/><text x="12.8124%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (9 samples, 0.01%)</title><rect x="12.7051%" y="325" width="0.0125%" height="15" fill="rgb(236,23,11)" fg:x="9169" fg:w="9"/><text x="12.9551%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_memalign (104 samples, 0.14%)</title><rect x="12.5901%" y="389" width="0.1441%" height="15" fill="rgb(205,117,38)" fg:x="9086" fg:w="104"/><text x="12.8401%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (88 samples, 0.12%)</title><rect x="12.6122%" y="373" width="0.1219%" height="15" fill="rgb(237,72,25)" fg:x="9102" fg:w="88"/><text x="12.8622%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (83 samples, 0.12%)</title><rect x="12.6192%" y="357" width="0.1150%" height="15" fill="rgb(244,70,9)" fg:x="9107" fg:w="83"/><text x="12.8692%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (45 samples, 0.06%)</title><rect x="12.6718%" y="341" width="0.0624%" height="15" fill="rgb(217,125,39)" fg:x="9145" fg:w="45"/><text x="12.9218%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (8 samples, 0.01%)</title><rect x="12.7231%" y="325" width="0.0111%" height="15" fill="rgb(235,36,10)" fg:x="9182" fg:w="8"/><text x="12.9731%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_memalign (24 samples, 0.03%)</title><rect x="12.7342%" y="389" width="0.0333%" height="15" fill="rgb(251,123,47)" fg:x="9190" fg:w="24"/><text x="12.9842%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.02%)</title><rect x="12.7674%" y="389" width="0.0166%" height="15" fill="rgb(221,13,13)" fg:x="9214" fg:w="12"/><text x="13.0174%" y="399.50"></text></g><g><title>httpmq-rs`__rdl_alloc (175 samples, 0.24%)</title><rect x="12.5527%" y="421" width="0.2425%" height="15" fill="rgb(238,131,9)" fg:x="9059" fg:w="175"/><text x="12.8027%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (152 samples, 0.21%)</title><rect x="12.5845%" y="405" width="0.2106%" height="15" fill="rgb(211,50,8)" fg:x="9082" fg:w="152"/><text x="12.8345%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_memalign (8 samples, 0.01%)</title><rect x="12.7841%" y="389" width="0.0111%" height="15" fill="rgb(245,182,24)" fg:x="9226" fg:w="8"/><text x="13.0341%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`posix_memalign (30 samples, 0.04%)</title><rect x="12.7951%" y="421" width="0.0416%" height="15" fill="rgb(242,14,37)" fg:x="9234" fg:w="30"/><text x="13.0451%" y="431.50"></text></g><g><title>httpmq-rs`&lt;axum::error_handling::HandleError&lt;S,F,()&gt; as tower_service::Service&lt;http::request::Request&lt;ReqBody&gt;&gt;&gt;::call (294 samples, 0.41%)</title><rect x="12.4667%" y="437" width="0.4074%" height="15" fill="rgb(246,228,12)" fg:x="8997" fg:w="294"/><text x="12.7167%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (27 samples, 0.04%)</title><rect x="12.8367%" y="421" width="0.0374%" height="15" fill="rgb(213,55,15)" fg:x="9264" fg:w="27"/><text x="13.0867%" y="431.50"></text></g><g><title>httpmq-rs`__rdl_alloc (10 samples, 0.01%)</title><rect x="12.8755%" y="437" width="0.0139%" height="15" fill="rgb(209,9,3)" fg:x="9292" fg:w="10"/><text x="13.1255%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (37 samples, 0.05%)</title><rect x="12.8921%" y="437" width="0.0513%" height="15" fill="rgb(230,59,30)" fg:x="9304" fg:w="37"/><text x="13.1421%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (30 samples, 0.04%)</title><rect x="12.9018%" y="421" width="0.0416%" height="15" fill="rgb(209,121,21)" fg:x="9311" fg:w="30"/><text x="13.1518%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (28 samples, 0.04%)</title><rect x="12.9046%" y="405" width="0.0388%" height="15" fill="rgb(220,109,13)" fg:x="9313" fg:w="28"/><text x="13.1546%" y="415.50"></text></g><g><title>httpmq-rs`&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (377 samples, 0.52%)</title><rect x="12.4487%" y="453" width="0.5224%" height="15" fill="rgb(232,18,1)" fg:x="8984" fg:w="377"/><text x="12.6987%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.02%)</title><rect x="12.9517%" y="437" width="0.0194%" height="15" fill="rgb(215,41,42)" fg:x="9347" fg:w="14"/><text x="13.2017%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (32 samples, 0.04%)</title><rect x="13.4242%" y="325" width="0.0443%" height="15" fill="rgb(224,123,36)" fg:x="9688" fg:w="32"/><text x="13.6742%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (74 samples, 0.10%)</title><rect x="13.3674%" y="373" width="0.1025%" height="15" fill="rgb(240,125,3)" fg:x="9647" fg:w="74"/><text x="13.6174%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (68 samples, 0.09%)</title><rect x="13.3757%" y="357" width="0.0942%" height="15" fill="rgb(205,98,50)" fg:x="9653" fg:w="68"/><text x="13.6257%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (67 samples, 0.09%)</title><rect x="13.3771%" y="341" width="0.0928%" height="15" fill="rgb(205,185,37)" fg:x="9654" fg:w="67"/><text x="13.6271%" y="351.50"></text></g><g><title>httpmq-rs`http::extensions::Extensions::insert (93 samples, 0.13%)</title><rect x="13.3425%" y="389" width="0.1289%" height="15" fill="rgb(238,207,15)" fg:x="9629" fg:w="93"/><text x="13.5925%" y="399.50"></text></g><g><title>httpmq-rs`std::time::Instant::now (9 samples, 0.01%)</title><rect x="13.4727%" y="389" width="0.0125%" height="15" fill="rgb(213,199,42)" fg:x="9723" fg:w="9"/><text x="13.7227%" y="399.50"></text></g><g><title>httpmq-rs`std::time::Instant::checked_add (30 samples, 0.04%)</title><rect x="13.5240%" y="373" width="0.0416%" height="15" fill="rgb(235,201,11)" fg:x="9760" fg:w="30"/><text x="13.7740%" y="383.50"></text></g><g><title>httpmq-rs`tokio::runtime::context::time_handle (46 samples, 0.06%)</title><rect x="13.5656%" y="373" width="0.0637%" height="15" fill="rgb(207,46,11)" fg:x="9790" fg:w="46"/><text x="13.8156%" y="383.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (14 samples, 0.02%)</title><rect x="13.6293%" y="373" width="0.0194%" height="15" fill="rgb(241,35,35)" fg:x="9836" fg:w="14"/><text x="13.8793%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (23 samples, 0.03%)</title><rect x="13.6487%" y="373" width="0.0319%" height="15" fill="rgb(243,32,47)" fg:x="9850" fg:w="23"/><text x="13.8987%" y="383.50"></text></g><g><title>httpmq-rs`tokio::time::driver::sleep::sleep (147 samples, 0.20%)</title><rect x="13.4852%" y="389" width="0.2037%" height="15" fill="rgb(247,202,23)" fg:x="9732" fg:w="147"/><text x="13.7352%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (12 samples, 0.02%)</title><rect x="13.6889%" y="389" width="0.0166%" height="15" fill="rgb(219,102,11)" fg:x="9879" fg:w="12"/><text x="13.9389%" y="399.50"></text></g><g><title>httpmq-rs`&lt;tower::timeout::Timeout&lt;S&gt; as tower_service::Service&lt;Request&gt;&gt;::call (324 samples, 0.45%)</title><rect x="13.3037%" y="405" width="0.4490%" height="15" fill="rgb(243,110,44)" fg:x="9601" fg:w="324"/><text x="13.5537%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (31 samples, 0.04%)</title><rect x="13.7097%" y="389" width="0.0430%" height="15" fill="rgb(222,74,54)" fg:x="9894" fg:w="31"/><text x="13.9597%" y="399.50"></text></g><g><title>httpmq-rs`&lt;axum::handler::future::IntoServiceFuture as core::future::future::Future&gt;::poll (19 samples, 0.03%)</title><rect x="13.8108%" y="389" width="0.0263%" height="15" fill="rgb(216,99,12)" fg:x="9967" fg:w="19"/><text x="14.0608%" y="399.50"></text></g><g><title>httpmq-rs`&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (8 samples, 0.01%)</title><rect x="13.8372%" y="389" width="0.0111%" height="15" fill="rgb(226,22,26)" fg:x="9986" fg:w="8"/><text x="14.0872%" y="399.50"></text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.02%)</title><rect x="13.9660%" y="357" width="0.0208%" height="15" fill="rgb(217,163,10)" fg:x="10079" fg:w="15"/><text x="14.2160%" y="367.50"></text></g><g><title>httpmq-rs`&lt;alloc::borrow::Cow&lt;str&gt; as axum_core::response::IntoResponse&gt;::into_response (13 samples, 0.02%)</title><rect x="14.0672%" y="341" width="0.0180%" height="15" fill="rgb(213,25,53)" fg:x="10152" fg:w="13"/><text x="14.3172%" y="351.50"></text></g><g><title>httpmq-rs`&lt;T as core::any::Any&gt;::type_id (12 samples, 0.02%)</title><rect x="14.3000%" y="325" width="0.0166%" height="15" fill="rgb(252,105,26)" fg:x="10320" fg:w="12"/><text x="14.5500%" y="335.50"></text></g><g><title>httpmq-rs`http::header::map::Danger::is_yellow (9 samples, 0.01%)</title><rect x="14.3845%" y="309" width="0.0125%" height="15" fill="rgb(220,39,43)" fg:x="10381" fg:w="9"/><text x="14.6345%" y="319.50"></text></g><g><title>httpmq-rs`http::header::map::hash_elem_using (9 samples, 0.01%)</title><rect x="14.6214%" y="293" width="0.0125%" height="15" fill="rgb(229,68,48)" fg:x="10552" fg:w="9"/><text x="14.8714%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (8 samples, 0.01%)</title><rect x="14.7378%" y="245" width="0.0111%" height="15" fill="rgb(252,8,32)" fg:x="10636" fg:w="8"/><text x="14.9878%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (12 samples, 0.02%)</title><rect x="14.7489%" y="245" width="0.0166%" height="15" fill="rgb(223,20,43)" fg:x="10644" fg:w="12"/><text x="14.9989%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (51 samples, 0.07%)</title><rect x="14.7655%" y="245" width="0.0707%" height="15" fill="rgb(229,81,49)" fg:x="10656" fg:w="51"/><text x="15.0155%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13 samples, 0.02%)</title><rect x="14.8182%" y="229" width="0.0180%" height="15" fill="rgb(236,28,36)" fg:x="10694" fg:w="13"/><text x="15.0682%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (135 samples, 0.19%)</title><rect x="14.6505%" y="261" width="0.1871%" height="15" fill="rgb(249,185,26)" fg:x="10573" fg:w="135"/><text x="14.9005%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (139 samples, 0.19%)</title><rect x="14.6464%" y="277" width="0.1926%" height="15" fill="rgb(249,174,33)" fg:x="10570" fg:w="139"/><text x="14.8964%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (150 samples, 0.21%)</title><rect x="14.6339%" y="293" width="0.2078%" height="15" fill="rgb(233,201,37)" fg:x="10561" fg:w="150"/><text x="14.8839%" y="303.50"></text></g><g><title>httpmq-rs`http::header::map::HeaderMap&lt;T&gt;::insert (344 samples, 0.48%)</title><rect x="14.3970%" y="309" width="0.4767%" height="15" fill="rgb(221,78,26)" fg:x="10390" fg:w="344"/><text x="14.6470%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.02%)</title><rect x="14.8501%" y="293" width="0.0236%" height="15" fill="rgb(250,127,30)" fg:x="10717" fg:w="17"/><text x="15.1001%" y="303.50"></text></g><g><title>httpmq-rs`http::header::map::hash_elem_using (14 samples, 0.02%)</title><rect x="14.8736%" y="309" width="0.0194%" height="15" fill="rgb(230,49,44)" fg:x="10734" fg:w="14"/><text x="15.1236%" y="319.50"></text></g><g><title>httpmq-rs`http::header::value::is_visible_ascii (16 samples, 0.02%)</title><rect x="14.8930%" y="309" width="0.0222%" height="15" fill="rgb(229,67,23)" fg:x="10748" fg:w="16"/><text x="15.1430%" y="319.50"></text></g><g><title>httpmq-rs`mime::Source::as_ref (16 samples, 0.02%)</title><rect x="14.9221%" y="309" width="0.0222%" height="15" fill="rgb(249,83,47)" fg:x="10769" fg:w="16"/><text x="15.1721%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (84 samples, 0.12%)</title><rect x="14.9443%" y="309" width="0.1164%" height="15" fill="rgb(215,43,3)" fg:x="10785" fg:w="84"/><text x="15.1943%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (75 samples, 0.10%)</title><rect x="14.9568%" y="293" width="0.1039%" height="15" fill="rgb(238,154,13)" fg:x="10794" fg:w="75"/><text x="15.2068%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (71 samples, 0.10%)</title><rect x="14.9623%" y="277" width="0.0984%" height="15" fill="rgb(219,56,2)" fg:x="10798" fg:w="71"/><text x="15.2123%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (23 samples, 0.03%)</title><rect x="15.0288%" y="261" width="0.0319%" height="15" fill="rgb(233,0,4)" fg:x="10846" fg:w="23"/><text x="15.2788%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.01%)</title><rect x="15.0648%" y="309" width="0.0111%" height="15" fill="rgb(235,30,7)" fg:x="10872" fg:w="8"/><text x="15.3148%" y="319.50"></text></g><g><title>httpmq-rs`&lt;alloc::borrow::Cow&lt;str&gt; as axum_core::response::IntoResponse&gt;::into_response (559 samples, 0.77%)</title><rect x="14.3166%" y="325" width="0.7746%" height="15" fill="rgb(250,79,13)" fg:x="10332" fg:w="559"/><text x="14.5666%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.01%)</title><rect x="15.0773%" y="309" width="0.0139%" height="15" fill="rgb(211,146,34)" fg:x="10881" fg:w="10"/><text x="15.3273%" y="319.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="15.0912%" y="325" width="0.0111%" height="15" fill="rgb(228,22,38)" fg:x="10891" fg:w="8"/><text x="15.3412%" y="335.50"></text></g><g><title>httpmq-rs`&lt;bytes::bytes::Bytes as core::convert::From&lt;alloc::string::String&gt;&gt;::from (15 samples, 0.02%)</title><rect x="15.1023%" y="325" width="0.0208%" height="15" fill="rgb(235,168,5)" fg:x="10899" fg:w="15"/><text x="15.3523%" y="335.50"></text></g><g><title>httpmq-rs`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (13 samples, 0.02%)</title><rect x="15.2575%" y="309" width="0.0180%" height="15" fill="rgb(221,155,16)" fg:x="11011" fg:w="13"/><text x="15.5075%" y="319.50"></text></g><g><title>httpmq-rs`&lt;serde_urlencoded::de::Part as serde::de::Deserializer&gt;::deserialize_any (13 samples, 0.02%)</title><rect x="15.4528%" y="277" width="0.0180%" height="15" fill="rgb(215,215,53)" fg:x="11152" fg:w="13"/><text x="15.7028%" y="287.50"></text></g><g><title>httpmq-rs`alloc::string::String::from_utf8_lossy (15 samples, 0.02%)</title><rect x="15.8186%" y="245" width="0.0208%" height="15" fill="rgb(223,4,10)" fg:x="11416" fg:w="15"/><text x="16.0686%" y="255.50"></text></g><g><title>httpmq-rs`alloc::string::String::from_utf8_lossy (233 samples, 0.32%)</title><rect x="16.2136%" y="229" width="0.3229%" height="15" fill="rgb(234,103,6)" fg:x="11701" fg:w="233"/><text x="16.4636%" y="239.50"></text></g><g><title>httpmq-rs`&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (200 samples, 0.28%)</title><rect x="16.2593%" y="213" width="0.2771%" height="15" fill="rgb(227,97,0)" fg:x="11734" fg:w="200"/><text x="16.5093%" y="223.50"></text></g><g><title>httpmq-rs`core::str::lossy::Utf8Lossy::from_bytes (23 samples, 0.03%)</title><rect x="16.5447%" y="229" width="0.0319%" height="15" fill="rgb(234,150,53)" fg:x="11940" fg:w="23"/><text x="16.7947%" y="239.50"></text></g><g><title>httpmq-rs`percent_encoding::PercentDecode::if_any (11 samples, 0.02%)</title><rect x="16.5766%" y="229" width="0.0152%" height="15" fill="rgb(228,201,54)" fg:x="11963" fg:w="11"/><text x="16.8266%" y="239.50"></text></g><g><title>httpmq-rs`form_urlencoded::decode (779 samples, 1.08%)</title><rect x="15.8394%" y="245" width="1.0794%" height="15" fill="rgb(222,22,37)" fg:x="11431" fg:w="779"/><text x="16.0894%" y="255.50"></text></g><g><title>httpmq-rs`percent_encoding::_&lt;impl core::convert::From&lt;percent_encoding::PercentDecode&gt; for alloc::borrow::Cow&lt;[u8]&gt;&gt;::from (236 samples, 0.33%)</title><rect x="16.5918%" y="229" width="0.3270%" height="15" fill="rgb(237,53,32)" fg:x="11974" fg:w="236"/><text x="16.8418%" y="239.50"></text></g><g><title>httpmq-rs`percent_encoding::PercentDecode::if_any (212 samples, 0.29%)</title><rect x="16.6251%" y="213" width="0.2938%" height="15" fill="rgb(233,25,53)" fg:x="11998" fg:w="212"/><text x="16.8751%" y="223.50"></text></g><g><title>httpmq-rs`&lt;form_urlencoded::Parse as core::iter::traits::iterator::Iterator&gt;::next (1,024 samples, 1.42%)</title><rect x="15.5193%" y="261" width="1.4189%" height="15" fill="rgb(210,40,34)" fg:x="11200" fg:w="1024"/><text x="15.7693%" y="271.50"></text></g><g><title>httpmq-rs`percent_encoding::_&lt;impl core::convert::From&lt;percent_encoding::PercentDecode&gt; for alloc::borrow::Cow&lt;[u8]&gt;&gt;::from (14 samples, 0.02%)</title><rect x="16.9189%" y="245" width="0.0194%" height="15" fill="rgb(241,220,44)" fg:x="12210" fg:w="14"/><text x="17.1689%" y="255.50"></text></g><g><title>httpmq-rs`&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_key_seed (1,133 samples, 1.57%)</title><rect x="15.3946%" y="293" width="1.5699%" height="15" fill="rgb(235,28,35)" fg:x="11110" fg:w="1133"/><text x="15.6446%" y="303.50"></text></g><g><title>httpmq-rs`&lt;serde_urlencoded::de::PartIterator as core::iter::traits::iterator::Iterator&gt;::next (1,073 samples, 1.49%)</title><rect x="15.4778%" y="277" width="1.4868%" height="15" fill="rgb(210,56,17)" fg:x="11170" fg:w="1073"/><text x="15.7278%" y="287.50"></text></g><g><title>httpmq-rs`form_urlencoded::decode (19 samples, 0.03%)</title><rect x="16.9383%" y="261" width="0.0263%" height="15" fill="rgb(224,130,29)" fg:x="12224" fg:w="19"/><text x="17.1883%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (8 samples, 0.01%)</title><rect x="17.1281%" y="245" width="0.0111%" height="15" fill="rgb(235,212,8)" fg:x="12361" fg:w="8"/><text x="17.3781%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (10 samples, 0.01%)</title><rect x="17.1461%" y="245" width="0.0139%" height="15" fill="rgb(223,33,50)" fg:x="12374" fg:w="10"/><text x="17.3961%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (66 samples, 0.09%)</title><rect x="17.1600%" y="245" width="0.0915%" height="15" fill="rgb(219,149,13)" fg:x="12384" fg:w="66"/><text x="17.4100%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.02%)</title><rect x="17.2306%" y="229" width="0.0208%" height="15" fill="rgb(250,156,29)" fg:x="12435" fg:w="15"/><text x="17.4806%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (178 samples, 0.25%)</title><rect x="17.0075%" y="277" width="0.2466%" height="15" fill="rgb(216,193,19)" fg:x="12274" fg:w="178"/><text x="17.2575%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (172 samples, 0.24%)</title><rect x="17.0159%" y="261" width="0.2383%" height="15" fill="rgb(216,135,14)" fg:x="12280" fg:w="172"/><text x="17.2659%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (193 samples, 0.27%)</title><rect x="16.9881%" y="293" width="0.2674%" height="15" fill="rgb(241,47,5)" fg:x="12260" fg:w="193"/><text x="17.2381%" y="303.50"></text></g><g><title>httpmq-rs`&lt;serde_urlencoded::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (1,486 samples, 2.06%)</title><rect x="15.2755%" y="309" width="2.0591%" height="15" fill="rgb(233,42,35)" fg:x="11024" fg:w="1486"/><text x="15.5255%" y="319.50">h..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (50 samples, 0.07%)</title><rect x="17.2653%" y="293" width="0.0693%" height="15" fill="rgb(231,13,6)" fg:x="12460" fg:w="50"/><text x="17.5153%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (15 samples, 0.02%)</title><rect x="17.3637%" y="309" width="0.0208%" height="15" fill="rgb(207,181,40)" fg:x="12531" fg:w="15"/><text x="17.6137%" y="319.50"></text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,646 samples, 2.28%)</title><rect x="15.1230%" y="325" width="2.2808%" height="15" fill="rgb(254,173,49)" fg:x="10914" fg:w="1646"/><text x="15.3730%" y="335.50">h..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.02%)</title><rect x="17.3844%" y="309" width="0.0194%" height="15" fill="rgb(221,1,38)" fg:x="12546" fg:w="14"/><text x="17.6344%" y="319.50"></text></g><g><title>httpmq-rs`&lt;serde_urlencoded::de::Deserializer as serde::de::Deserializer&gt;::deserialize_any (14 samples, 0.02%)</title><rect x="17.4135%" y="325" width="0.0194%" height="15" fill="rgb(206,124,46)" fg:x="12567" fg:w="14"/><text x="17.6635%" y="335.50"></text></g><g><title>httpmq-rs`__rdl_alloc (23 samples, 0.03%)</title><rect x="17.4343%" y="325" width="0.0319%" height="15" fill="rgb(249,21,11)" fg:x="12582" fg:w="23"/><text x="17.6843%" y="335.50"></text></g><g><title>httpmq-rs`__rdl_dealloc (12 samples, 0.02%)</title><rect x="17.4662%" y="325" width="0.0166%" height="15" fill="rgb(222,201,40)" fg:x="12605" fg:w="12"/><text x="17.7162%" y="335.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::new (9 samples, 0.01%)</title><rect x="17.4967%" y="325" width="0.0125%" height="15" fill="rgb(235,61,29)" fg:x="12627" fg:w="9"/><text x="17.7467%" y="335.50"></text></g><g><title>httpmq-rs`core::fmt::num::imp::_&lt;impl core::fmt::Display for i32&gt;::fmt (13 samples, 0.02%)</title><rect x="17.5091%" y="325" width="0.0180%" height="15" fill="rgb(219,207,3)" fg:x="12636" fg:w="13"/><text x="17.7591%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.03%)</title><rect x="17.6172%" y="277" width="0.0305%" height="15" fill="rgb(222,56,46)" fg:x="12714" fg:w="22"/><text x="17.8672%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.02%)</title><rect x="17.6228%" y="261" width="0.0249%" height="15" fill="rgb(239,76,54)" fg:x="12718" fg:w="18"/><text x="17.8728%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (16 samples, 0.02%)</title><rect x="17.6255%" y="245" width="0.0222%" height="15" fill="rgb(231,124,27)" fg:x="12720" fg:w="16"/><text x="17.8755%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (11 samples, 0.02%)</title><rect x="17.6851%" y="261" width="0.0152%" height="15" fill="rgb(249,195,6)" fg:x="12763" fg:w="11"/><text x="17.9351%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.02%)</title><rect x="17.7530%" y="245" width="0.0194%" height="15" fill="rgb(237,174,47)" fg:x="12812" fg:w="14"/><text x="18.0030%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (55 samples, 0.08%)</title><rect x="17.7031%" y="261" width="0.0762%" height="15" fill="rgb(206,201,31)" fg:x="12776" fg:w="55"/><text x="17.9531%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (96 samples, 0.13%)</title><rect x="17.6477%" y="277" width="0.1330%" height="15" fill="rgb(231,57,52)" fg:x="12736" fg:w="96"/><text x="17.8977%" y="287.50"></text></g><g><title>httpmq-rs`bytes::bytes::shared_drop (135 samples, 0.19%)</title><rect x="17.5978%" y="293" width="0.1871%" height="15" fill="rgb(248,177,22)" fg:x="12700" fg:w="135"/><text x="17.8478%" y="303.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt; (15 samples, 0.02%)</title><rect x="17.7932%" y="293" width="0.0208%" height="15" fill="rgb(215,211,37)" fg:x="12841" fg:w="15"/><text x="18.0432%" y="303.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::extract::matched_path::MatchedPath&gt; (23 samples, 0.03%)</title><rect x="17.8140%" y="293" width="0.0319%" height="15" fill="rgb(241,128,51)" fg:x="12856" fg:w="23"/><text x="18.0640%" y="303.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::option::Option&lt;axum::routing::UrlParams&gt;&gt; (11 samples, 0.02%)</title><rect x="17.8459%" y="293" width="0.0152%" height="15" fill="rgb(227,165,31)" fg:x="12879" fg:w="11"/><text x="18.0959%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (55 samples, 0.08%)</title><rect x="17.8680%" y="293" width="0.0762%" height="15" fill="rgb(228,167,24)" fg:x="12895" fg:w="55"/><text x="18.1180%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (49 samples, 0.07%)</title><rect x="17.9955%" y="277" width="0.0679%" height="15" fill="rgb(228,143,12)" fg:x="12987" fg:w="49"/><text x="18.2455%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (46 samples, 0.06%)</title><rect x="17.9997%" y="261" width="0.0637%" height="15" fill="rgb(249,149,8)" fg:x="12990" fg:w="46"/><text x="18.2497%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (85 samples, 0.12%)</title><rect x="17.9512%" y="293" width="0.1178%" height="15" fill="rgb(243,35,44)" fg:x="12955" fg:w="85"/><text x="18.2012%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (67 samples, 0.09%)</title><rect x="18.2283%" y="277" width="0.0928%" height="15" fill="rgb(246,89,9)" fg:x="13155" fg:w="67"/><text x="18.4783%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (82 samples, 0.11%)</title><rect x="18.5151%" y="261" width="0.1136%" height="15" fill="rgb(233,213,13)" fg:x="13362" fg:w="82"/><text x="18.7651%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (247 samples, 0.34%)</title><rect x="18.3267%" y="277" width="0.3423%" height="15" fill="rgb(233,141,41)" fg:x="13226" fg:w="247"/><text x="18.5767%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (29 samples, 0.04%)</title><rect x="18.6288%" y="261" width="0.0402%" height="15" fill="rgb(239,167,4)" fg:x="13444" fg:w="29"/><text x="18.8788%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (441 samples, 0.61%)</title><rect x="18.0690%" y="293" width="0.6111%" height="15" fill="rgb(209,217,16)" fg:x="13040" fg:w="441"/><text x="18.3190%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (8 samples, 0.01%)</title><rect x="18.6689%" y="277" width="0.0111%" height="15" fill="rgb(219,88,35)" fg:x="13473" fg:w="8"/><text x="18.9189%" y="287.50"></text></g><g><title>httpmq-rs`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (834 samples, 1.16%)</title><rect x="17.5424%" y="309" width="1.1556%" height="15" fill="rgb(220,193,23)" fg:x="12660" fg:w="834"/><text x="17.7924%" y="319.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (8 samples, 0.01%)</title><rect x="18.6870%" y="293" width="0.0111%" height="15" fill="rgb(230,90,52)" fg:x="13486" fg:w="8"/><text x="18.9370%" y="303.50"></text></g><g><title>httpmq-rs`bytes::bytes::promotable_even_drop (16 samples, 0.02%)</title><rect x="18.7022%" y="309" width="0.0222%" height="15" fill="rgb(252,106,19)" fg:x="13497" fg:w="16"/><text x="18.9522%" y="319.50"></text></g><g><title>httpmq-rs`bytes::bytes::static_drop (10 samples, 0.01%)</title><rect x="18.7285%" y="309" width="0.0139%" height="15" fill="rgb(206,74,20)" fg:x="13516" fg:w="10"/><text x="18.9785%" y="319.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::shared_v_drop (21 samples, 0.03%)</title><rect x="18.7424%" y="309" width="0.0291%" height="15" fill="rgb(230,138,44)" fg:x="13526" fg:w="21"/><text x="18.9924%" y="319.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt; (19 samples, 0.03%)</title><rect x="18.7715%" y="309" width="0.0263%" height="15" fill="rgb(235,182,43)" fg:x="13547" fg:w="19"/><text x="19.0215%" y="319.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::extract::matched_path::MatchedPath&gt; (12 samples, 0.02%)</title><rect x="18.7978%" y="309" width="0.0166%" height="15" fill="rgb(242,16,51)" fg:x="13566" fg:w="12"/><text x="19.0478%" y="319.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::extract::request_parts::OriginalUri&gt; (10 samples, 0.01%)</title><rect x="18.8144%" y="309" width="0.0139%" height="15" fill="rgb(248,9,4)" fg:x="13578" fg:w="10"/><text x="19.0644%" y="319.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::option::Option&lt;axum::routing::UrlParams&gt;&gt; (22 samples, 0.03%)</title><rect x="18.8283%" y="309" width="0.0305%" height="15" fill="rgb(210,31,22)" fg:x="13588" fg:w="22"/><text x="19.0783%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_size (48 samples, 0.07%)</title><rect x="18.9100%" y="261" width="0.0665%" height="15" fill="rgb(239,54,39)" fg:x="13647" fg:w="48"/><text x="19.1600%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (62 samples, 0.09%)</title><rect x="18.9059%" y="277" width="0.0859%" height="15" fill="rgb(230,99,41)" fg:x="13644" fg:w="62"/><text x="19.1559%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.02%)</title><rect x="18.9766%" y="261" width="0.0152%" height="15" fill="rgb(253,106,12)" fg:x="13695" fg:w="11"/><text x="19.2266%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.01%)</title><rect x="18.9793%" y="245" width="0.0125%" height="15" fill="rgb(213,46,41)" fg:x="13697" fg:w="9"/><text x="19.2293%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (20 samples, 0.03%)</title><rect x="19.0514%" y="261" width="0.0277%" height="15" fill="rgb(215,133,35)" fg:x="13749" fg:w="20"/><text x="19.3014%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_small (77 samples, 0.11%)</title><rect x="18.9918%" y="277" width="0.1067%" height="15" fill="rgb(213,28,5)" fg:x="13706" fg:w="77"/><text x="19.2418%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (11 samples, 0.02%)</title><rect x="19.0833%" y="261" width="0.0152%" height="15" fill="rgb(215,77,49)" fg:x="13772" fg:w="11"/><text x="19.3333%" y="271.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::shared_v_drop (164 samples, 0.23%)</title><rect x="18.8809%" y="293" width="0.2272%" height="15" fill="rgb(248,100,22)" fg:x="13626" fg:w="164"/><text x="19.1309%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (37 samples, 0.05%)</title><rect x="19.1082%" y="293" width="0.0513%" height="15" fill="rgb(208,67,9)" fg:x="13790" fg:w="37"/><text x="19.3582%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (89 samples, 0.12%)</title><rect x="19.1844%" y="277" width="0.1233%" height="15" fill="rgb(219,133,21)" fg:x="13845" fg:w="89"/><text x="19.4344%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (88 samples, 0.12%)</title><rect x="19.1858%" y="261" width="0.1219%" height="15" fill="rgb(246,46,29)" fg:x="13846" fg:w="88"/><text x="19.4358%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (106 samples, 0.15%)</title><rect x="19.1622%" y="293" width="0.1469%" height="15" fill="rgb(246,185,52)" fg:x="13829" fg:w="106"/><text x="19.4122%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (38 samples, 0.05%)</title><rect x="19.4394%" y="277" width="0.0527%" height="15" fill="rgb(252,136,11)" fg:x="14029" fg:w="38"/><text x="19.6894%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (44 samples, 0.06%)</title><rect x="19.6015%" y="261" width="0.0610%" height="15" fill="rgb(219,138,53)" fg:x="14146" fg:w="44"/><text x="19.8515%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (158 samples, 0.22%)</title><rect x="19.4948%" y="277" width="0.2189%" height="15" fill="rgb(211,51,23)" fg:x="14069" fg:w="158"/><text x="19.7448%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (37 samples, 0.05%)</title><rect x="19.6625%" y="261" width="0.0513%" height="15" fill="rgb(247,221,28)" fg:x="14190" fg:w="37"/><text x="19.9125%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (297 samples, 0.41%)</title><rect x="19.3091%" y="293" width="0.4115%" height="15" fill="rgb(251,222,45)" fg:x="13935" fg:w="297"/><text x="19.5591%" y="303.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;http::header::map::HeaderMap&gt; (641 samples, 0.89%)</title><rect x="18.8588%" y="309" width="0.8882%" height="15" fill="rgb(217,162,53)" fg:x="13610" fg:w="641"/><text x="19.1088%" y="319.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (23 samples, 0.03%)</title><rect x="19.7470%" y="309" width="0.0319%" height="15" fill="rgb(229,93,14)" fg:x="14251" fg:w="23"/><text x="19.9970%" y="319.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;once_cell::imp::OnceCell&lt;i32&gt;::initialize&lt;once_cell::sync::OnceCell&lt;i32&gt;::get_or_init&lt;once_cell::sync::OnceCell&lt;i32&gt;::try_insert::{{closure}}&gt;::{{closure}},once_cell::sync::OnceCell&lt;T&gt;::get_or_init::Void&gt;::{{closure}}&gt; (19 samples, 0.03%)</title><rect x="19.7788%" y="309" width="0.0263%" height="15" fill="rgb(209,67,49)" fg:x="14274" fg:w="19"/><text x="20.0288%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (12 samples, 0.02%)</title><rect x="19.8052%" y="309" width="0.0166%" height="15" fill="rgb(213,87,29)" fg:x="14293" fg:w="12"/><text x="20.0552%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (12 samples, 0.02%)</title><rect x="19.8218%" y="309" width="0.0166%" height="15" fill="rgb(205,151,52)" fg:x="14305" fg:w="12"/><text x="20.0718%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (29 samples, 0.04%)</title><rect x="19.8786%" y="293" width="0.0402%" height="15" fill="rgb(253,215,39)" fg:x="14346" fg:w="29"/><text x="20.1286%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (26 samples, 0.04%)</title><rect x="19.8828%" y="277" width="0.0360%" height="15" fill="rgb(221,220,41)" fg:x="14349" fg:w="26"/><text x="20.1328%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (59 samples, 0.08%)</title><rect x="19.8384%" y="309" width="0.0818%" height="15" fill="rgb(218,133,21)" fg:x="14317" fg:w="59"/><text x="20.0884%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (10 samples, 0.01%)</title><rect x="19.9909%" y="293" width="0.0139%" height="15" fill="rgb(221,193,43)" fg:x="14427" fg:w="10"/><text x="20.2409%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (30 samples, 0.04%)</title><rect x="20.0906%" y="277" width="0.0416%" height="15" fill="rgb(240,128,52)" fg:x="14499" fg:w="30"/><text x="20.3406%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (108 samples, 0.15%)</title><rect x="20.0089%" y="293" width="0.1497%" height="15" fill="rgb(253,114,12)" fg:x="14440" fg:w="108"/><text x="20.2589%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (19 samples, 0.03%)</title><rect x="20.1322%" y="277" width="0.0263%" height="15" fill="rgb(215,223,47)" fg:x="14529" fg:w="19"/><text x="20.3822%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (173 samples, 0.24%)</title><rect x="19.9202%" y="309" width="0.2397%" height="15" fill="rgb(248,225,23)" fg:x="14376" fg:w="173"/><text x="20.1702%" y="319.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum_core::extract::RequestParts&lt;hyper::body::body::Body&gt;&gt; (1,917 samples, 2.66%)</title><rect x="17.5272%" y="325" width="2.6563%" height="15" fill="rgb(250,108,0)" fg:x="12649" fg:w="1917"/><text x="17.7772%" y="335.50">ht..</text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;httpmq_rs::service::process::{{closure}}&gt;&gt; (22 samples, 0.03%)</title><rect x="20.1835%" y="325" width="0.0305%" height="15" fill="rgb(228,208,7)" fg:x="14566" fg:w="22"/><text x="20.4335%" y="335.50"></text></g><g><title>httpmq-rs`http::header::map::HeaderMap&lt;T&gt;::insert (17 samples, 0.02%)</title><rect x="20.2347%" y="325" width="0.0236%" height="15" fill="rgb(244,45,10)" fg:x="14603" fg:w="17"/><text x="20.4847%" y="335.50"></text></g><g><title>httpmq-rs`http::header::value::is_visible_ascii (14 samples, 0.02%)</title><rect x="20.2583%" y="325" width="0.0194%" height="15" fill="rgb(207,125,25)" fg:x="14620" fg:w="14"/><text x="20.5083%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (59 samples, 0.08%)</title><rect x="20.6629%" y="277" width="0.0818%" height="15" fill="rgb(210,195,18)" fg:x="14912" fg:w="59"/><text x="20.9129%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (57 samples, 0.08%)</title><rect x="20.6657%" y="261" width="0.0790%" height="15" fill="rgb(249,80,12)" fg:x="14914" fg:w="57"/><text x="20.9157%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (74 samples, 0.10%)</title><rect x="20.6435%" y="293" width="0.1025%" height="15" fill="rgb(221,65,9)" fg:x="14898" fg:w="74"/><text x="20.8935%" y="303.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::clone::Clone&gt;::clone (95 samples, 0.13%)</title><rect x="20.6283%" y="309" width="0.1316%" height="15" fill="rgb(235,49,36)" fg:x="14887" fg:w="95"/><text x="20.8783%" y="319.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14 samples, 0.02%)</title><rect x="20.7599%" y="309" width="0.0194%" height="15" fill="rgb(225,32,20)" fg:x="14982" fg:w="14"/><text x="21.0099%" y="319.50"></text></g><g><title>httpmq-rs`__rdl_realloc (8 samples, 0.01%)</title><rect x="20.8181%" y="277" width="0.0111%" height="15" fill="rgb(215,141,46)" fg:x="15024" fg:w="8"/><text x="21.0681%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (19 samples, 0.03%)</title><rect x="20.8818%" y="229" width="0.0263%" height="15" fill="rgb(250,160,47)" fg:x="15070" fg:w="19"/><text x="21.1318%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (15 samples, 0.02%)</title><rect x="20.8874%" y="213" width="0.0208%" height="15" fill="rgb(216,222,40)" fg:x="15074" fg:w="15"/><text x="21.1374%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (41 samples, 0.06%)</title><rect x="20.8527%" y="261" width="0.0568%" height="15" fill="rgb(234,217,39)" fg:x="15049" fg:w="41"/><text x="21.1027%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (29 samples, 0.04%)</title><rect x="20.8694%" y="245" width="0.0402%" height="15" fill="rgb(207,178,40)" fg:x="15061" fg:w="29"/><text x="21.1194%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (78 samples, 0.11%)</title><rect x="20.8333%" y="277" width="0.1081%" height="15" fill="rgb(221,136,13)" fg:x="15035" fg:w="78"/><text x="21.0833%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (19 samples, 0.03%)</title><rect x="20.9151%" y="261" width="0.0263%" height="15" fill="rgb(249,199,10)" fg:x="15094" fg:w="19"/><text x="21.1651%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (15 samples, 0.02%)</title><rect x="20.9206%" y="245" width="0.0208%" height="15" fill="rgb(249,222,13)" fg:x="15098" fg:w="15"/><text x="21.1706%" y="255.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (94 samples, 0.13%)</title><rect x="20.8139%" y="293" width="0.1303%" height="15" fill="rgb(244,185,38)" fg:x="15021" fg:w="94"/><text x="21.0639%" y="303.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (123 samples, 0.17%)</title><rect x="20.7987%" y="309" width="0.1704%" height="15" fill="rgb(236,202,9)" fg:x="15010" fg:w="123"/><text x="21.0487%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (18 samples, 0.02%)</title><rect x="20.9442%" y="293" width="0.0249%" height="15" fill="rgb(250,229,37)" fg:x="15115" fg:w="18"/><text x="21.1942%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (102 samples, 0.14%)</title><rect x="21.0481%" y="245" width="0.1413%" height="15" fill="rgb(206,174,23)" fg:x="15190" fg:w="102"/><text x="21.2981%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (93 samples, 0.13%)</title><rect x="21.0606%" y="229" width="0.1289%" height="15" fill="rgb(211,33,43)" fg:x="15199" fg:w="93"/><text x="21.3106%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (89 samples, 0.12%)</title><rect x="21.0661%" y="213" width="0.1233%" height="15" fill="rgb(245,58,50)" fg:x="15203" fg:w="89"/><text x="21.3161%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (40 samples, 0.06%)</title><rect x="21.1340%" y="197" width="0.0554%" height="15" fill="rgb(244,68,36)" fg:x="15252" fg:w="40"/><text x="21.3840%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.01%)</title><rect x="21.1770%" y="181" width="0.0125%" height="15" fill="rgb(232,229,15)" fg:x="15283" fg:w="9"/><text x="21.4270%" y="191.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (109 samples, 0.15%)</title><rect x="21.0412%" y="261" width="0.1510%" height="15" fill="rgb(254,30,23)" fg:x="15185" fg:w="109"/><text x="21.2912%" y="271.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (133 samples, 0.18%)</title><rect x="21.0246%" y="277" width="0.1843%" height="15" fill="rgb(235,160,14)" fg:x="15173" fg:w="133"/><text x="21.2746%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (10 samples, 0.01%)</title><rect x="21.1950%" y="261" width="0.0139%" height="15" fill="rgb(212,155,44)" fg:x="15296" fg:w="10"/><text x="21.4450%" y="271.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (11 samples, 0.02%)</title><rect x="21.2088%" y="277" width="0.0152%" height="15" fill="rgb(226,2,50)" fg:x="15306" fg:w="11"/><text x="21.4588%" y="287.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (151 samples, 0.21%)</title><rect x="21.0176%" y="293" width="0.2092%" height="15" fill="rgb(234,177,6)" fg:x="15168" fg:w="151"/><text x="21.2676%" y="303.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.02%)</title><rect x="21.2282%" y="293" width="0.0194%" height="15" fill="rgb(217,24,9)" fg:x="15320" fg:w="14"/><text x="21.4782%" y="303.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::pad_integral (19 samples, 0.03%)</title><rect x="21.2476%" y="293" width="0.0263%" height="15" fill="rgb(220,13,46)" fg:x="15334" fg:w="19"/><text x="21.4976%" y="303.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::pad_integral::write_prefix (10 samples, 0.01%)</title><rect x="21.2740%" y="293" width="0.0139%" height="15" fill="rgb(239,221,27)" fg:x="15353" fg:w="10"/><text x="21.5240%" y="303.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::pad_integral (9 samples, 0.01%)</title><rect x="21.2878%" y="293" width="0.0125%" height="15" fill="rgb(222,198,25)" fg:x="15363" fg:w="9"/><text x="21.5378%" y="303.50"></text></g><g><title>httpmq-rs`core::fmt::Formatter::pad_integral::write_prefix (9 samples, 0.01%)</title><rect x="21.2878%" y="277" width="0.0125%" height="15" fill="rgb(211,99,13)" fg:x="15363" fg:w="9"/><text x="21.5378%" y="287.50"></text></g><g><title>httpmq-rs`core::fmt::num::imp::_&lt;impl core::fmt::Display for i32&gt;::fmt (234 samples, 0.32%)</title><rect x="20.9788%" y="309" width="0.3242%" height="15" fill="rgb(232,111,31)" fg:x="15140" fg:w="234"/><text x="21.2288%" y="319.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.02%)</title><rect x="21.3627%" y="293" width="0.0236%" height="15" fill="rgb(245,82,37)" fg:x="15417" fg:w="17"/><text x="21.6127%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.05%)</title><rect x="21.6176%" y="213" width="0.0527%" height="15" fill="rgb(227,149,46)" fg:x="15601" fg:w="38"/><text x="21.8676%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.01%)</title><rect x="21.6578%" y="197" width="0.0125%" height="15" fill="rgb(218,36,50)" fg:x="15630" fg:w="9"/><text x="21.9078%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (125 samples, 0.17%)</title><rect x="21.5012%" y="261" width="0.1732%" height="15" fill="rgb(226,80,48)" fg:x="15517" fg:w="125"/><text x="21.7512%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (113 samples, 0.16%)</title><rect x="21.5178%" y="245" width="0.1566%" height="15" fill="rgb(238,224,15)" fg:x="15529" fg:w="113"/><text x="21.7678%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (108 samples, 0.15%)</title><rect x="21.5248%" y="229" width="0.1497%" height="15" fill="rgb(241,136,10)" fg:x="15534" fg:w="108"/><text x="21.7748%" y="239.50"></text></g><g><title>httpmq-rs`&lt;alloc::string::String as core::clone::Clone&gt;::clone (156 samples, 0.22%)</title><rect x="21.4874%" y="277" width="0.2162%" height="15" fill="rgb(208,32,45)" fg:x="15507" fg:w="156"/><text x="21.7374%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.02%)</title><rect x="21.6786%" y="261" width="0.0249%" height="15" fill="rgb(207,135,9)" fg:x="15645" fg:w="18"/><text x="21.9286%" y="271.50"></text></g><g><title>httpmq-rs`core::num::_&lt;impl core::str::traits::FromStr for i32&gt;::from_str (39 samples, 0.05%)</title><rect x="21.7285%" y="261" width="0.0540%" height="15" fill="rgb(206,86,44)" fg:x="15681" fg:w="39"/><text x="21.9785%" y="271.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (86 samples, 0.12%)</title><rect x="21.7035%" y="277" width="0.1192%" height="15" fill="rgb(245,177,15)" fg:x="15663" fg:w="86"/><text x="21.9535%" y="287.50"></text></g><g><title>httpmq-rs`core::str::converts::from_utf8 (29 samples, 0.04%)</title><rect x="21.7825%" y="261" width="0.0402%" height="15" fill="rgb(206,64,50)" fg:x="15720" fg:w="29"/><text x="22.0325%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (8 samples, 0.01%)</title><rect x="21.9128%" y="245" width="0.0111%" height="15" fill="rgb(234,36,40)" fg:x="15814" fg:w="8"/><text x="22.1628%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (19 samples, 0.03%)</title><rect x="22.0111%" y="197" width="0.0263%" height="15" fill="rgb(213,64,8)" fg:x="15885" fg:w="19"/><text x="22.2611%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.02%)</title><rect x="22.0139%" y="181" width="0.0236%" height="15" fill="rgb(210,75,36)" fg:x="15887" fg:w="17"/><text x="22.2639%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (39 samples, 0.05%)</title><rect x="21.9917%" y="213" width="0.0540%" height="15" fill="rgb(229,88,21)" fg:x="15871" fg:w="39"/><text x="22.2417%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (60 samples, 0.08%)</title><rect x="21.9654%" y="229" width="0.0831%" height="15" fill="rgb(252,204,47)" fg:x="15852" fg:w="60"/><text x="22.2154%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (25 samples, 0.03%)</title><rect x="22.0583%" y="229" width="0.0346%" height="15" fill="rgb(208,77,27)" fg:x="15919" fg:w="25"/><text x="22.3083%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (25 samples, 0.03%)</title><rect x="22.0583%" y="213" width="0.0346%" height="15" fill="rgb(221,76,26)" fg:x="15919" fg:w="25"/><text x="22.3083%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (125 samples, 0.17%)</title><rect x="21.9238%" y="245" width="0.1732%" height="15" fill="rgb(225,139,18)" fg:x="15822" fg:w="125"/><text x="22.1738%" y="255.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (161 samples, 0.22%)</title><rect x="21.8878%" y="261" width="0.2231%" height="15" fill="rgb(230,137,11)" fg:x="15796" fg:w="161"/><text x="22.1378%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.01%)</title><rect x="22.0971%" y="245" width="0.0139%" height="15" fill="rgb(212,28,1)" fg:x="15947" fg:w="10"/><text x="22.3471%" y="255.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (203 samples, 0.28%)</title><rect x="21.8559%" y="277" width="0.2813%" height="15" fill="rgb(248,164,17)" fg:x="15773" fg:w="203"/><text x="22.1059%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (19 samples, 0.03%)</title><rect x="22.1109%" y="261" width="0.0263%" height="15" fill="rgb(222,171,42)" fg:x="15957" fg:w="19"/><text x="22.3609%" y="271.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (12 samples, 0.02%)</title><rect x="22.1372%" y="277" width="0.0166%" height="15" fill="rgb(243,84,45)" fg:x="15976" fg:w="12"/><text x="22.3872%" y="287.50"></text></g><g><title>httpmq-rs`core::iter::traits::iterator::Iterator::unzip (15 samples, 0.02%)</title><rect x="22.1539%" y="277" width="0.0208%" height="15" fill="rgb(252,49,23)" fg:x="15988" fg:w="15"/><text x="22.4039%" y="287.50"></text></g><g><title>httpmq-rs`core::num::_&lt;impl core::str::traits::FromStr for i32&gt;::from_str (11 samples, 0.02%)</title><rect x="22.1746%" y="277" width="0.0152%" height="15" fill="rgb(215,19,7)" fg:x="16003" fg:w="11"/><text x="22.4246%" y="287.50"></text></g><g><title>httpmq-rs`core::str::converts::from_utf8 (16 samples, 0.02%)</title><rect x="22.1899%" y="277" width="0.0222%" height="15" fill="rgb(238,81,41)" fg:x="16014" fg:w="16"/><text x="22.4399%" y="287.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.02%)</title><rect x="22.2813%" y="261" width="0.0249%" height="15" fill="rgb(210,199,37)" fg:x="16080" fg:w="18"/><text x="22.5313%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::ReadOptions::ReadOptions (24 samples, 0.03%)</title><rect x="22.3132%" y="245" width="0.0333%" height="15" fill="rgb(244,192,49)" fg:x="16103" fg:w="24"/><text x="22.5632%" y="255.50"></text></g><g><title>libc+ (12 samples, 0.02%)</title><rect x="22.3631%" y="229" width="0.0166%" height="15" fill="rgb(226,211,11)" fg:x="16139" fg:w="12"/><text x="22.6131%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (46 samples, 0.06%)</title><rect x="22.3922%" y="181" width="0.0637%" height="15" fill="rgb(236,162,54)" fg:x="16160" fg:w="46"/><text x="22.6422%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.02%)</title><rect x="22.4365%" y="165" width="0.0194%" height="15" fill="rgb(220,229,9)" fg:x="16192" fg:w="14"/><text x="22.6865%" y="175.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (56 samples, 0.08%)</title><rect x="22.3797%" y="229" width="0.0776%" height="15" fill="rgb(250,87,22)" fg:x="16151" fg:w="56"/><text x="22.6297%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (54 samples, 0.07%)</title><rect x="22.3825%" y="213" width="0.0748%" height="15" fill="rgb(239,43,17)" fg:x="16153" fg:w="54"/><text x="22.6325%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (49 samples, 0.07%)</title><rect x="22.3894%" y="197" width="0.0679%" height="15" fill="rgb(231,177,25)" fg:x="16158" fg:w="49"/><text x="22.6394%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb_readoptions_create (100 samples, 0.14%)</title><rect x="22.3465%" y="245" width="0.1386%" height="15" fill="rgb(219,179,1)" fg:x="16127" fg:w="100"/><text x="22.5965%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (19 samples, 0.03%)</title><rect x="22.4587%" y="229" width="0.0263%" height="15" fill="rgb(238,219,53)" fg:x="16208" fg:w="19"/><text x="22.7087%" y="239.50"></text></g><g><title>libc+ (20 samples, 0.03%)</title><rect x="22.4850%" y="245" width="0.0277%" height="15" fill="rgb(232,167,36)" fg:x="16227" fg:w="20"/><text x="22.7350%" y="255.50"></text></g><g><title>httpmq-rs`&lt;rocksdb::db_options::ReadOptions as core::default::Default&gt;::default (151 samples, 0.21%)</title><rect x="22.3063%" y="261" width="0.2092%" height="15" fill="rgb(244,19,51)" fg:x="16098" fg:w="151"/><text x="22.5563%" y="271.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.02%)</title><rect x="22.5224%" y="261" width="0.0166%" height="15" fill="rgb(224,6,22)" fg:x="16254" fg:w="12"/><text x="22.7724%" y="271.50"></text></g><g><title>httpmq-rs`alloc::vec::source_iter_marker::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="22.5391%" y="261" width="0.0152%" height="15" fill="rgb(224,145,5)" fg:x="16266" fg:w="11"/><text x="22.7891%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (102 samples, 0.14%)</title><rect x="22.5987%" y="229" width="0.1413%" height="15" fill="rgb(234,130,49)" fg:x="16309" fg:w="102"/><text x="22.8487%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (94 samples, 0.13%)</title><rect x="22.6097%" y="213" width="0.1303%" height="15" fill="rgb(254,6,2)" fg:x="16317" fg:w="94"/><text x="22.8597%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (90 samples, 0.12%)</title><rect x="22.6153%" y="197" width="0.1247%" height="15" fill="rgb(208,96,46)" fg:x="16321" fg:w="90"/><text x="22.8653%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.02%)</title><rect x="22.7178%" y="181" width="0.0222%" height="15" fill="rgb(239,3,39)" fg:x="16395" fg:w="16"/><text x="22.9678%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (25 samples, 0.03%)</title><rect x="22.7636%" y="213" width="0.0346%" height="15" fill="rgb(233,210,1)" fg:x="16428" fg:w="25"/><text x="23.0136%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (23 samples, 0.03%)</title><rect x="22.7663%" y="197" width="0.0319%" height="15" fill="rgb(244,137,37)" fg:x="16430" fg:w="23"/><text x="23.0163%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (43 samples, 0.06%)</title><rect x="22.7414%" y="229" width="0.0596%" height="15" fill="rgb(240,136,2)" fg:x="16412" fg:w="43"/><text x="22.9914%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (43 samples, 0.06%)</title><rect x="22.8010%" y="229" width="0.0596%" height="15" fill="rgb(239,18,37)" fg:x="16455" fg:w="43"/><text x="23.0510%" y="239.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (209 samples, 0.29%)</title><rect x="22.5737%" y="245" width="0.2896%" height="15" fill="rgb(218,185,22)" fg:x="16291" fg:w="209"/><text x="22.8237%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (16 samples, 0.02%)</title><rect x="22.9714%" y="165" width="0.0222%" height="15" fill="rgb(225,218,4)" fg:x="16578" fg:w="16"/><text x="23.2214%" y="175.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::finish_grow (118 samples, 0.16%)</title><rect x="22.8855%" y="229" width="0.1635%" height="15" fill="rgb(230,182,32)" fg:x="16516" fg:w="118"/><text x="23.1355%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (109 samples, 0.15%)</title><rect x="22.8980%" y="213" width="0.1510%" height="15" fill="rgb(242,56,43)" fg:x="16525" fg:w="109"/><text x="23.1480%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (105 samples, 0.15%)</title><rect x="22.9035%" y="197" width="0.1455%" height="15" fill="rgb(233,99,24)" fg:x="16529" fg:w="105"/><text x="23.1535%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (103 samples, 0.14%)</title><rect x="22.9063%" y="181" width="0.1427%" height="15" fill="rgb(234,209,42)" fg:x="16531" fg:w="103"/><text x="23.1563%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (40 samples, 0.06%)</title><rect x="22.9936%" y="165" width="0.0554%" height="15" fill="rgb(227,7,12)" fg:x="16594" fg:w="40"/><text x="23.2436%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.02%)</title><rect x="23.0324%" y="149" width="0.0166%" height="15" fill="rgb(245,203,43)" fg:x="16622" fg:w="12"/><text x="23.2824%" y="159.50"></text></g><g><title>httpmq-rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (140 samples, 0.19%)</title><rect x="22.8675%" y="245" width="0.1940%" height="15" fill="rgb(238,205,33)" fg:x="16503" fg:w="140"/><text x="23.1175%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.02%)</title><rect x="23.0767%" y="245" width="0.0222%" height="15" fill="rgb(231,56,7)" fg:x="16654" fg:w="16"/><text x="23.3267%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.02%)</title><rect x="23.0809%" y="229" width="0.0180%" height="15" fill="rgb(244,186,29)" fg:x="16657" fg:w="13"/><text x="23.3309%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (12 samples, 0.02%)</title><rect x="23.0823%" y="213" width="0.0166%" height="15" fill="rgb(234,111,31)" fg:x="16658" fg:w="12"/><text x="23.3323%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.01%)</title><rect x="23.1294%" y="213" width="0.0111%" height="15" fill="rgb(241,149,10)" fg:x="16692" fg:w="8"/><text x="23.3794%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (31 samples, 0.04%)</title><rect x="23.0989%" y="245" width="0.0430%" height="15" fill="rgb(249,206,44)" fg:x="16670" fg:w="31"/><text x="23.3489%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (23 samples, 0.03%)</title><rect x="23.1100%" y="229" width="0.0319%" height="15" fill="rgb(251,153,30)" fg:x="16678" fg:w="23"/><text x="23.3600%" y="239.50"></text></g><g><title>httpmq-rs`core::iter::traits::iterator::Iterator::unzip (432 samples, 0.60%)</title><rect x="22.5543%" y="261" width="0.5986%" height="15" fill="rgb(239,152,38)" fg:x="16277" fg:w="432"/><text x="22.8043%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::DB::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (28 samples, 0.04%)</title><rect x="23.1529%" y="261" width="0.0388%" height="15" fill="rgb(249,139,47)" fg:x="16709" fg:w="28"/><text x="23.4029%" y="271.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.01%)</title><rect x="23.2208%" y="245" width="0.0111%" height="15" fill="rgb(244,64,35)" fg:x="16758" fg:w="8"/><text x="23.4708%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.03%)</title><rect x="23.3940%" y="165" width="0.0305%" height="15" fill="rgb(216,46,15)" fg:x="16883" fg:w="22"/><text x="23.6440%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.02%)</title><rect x="23.4051%" y="149" width="0.0194%" height="15" fill="rgb(250,74,19)" fg:x="16891" fg:w="14"/><text x="23.6551%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (79 samples, 0.11%)</title><rect x="23.3164%" y="181" width="0.1095%" height="15" fill="rgb(249,42,33)" fg:x="16827" fg:w="79"/><text x="23.5664%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (93 samples, 0.13%)</title><rect x="23.2984%" y="213" width="0.1289%" height="15" fill="rgb(242,149,17)" fg:x="16814" fg:w="93"/><text x="23.5484%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (86 samples, 0.12%)</title><rect x="23.3081%" y="197" width="0.1192%" height="15" fill="rgb(244,29,21)" fg:x="16821" fg:w="86"/><text x="23.5581%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (47 samples, 0.07%)</title><rect x="23.4564%" y="197" width="0.0651%" height="15" fill="rgb(220,130,37)" fg:x="16928" fg:w="47"/><text x="23.7064%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (40 samples, 0.06%)</title><rect x="23.4661%" y="181" width="0.0554%" height="15" fill="rgb(211,67,2)" fg:x="16935" fg:w="40"/><text x="23.7161%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (68 samples, 0.09%)</title><rect x="23.4301%" y="213" width="0.0942%" height="15" fill="rgb(235,68,52)" fg:x="16909" fg:w="68"/><text x="23.6801%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (28 samples, 0.04%)</title><rect x="23.6989%" y="181" width="0.0388%" height="15" fill="rgb(246,142,3)" fg:x="17103" fg:w="28"/><text x="23.9489%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (87 samples, 0.12%)</title><rect x="23.6213%" y="197" width="0.1206%" height="15" fill="rgb(241,25,7)" fg:x="17047" fg:w="87"/><text x="23.8713%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (159 samples, 0.22%)</title><rect x="23.5243%" y="213" width="0.2203%" height="15" fill="rgb(242,119,39)" fg:x="16977" fg:w="159"/><text x="23.7743%" y="223.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (370 samples, 0.51%)</title><rect x="23.2568%" y="229" width="0.5127%" height="15" fill="rgb(241,98,45)" fg:x="16784" fg:w="370"/><text x="23.5068%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="23.7515%" y="213" width="0.0180%" height="15" fill="rgb(254,28,30)" fg:x="17141" fg:w="13"/><text x="24.0015%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.01%)</title><rect x="23.8374%" y="181" width="0.0125%" height="15" fill="rgb(241,142,54)" fg:x="17203" fg:w="9"/><text x="24.0874%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (64 samples, 0.09%)</title><rect x="23.8000%" y="197" width="0.0887%" height="15" fill="rgb(222,85,15)" fg:x="17176" fg:w="64"/><text x="24.0500%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (27 samples, 0.04%)</title><rect x="23.8513%" y="181" width="0.0374%" height="15" fill="rgb(210,85,47)" fg:x="17213" fg:w="27"/><text x="24.1013%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (66 samples, 0.09%)</title><rect x="23.7986%" y="213" width="0.0915%" height="15" fill="rgb(224,206,25)" fg:x="17175" fg:w="66"/><text x="24.0486%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (75 samples, 0.10%)</title><rect x="23.7889%" y="229" width="0.1039%" height="15" fill="rgb(243,201,19)" fg:x="17168" fg:w="75"/><text x="24.0389%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (10 samples, 0.01%)</title><rect x="23.8929%" y="229" width="0.0139%" height="15" fill="rgb(236,59,4)" fg:x="17243" fg:w="10"/><text x="24.1429%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.04%)</title><rect x="23.9067%" y="229" width="0.0416%" height="15" fill="rgb(254,179,45)" fg:x="17253" fg:w="30"/><text x="24.1567%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (12 samples, 0.02%)</title><rect x="23.9317%" y="213" width="0.0166%" height="15" fill="rgb(226,14,10)" fg:x="17271" fg:w="12"/><text x="24.1817%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (12 samples, 0.02%)</title><rect x="23.9317%" y="197" width="0.0166%" height="15" fill="rgb(244,27,41)" fg:x="17271" fg:w="12"/><text x="24.1817%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.02%)</title><rect x="23.9815%" y="197" width="0.0152%" height="15" fill="rgb(235,35,32)" fg:x="17307" fg:w="11"/><text x="24.2315%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (42 samples, 0.06%)</title><rect x="23.9483%" y="229" width="0.0582%" height="15" fill="rgb(218,68,31)" fg:x="17283" fg:w="42"/><text x="24.1983%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (32 samples, 0.04%)</title><rect x="23.9621%" y="213" width="0.0443%" height="15" fill="rgb(207,120,37)" fg:x="17293" fg:w="32"/><text x="24.2121%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (15 samples, 0.02%)</title><rect x="24.0065%" y="229" width="0.0208%" height="15" fill="rgb(227,98,0)" fg:x="17325" fg:w="15"/><text x="24.2565%" y="239.50"></text></g><g><title>httpmq-rs`alloc::vec::source_iter_marker::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (615 samples, 0.85%)</title><rect x="23.2416%" y="245" width="0.8522%" height="15" fill="rgb(207,7,3)" fg:x="16773" fg:w="615"/><text x="23.4916%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (44 samples, 0.06%)</title><rect x="24.0328%" y="229" width="0.0610%" height="15" fill="rgb(206,98,19)" fg:x="17344" fg:w="44"/><text x="24.2828%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::db::convert_values (669 samples, 0.93%)</title><rect x="23.1917%" y="261" width="0.9270%" height="15" fill="rgb(217,5,26)" fg:x="16737" fg:w="669"/><text x="23.4417%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="24.1035%" y="245" width="0.0152%" height="15" fill="rgb(235,190,38)" fg:x="17395" fg:w="11"/><text x="24.3535%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::DefaultColumnFamily (8 samples, 0.01%)</title><rect x="24.2337%" y="229" width="0.0111%" height="15" fill="rgb(247,86,24)" fg:x="17489" fg:w="8"/><text x="24.4837%" y="239.50"></text></g><g><title>httpmq-rs`bool rocksdb::DBImpl::MultiCFSnapshot&lt;std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt; &gt;(rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, std::__1::function&lt;rocksdb::DBImpl::MultiGetColumnFamilyData* (std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::iterator&amp;)&gt;&amp;, std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair (10 samples, 0.01%)</title><rect x="24.2517%" y="213" width="0.0139%" height="15" fill="rgb(205,101,16)" fg:x="17502" fg:w="10"/><text x="24.5017%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::Cleanable (22 samples, 0.03%)</title><rect x="24.2656%" y="213" width="0.0305%" height="15" fill="rgb(246,168,33)" fg:x="17512" fg:w="22"/><text x="24.5156%" y="223.50"></text></g><g><title>httpmq-rs`DYLD-STUB$$std::__1::__next_prime (9 samples, 0.01%)</title><rect x="24.7340%" y="197" width="0.0125%" height="15" fill="rgb(231,114,1)" fg:x="17850" fg:w="9"/><text x="24.9840%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Instance (12 samples, 0.02%)</title><rect x="24.7963%" y="165" width="0.0166%" height="15" fill="rgb(207,184,53)" fg:x="17895" fg:w="12"/><text x="25.0463%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal (10 samples, 0.01%)</title><rect x="24.8711%" y="149" width="0.0139%" height="15" fill="rgb(224,95,51)" fg:x="17949" fg:w="10"/><text x="25.1211%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::StaticMeta::Swap (64 samples, 0.09%)</title><rect x="24.8171%" y="165" width="0.0887%" height="15" fill="rgb(212,188,45)" fg:x="17910" fg:w="64"/><text x="25.0671%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.02%)</title><rect x="24.8850%" y="149" width="0.0208%" height="15" fill="rgb(223,154,38)" fg:x="17959" fg:w="15"/><text x="25.1350%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion (117 samples, 0.16%)</title><rect x="24.7741%" y="181" width="0.1621%" height="15" fill="rgb(251,22,52)" fg:x="17879" fg:w="117"/><text x="25.0241%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Swap (22 samples, 0.03%)</title><rect x="24.9058%" y="165" width="0.0305%" height="15" fill="rgb(229,209,22)" fg:x="17974" fg:w="22"/><text x="25.1558%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Instance (17 samples, 0.02%)</title><rect x="24.9127%" y="149" width="0.0236%" height="15" fill="rgb(234,138,34)" fg:x="17979" fg:w="17"/><text x="25.1627%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::Swap (15 samples, 0.02%)</title><rect x="24.9363%" y="181" width="0.0208%" height="15" fill="rgb(212,95,11)" fg:x="17996" fg:w="15"/><text x="25.1863%" y="191.50"></text></g><g><title>httpmq-rs`bool rocksdb::DBImpl::MultiCFSnapshot&lt;std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt; &gt;(rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, std::__1::function&lt;rocksdb::DBImpl::MultiGetColumnFamilyData* (std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair&lt;unsigned int const, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::iterator&amp;)&gt;&amp;, std::__1::unordered_map&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData, std::__1::hash&lt;unsigned int&gt;, std::__1::equal_to&lt;unsigned int&gt;, std::__1::allocator&lt;std::__1::pair (160 samples, 0.22%)</title><rect x="24.7464%" y="197" width="0.2217%" height="15" fill="rgb(240,179,47)" fg:x="17859" fg:w="160"/><text x="24.9964%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.01%)</title><rect x="24.9570%" y="181" width="0.0111%" height="15" fill="rgb(240,163,11)" fg:x="18011" fg:w="8"/><text x="25.2070%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FilePicker::PrepareNextLevel (13 samples, 0.02%)</title><rect x="24.9723%" y="197" width="0.0180%" height="15" fill="rgb(236,37,12)" fg:x="18022" fg:w="13"/><text x="25.2223%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (19 samples, 0.03%)</title><rect x="24.9903%" y="197" width="0.0263%" height="15" fill="rgb(232,164,16)" fg:x="18035" fg:w="19"/><text x="25.2403%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCache::GetHash (10 samples, 0.01%)</title><rect x="25.0360%" y="181" width="0.0139%" height="15" fill="rgb(244,205,15)" fg:x="18068" fg:w="10"/><text x="25.2860%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::LRU_Insert (10 samples, 0.01%)</title><rect x="25.0818%" y="165" width="0.0139%" height="15" fill="rgb(223,117,47)" fg:x="18101" fg:w="10"/><text x="25.3318%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (24 samples, 0.03%)</title><rect x="25.0984%" y="149" width="0.0333%" height="15" fill="rgb(244,107,35)" fg:x="18113" fg:w="24"/><text x="25.3484%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (21 samples, 0.03%)</title><rect x="25.1025%" y="133" width="0.0291%" height="15" fill="rgb(205,140,8)" fg:x="18116" fg:w="21"/><text x="25.3525%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Lock (48 samples, 0.07%)</title><rect x="25.0956%" y="165" width="0.0665%" height="15" fill="rgb(228,84,46)" fg:x="18111" fg:w="48"/><text x="25.3456%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (22 samples, 0.03%)</title><rect x="25.1316%" y="149" width="0.0305%" height="15" fill="rgb(254,188,9)" fg:x="18137" fg:w="22"/><text x="25.3816%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (10 samples, 0.01%)</title><rect x="25.1635%" y="133" width="0.0139%" height="15" fill="rgb(206,112,54)" fg:x="18160" fg:w="10"/><text x="25.4135%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (11 samples, 0.02%)</title><rect x="25.1635%" y="149" width="0.0152%" height="15" fill="rgb(216,84,49)" fg:x="18160" fg:w="11"/><text x="25.4135%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Unlock (31 samples, 0.04%)</title><rect x="25.1621%" y="165" width="0.0430%" height="15" fill="rgb(214,194,35)" fg:x="18159" fg:w="31"/><text x="25.4121%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (19 samples, 0.03%)</title><rect x="25.1787%" y="149" width="0.0263%" height="15" fill="rgb(249,28,3)" fg:x="18171" fg:w="19"/><text x="25.4287%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Release (112 samples, 0.16%)</title><rect x="25.0651%" y="181" width="0.1552%" height="15" fill="rgb(222,56,52)" fg:x="18089" fg:w="112"/><text x="25.3151%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (9 samples, 0.01%)</title><rect x="25.2078%" y="165" width="0.0125%" height="15" fill="rgb(245,217,50)" fg:x="18192" fg:w="9"/><text x="25.4578%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Release (18 samples, 0.02%)</title><rect x="25.2203%" y="181" width="0.0249%" height="15" fill="rgb(213,201,24)" fg:x="18201" fg:w="18"/><text x="25.4703%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::~Cleanable (170 samples, 0.24%)</title><rect x="25.0249%" y="197" width="0.2356%" height="15" fill="rgb(248,116,28)" fg:x="18060" fg:w="170"/><text x="25.2749%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion (15 samples, 0.02%)</title><rect x="25.2605%" y="197" width="0.0208%" height="15" fill="rgb(219,72,43)" fg:x="18230" fg:w="15"/><text x="25.5105%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::CompareAndSwap (8 samples, 0.01%)</title><rect x="25.2910%" y="181" width="0.0111%" height="15" fill="rgb(209,138,14)" fg:x="18252" fg:w="8"/><text x="25.5410%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap (31 samples, 0.04%)</title><rect x="25.3104%" y="181" width="0.0430%" height="15" fill="rgb(222,18,33)" fg:x="18266" fg:w="31"/><text x="25.5604%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion (57 samples, 0.08%)</title><rect x="25.2813%" y="197" width="0.0790%" height="15" fill="rgb(213,199,7)" fg:x="18245" fg:w="57"/><text x="25.5313%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::CleanupSuperVersion (8 samples, 0.01%)</title><rect x="25.3603%" y="197" width="0.0111%" height="15" fill="rgb(250,110,10)" fg:x="18302" fg:w="8"/><text x="25.6103%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::SuperVersion::~SuperVersion (8 samples, 0.01%)</title><rect x="25.3603%" y="181" width="0.0111%" height="15" fill="rgb(248,123,6)" fg:x="18302" fg:w="8"/><text x="25.6103%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::~MemTable (8 samples, 0.01%)</title><rect x="25.3603%" y="165" width="0.0111%" height="15" fill="rgb(206,91,31)" fg:x="18302" fg:w="8"/><text x="25.6103%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::Arena::~Arena (8 samples, 0.01%)</title><rect x="25.3603%" y="149" width="0.0111%" height="15" fill="rgb(211,154,13)" fg:x="18302" fg:w="8"/><text x="25.6103%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (8 samples, 0.01%)</title><rect x="25.3603%" y="133" width="0.0111%" height="15" fill="rgb(225,148,7)" fg:x="18302" fg:w="8"/><text x="25.6103%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`madvise (8 samples, 0.01%)</title><rect x="25.3603%" y="117" width="0.0111%" height="15" fill="rgb(220,160,43)" fg:x="18302" fg:w="8"/><text x="25.6103%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::EncodeVarint32 (14 samples, 0.02%)</title><rect x="25.3714%" y="197" width="0.0194%" height="15" fill="rgb(213,52,39)" fg:x="18310" fg:w="14"/><text x="25.6214%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::GetPerfLevel (23 samples, 0.03%)</title><rect x="25.3935%" y="197" width="0.0319%" height="15" fill="rgb(243,137,7)" fg:x="18326" fg:w="23"/><text x="25.6435%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::LookupKey::LookupKey (41 samples, 0.06%)</title><rect x="25.4309%" y="197" width="0.0568%" height="15" fill="rgb(230,79,13)" fg:x="18353" fg:w="41"/><text x="25.6809%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.02%)</title><rect x="25.4642%" y="181" width="0.0236%" height="15" fill="rgb(247,105,23)" fg:x="18377" fg:w="17"/><text x="25.7142%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (21 samples, 0.03%)</title><rect x="26.0448%" y="165" width="0.0291%" height="15" fill="rgb(223,179,41)" fg:x="18796" fg:w="21"/><text x="26.2948%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (19 samples, 0.03%)</title><rect x="26.0739%" y="165" width="0.0263%" height="15" fill="rgb(218,9,34)" fg:x="18817" fg:w="19"/><text x="26.3239%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (106 samples, 0.15%)</title><rect x="26.1972%" y="149" width="0.1469%" height="15" fill="rgb(222,106,8)" fg:x="18906" fg:w="106"/><text x="26.4472%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (66 samples, 0.09%)</title><rect x="26.2526%" y="133" width="0.0915%" height="15" fill="rgb(211,220,0)" fg:x="18946" fg:w="66"/><text x="26.5026%" y="143.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (23 samples, 0.03%)</title><rect x="26.3441%" y="149" width="0.0319%" height="15" fill="rgb(229,52,16)" fg:x="19012" fg:w="23"/><text x="26.5941%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (20 samples, 0.03%)</title><rect x="26.3760%" y="149" width="0.0277%" height="15" fill="rgb(212,155,18)" fg:x="19035" fg:w="20"/><text x="26.6260%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (225 samples, 0.31%)</title><rect x="26.1002%" y="165" width="0.3118%" height="15" fill="rgb(242,21,14)" fg:x="18836" fg:w="225"/><text x="26.3502%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (8 samples, 0.01%)</title><rect x="26.5062%" y="149" width="0.0111%" height="15" fill="rgb(222,19,48)" fg:x="19129" fg:w="8"/><text x="26.7562%" y="159.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external (10 samples, 0.01%)</title><rect x="26.5173%" y="149" width="0.0139%" height="15" fill="rgb(232,45,27)" fg:x="19137" fg:w="10"/><text x="26.7673%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::SaveValue (90 samples, 0.12%)</title><rect x="26.4148%" y="165" width="0.1247%" height="15" fill="rgb(249,103,42)" fg:x="19063" fg:w="90"/><text x="26.6648%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (696 samples, 0.96%)</title><rect x="25.6069%" y="181" width="0.9644%" height="15" fill="rgb(246,81,33)" fg:x="18480" fg:w="696"/><text x="25.8569%" y="191.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="26.5561%" y="165" width="0.0152%" height="15" fill="rgb(252,33,42)" fg:x="19165" fg:w="11"/><text x="26.8061%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::NewRangeTombstoneIterator (14 samples, 0.02%)</title><rect x="26.5755%" y="181" width="0.0194%" height="15" fill="rgb(209,212,41)" fg:x="19179" fg:w="14"/><text x="26.8255%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableRep::KeyComparator::decode_key (15 samples, 0.02%)</title><rect x="26.5949%" y="181" width="0.0208%" height="15" fill="rgb(207,154,6)" fg:x="19193" fg:w="15"/><text x="26.8449%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::SaveValue (8 samples, 0.01%)</title><rect x="26.6157%" y="181" width="0.0111%" height="15" fill="rgb(223,64,47)" fg:x="19208" fg:w="8"/><text x="26.8657%" y="191.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (8 samples, 0.01%)</title><rect x="26.6268%" y="181" width="0.0111%" height="15" fill="rgb(211,161,38)" fg:x="19216" fg:w="8"/><text x="26.8768%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (857 samples, 1.19%)</title><rect x="25.4878%" y="197" width="1.1875%" height="15" fill="rgb(219,138,40)" fg:x="18394" fg:w="857"/><text x="25.7378%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (27 samples, 0.04%)</title><rect x="26.6378%" y="181" width="0.0374%" height="15" fill="rgb(241,228,46)" fg:x="19224" fg:w="27"/><text x="26.8878%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::NewRangeTombstoneIterator (12 samples, 0.02%)</title><rect x="26.6753%" y="197" width="0.0166%" height="15" fill="rgb(223,209,38)" fg:x="19251" fg:w="12"/><text x="26.9253%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (35 samples, 0.05%)</title><rect x="26.6919%" y="197" width="0.0485%" height="15" fill="rgb(236,164,45)" fg:x="19263" fg:w="35"/><text x="26.9419%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (14 samples, 0.02%)</title><rect x="26.7210%" y="181" width="0.0194%" height="15" fill="rgb(231,15,5)" fg:x="19284" fg:w="14"/><text x="26.9710%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Get(rocksdb::LookupKey const&amp;, void*, bool (*) (12 samples, 0.02%)</title><rect x="26.7238%" y="165" width="0.0166%" height="15" fill="rgb(252,35,15)" fg:x="19286" fg:w="12"/><text x="26.9738%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::ThreadLocalPtr::CompareAndSwap (8 samples, 0.01%)</title><rect x="26.7473%" y="197" width="0.0111%" height="15" fill="rgb(248,181,18)" fg:x="19303" fg:w="8"/><text x="26.9973%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (18 samples, 0.02%)</title><rect x="27.0799%" y="181" width="0.0249%" height="15" fill="rgb(233,39,42)" fg:x="19543" fg:w="18"/><text x="27.3299%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::CompareWithoutTimestamp (61 samples, 0.08%)</title><rect x="27.1921%" y="165" width="0.0845%" height="15" fill="rgb(238,110,33)" fg:x="19624" fg:w="61"/><text x="27.4421%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (35 samples, 0.05%)</title><rect x="27.2281%" y="149" width="0.0485%" height="15" fill="rgb(233,195,10)" fg:x="19650" fg:w="35"/><text x="27.4781%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (11 samples, 0.02%)</title><rect x="27.3819%" y="133" width="0.0152%" height="15" fill="rgb(254,105,3)" fg:x="19761" fg:w="11"/><text x="27.6319%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FindFileInRange (65 samples, 0.09%)</title><rect x="27.3127%" y="149" width="0.0901%" height="15" fill="rgb(221,225,9)" fg:x="19711" fg:w="65"/><text x="27.5627%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FilePicker::PrepareNextLevel (99 samples, 0.14%)</title><rect x="27.2766%" y="165" width="0.1372%" height="15" fill="rgb(224,227,45)" fg:x="19685" fg:w="99"/><text x="27.5266%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.01%)</title><rect x="27.4027%" y="149" width="0.0111%" height="15" fill="rgb(229,198,43)" fg:x="19776" fg:w="8"/><text x="27.6527%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FindFileInRange (18 samples, 0.02%)</title><rect x="27.4138%" y="165" width="0.0249%" height="15" fill="rgb(206,209,35)" fg:x="19784" fg:w="18"/><text x="27.6638%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FilePicker::GetNextFile (264 samples, 0.37%)</title><rect x="27.1048%" y="181" width="0.3658%" height="15" fill="rgb(245,195,53)" fg:x="19561" fg:w="264"/><text x="27.3548%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (20 samples, 0.03%)</title><rect x="27.4429%" y="165" width="0.0277%" height="15" fill="rgb(240,92,26)" fg:x="19805" fg:w="20"/><text x="27.6929%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::FilePicker::PrepareNextLevel (20 samples, 0.03%)</title><rect x="27.4706%" y="181" width="0.0277%" height="15" fill="rgb(207,40,23)" fg:x="19825" fg:w="20"/><text x="27.7206%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::Get (17 samples, 0.02%)</title><rect x="27.4983%" y="181" width="0.0236%" height="15" fill="rgb(223,111,35)" fg:x="19845" fg:w="17"/><text x="27.7483%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::NewRangeTombstoneIterator (26 samples, 0.04%)</title><rect x="27.5219%" y="181" width="0.0360%" height="15" fill="rgb(229,147,28)" fg:x="19862" fg:w="26"/><text x="27.7719%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::Random::GetTLSInstance (10 samples, 0.01%)</title><rect x="27.5939%" y="165" width="0.0139%" height="15" fill="rgb(211,29,28)" fg:x="19914" fg:w="10"/><text x="27.8439%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (14 samples, 0.02%)</title><rect x="27.6078%" y="165" width="0.0194%" height="15" fill="rgb(228,72,33)" fg:x="19924" fg:w="14"/><text x="27.8578%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (101 samples, 0.14%)</title><rect x="27.5718%" y="181" width="0.1400%" height="15" fill="rgb(205,214,31)" fg:x="19898" fg:w="101"/><text x="27.8218%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (61 samples, 0.08%)</title><rect x="27.6272%" y="165" width="0.0845%" height="15" fill="rgb(224,111,15)" fg:x="19938" fg:w="61"/><text x="27.8772%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::BinarySearchIndexReader::NewIterator (19 samples, 0.03%)</title><rect x="27.8406%" y="165" width="0.0263%" height="15" fill="rgb(253,21,26)" fg:x="20092" fg:w="19"/><text x="28.0906%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (10 samples, 0.01%)</title><rect x="28.1745%" y="149" width="0.0139%" height="15" fill="rgb(245,139,43)" fg:x="20333" fg:w="10"/><text x="28.4245%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::Block::NewIndexIterator (37 samples, 0.05%)</title><rect x="28.2743%" y="133" width="0.0513%" height="15" fill="rgb(252,170,7)" fg:x="20405" fg:w="37"/><text x="28.5243%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::Initialize (8 samples, 0.01%)</title><rect x="28.3145%" y="117" width="0.0111%" height="15" fill="rgb(231,118,14)" fg:x="20434" fg:w="8"/><text x="28.5645%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry (11 samples, 0.02%)</title><rect x="28.3256%" y="133" width="0.0152%" height="15" fill="rgb(238,83,0)" fg:x="20442" fg:w="11"/><text x="28.5756%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::BinarySearchIndexReader::NewIterator (110 samples, 0.15%)</title><rect x="28.1981%" y="149" width="0.1524%" height="15" fill="rgb(221,39,39)" fg:x="20350" fg:w="110"/><text x="28.4481%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::Block::NewDataIterator (14 samples, 0.02%)</title><rect x="28.3505%" y="149" width="0.0194%" height="15" fill="rgb(222,119,46)" fg:x="20460" fg:w="14"/><text x="28.6005%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::Block::NewIndexIterator (8 samples, 0.01%)</title><rect x="28.3699%" y="149" width="0.0111%" height="15" fill="rgb(222,165,49)" fg:x="20474" fg:w="8"/><text x="28.6199%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::FullFilterKeyMayMatch (17 samples, 0.02%)</title><rect x="28.3810%" y="149" width="0.0236%" height="15" fill="rgb(219,113,52)" fg:x="20482" fg:w="17"/><text x="28.6310%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::IndexReaderCommon::GetOrReadIndexBlock(bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry (17 samples, 0.02%)</title><rect x="28.4046%" y="149" width="0.0236%" height="15" fill="rgb(214,7,15)" fg:x="20499" fg:w="17"/><text x="28.6546%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Valid (31 samples, 0.04%)</title><rect x="28.4281%" y="149" width="0.0430%" height="15" fill="rgb(235,32,4)" fg:x="20516" fg:w="31"/><text x="28.6781%" y="159.50"></text></g><g><title>httpmq-rs`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::BinarySeek&lt;rocksdb::DecodeKeyV4&gt; (9 samples, 0.01%)</title><rect x="28.4988%" y="133" width="0.0125%" height="15" fill="rgb(238,90,54)" fg:x="20567" fg:w="9"/><text x="28.7488%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::NextImpl (8 samples, 0.01%)</title><rect x="28.5126%" y="133" width="0.0111%" height="15" fill="rgb(213,208,19)" fg:x="20577" fg:w="8"/><text x="28.7626%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (10 samples, 0.01%)</title><rect x="29.2290%" y="101" width="0.0139%" height="15" fill="rgb(233,156,4)" fg:x="21094" fg:w="10"/><text x="29.4790%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (89 samples, 0.12%)</title><rect x="29.4064%" y="85" width="0.1233%" height="15" fill="rgb(207,194,5)" fg:x="21222" fg:w="89"/><text x="29.6564%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (45 samples, 0.06%)</title><rect x="29.4674%" y="69" width="0.0624%" height="15" fill="rgb(206,111,30)" fg:x="21266" fg:w="45"/><text x="29.7174%" y="79.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (16 samples, 0.02%)</title><rect x="29.5297%" y="85" width="0.0222%" height="15" fill="rgb(243,70,54)" fg:x="21311" fg:w="16"/><text x="29.7797%" y="95.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (31 samples, 0.04%)</title><rect x="29.5519%" y="85" width="0.0430%" height="15" fill="rgb(242,28,8)" fg:x="21327" fg:w="31"/><text x="29.8019%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::CompareCurrentKey (260 samples, 0.36%)</title><rect x="29.2429%" y="101" width="0.3603%" height="15" fill="rgb(219,106,18)" fg:x="21104" fg:w="260"/><text x="29.4929%" y="111.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (12 samples, 0.02%)</title><rect x="29.6031%" y="101" width="0.0166%" height="15" fill="rgb(244,222,10)" fg:x="21364" fg:w="12"/><text x="29.8531%" y="111.50"></text></g><g><title>httpmq-rs`bool rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::BinarySeek&lt;rocksdb::DecodeKeyV4&gt; (785 samples, 1.09%)</title><rect x="28.5500%" y="117" width="1.0877%" height="15" fill="rgb(236,179,52)" fg:x="20604" fg:w="785"/><text x="28.8000%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.02%)</title><rect x="29.6198%" y="101" width="0.0180%" height="15" fill="rgb(213,23,39)" fg:x="21376" fg:w="13"/><text x="29.8698%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::DecodeCurrentValue (61 samples, 0.08%)</title><rect x="29.6877%" y="101" width="0.0845%" height="15" fill="rgb(238,48,10)" fg:x="21425" fg:w="61"/><text x="29.9377%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::IndexValue::DecodeFrom (43 samples, 0.06%)</title><rect x="29.7126%" y="85" width="0.0596%" height="15" fill="rgb(251,196,23)" fg:x="21443" fg:w="43"/><text x="29.9626%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::GetVarint64Ptr (11 samples, 0.02%)</title><rect x="29.7570%" y="69" width="0.0152%" height="15" fill="rgb(250,152,24)" fg:x="21475" fg:w="11"/><text x="30.0070%" y="79.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::ParseNextIndexKey (103 samples, 0.14%)</title><rect x="29.6544%" y="117" width="0.1427%" height="15" fill="rgb(209,150,17)" fg:x="21401" fg:w="103"/><text x="29.9044%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::IndexValue::DecodeFrom (18 samples, 0.02%)</title><rect x="29.7722%" y="101" width="0.0249%" height="15" fill="rgb(234,202,34)" fg:x="21486" fg:w="18"/><text x="30.0222%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::SeekImpl (931 samples, 1.29%)</title><rect x="28.5237%" y="133" width="1.2900%" height="15" fill="rgb(253,148,53)" fg:x="20585" fg:w="931"/><text x="28.7737%" y="143.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.01%)</title><rect x="29.7999%" y="117" width="0.0139%" height="15" fill="rgb(218,129,16)" fg:x="21506" fg:w="10"/><text x="30.0499%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Seek (970 samples, 1.34%)</title><rect x="28.4808%" y="149" width="1.3441%" height="15" fill="rgb(216,85,19)" fg:x="20554" fg:w="970"/><text x="28.7308%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::CachableEntry&lt;rocksdb::UncompressionDict&gt;::ReleaseResource (9 samples, 0.01%)</title><rect x="29.8249%" y="149" width="0.0125%" height="15" fill="rgb(235,228,7)" fg:x="21524" fg:w="9"/><text x="30.0749%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::Block::NewDataIterator (20 samples, 0.03%)</title><rect x="29.9953%" y="133" width="0.0277%" height="15" fill="rgb(245,175,0)" fg:x="21647" fg:w="20"/><text x="30.2453%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (8 samples, 0.01%)</title><rect x="30.0327%" y="133" width="0.0111%" height="15" fill="rgb(208,168,36)" fg:x="21674" fg:w="8"/><text x="30.2827%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry (20 samples, 0.03%)</title><rect x="30.0812%" y="117" width="0.0277%" height="15" fill="rgb(246,171,24)" fg:x="21709" fg:w="20"/><text x="30.3312%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::UpdateCacheHitMetrics (15 samples, 0.02%)</title><rect x="30.2309%" y="101" width="0.0208%" height="15" fill="rgb(215,142,24)" fg:x="21817" fg:w="15"/><text x="30.4809%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Lookup (9 samples, 0.01%)</title><rect x="30.2696%" y="101" width="0.0125%" height="15" fill="rgb(250,187,7)" fg:x="21845" fg:w="9"/><text x="30.5196%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Lookup (11 samples, 0.02%)</title><rect x="30.2904%" y="101" width="0.0152%" height="15" fill="rgb(228,66,33)" fg:x="21860" fg:w="11"/><text x="30.5404%" y="111.50"></text></g><g><title>httpmq-rs`ROCKSDB_XXH3p_64bits (12 samples, 0.02%)</title><rect x="30.3694%" y="85" width="0.0166%" height="15" fill="rgb(234,215,21)" fg:x="21917" fg:w="12"/><text x="30.6194%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::UpdateCacheHitMetrics (42 samples, 0.06%)</title><rect x="30.3860%" y="85" width="0.0582%" height="15" fill="rgb(222,191,20)" fg:x="21929" fg:w="42"/><text x="30.6360%" y="95.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (17 samples, 0.02%)</title><rect x="30.4207%" y="69" width="0.0236%" height="15" fill="rgb(245,79,54)" fg:x="21954" fg:w="17"/><text x="30.6707%" y="79.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCache::GetShard (11 samples, 0.02%)</title><rect x="30.4567%" y="85" width="0.0152%" height="15" fill="rgb(240,10,37)" fg:x="21980" fg:w="11"/><text x="30.7067%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (47 samples, 0.07%)</title><rect x="30.5315%" y="37" width="0.0651%" height="15" fill="rgb(214,192,32)" fg:x="22034" fg:w="47"/><text x="30.7815%" y="47.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (51 samples, 0.07%)</title><rect x="30.5274%" y="53" width="0.0707%" height="15" fill="rgb(209,36,54)" fg:x="22031" fg:w="51"/><text x="30.7774%" y="63.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Lock (97 samples, 0.13%)</title><rect x="30.5246%" y="69" width="0.1344%" height="15" fill="rgb(220,10,11)" fg:x="22029" fg:w="97"/><text x="30.7746%" y="79.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (44 samples, 0.06%)</title><rect x="30.5980%" y="53" width="0.0610%" height="15" fill="rgb(221,106,17)" fg:x="22082" fg:w="44"/><text x="30.8480%" y="63.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (30 samples, 0.04%)</title><rect x="30.6604%" y="53" width="0.0416%" height="15" fill="rgb(251,142,44)" fg:x="22127" fg:w="30"/><text x="30.9104%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (30 samples, 0.04%)</title><rect x="30.6604%" y="37" width="0.0416%" height="15" fill="rgb(238,13,15)" fg:x="22127" fg:w="30"/><text x="30.9104%" y="47.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Unlock (52 samples, 0.07%)</title><rect x="30.6590%" y="69" width="0.0721%" height="15" fill="rgb(208,107,27)" fg:x="22126" fg:w="52"/><text x="30.9090%" y="79.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (21 samples, 0.03%)</title><rect x="30.7020%" y="53" width="0.0291%" height="15" fill="rgb(205,136,37)" fg:x="22157" fg:w="21"/><text x="30.9520%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.02%)</title><rect x="30.7311%" y="69" width="0.0166%" height="15" fill="rgb(250,205,27)" fg:x="22178" fg:w="12"/><text x="30.9811%" y="79.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (22 samples, 0.03%)</title><rect x="30.7505%" y="69" width="0.0305%" height="15" fill="rgb(210,80,43)" fg:x="22192" fg:w="22"/><text x="31.0005%" y="79.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Lookup (221 samples, 0.31%)</title><rect x="30.4803%" y="85" width="0.3062%" height="15" fill="rgb(247,160,36)" fg:x="21997" fg:w="221"/><text x="30.7303%" y="95.50"></text></g><g><title>httpmq-rs`ROCKSDB_XXH3p_64bits (15 samples, 0.02%)</title><rect x="30.8267%" y="69" width="0.0208%" height="15" fill="rgb(234,13,49)" fg:x="22247" fg:w="15"/><text x="31.0767%" y="79.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Lookup (49 samples, 0.07%)</title><rect x="30.7893%" y="85" width="0.0679%" height="15" fill="rgb(234,122,0)" fg:x="22220" fg:w="49"/><text x="31.0393%" y="95.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.02%)</title><rect x="30.8627%" y="85" width="0.0180%" height="15" fill="rgb(207,146,38)" fg:x="22273" fg:w="13"/><text x="31.1127%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry (416 samples, 0.58%)</title><rect x="30.3057%" y="101" width="0.5764%" height="15" fill="rgb(207,177,25)" fg:x="21871" fg:w="416"/><text x="30.5557%" y="111.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (561 samples, 0.78%)</title><rect x="30.1089%" y="117" width="0.7774%" height="15" fill="rgb(211,178,42)" fg:x="21729" fg:w="561"/><text x="30.3589%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (632 samples, 0.88%)</title><rect x="30.0438%" y="133" width="0.8757%" height="15" fill="rgb(230,69,54)" fg:x="21682" fg:w="632"/><text x="30.2938%" y="143.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (24 samples, 0.03%)</title><rect x="30.8863%" y="117" width="0.0333%" height="15" fill="rgb(214,135,41)" fg:x="22290" fg:w="24"/><text x="31.1363%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (780 samples, 1.08%)</title><rect x="29.8581%" y="149" width="1.0808%" height="15" fill="rgb(237,67,25)" fg:x="21548" fg:w="780"/><text x="30.1081%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.01%)</title><rect x="30.9251%" y="133" width="0.0139%" height="15" fill="rgb(222,189,50)" fg:x="22318" fg:w="10"/><text x="31.1751%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Valid (12 samples, 0.02%)</title><rect x="30.9708%" y="133" width="0.0166%" height="15" fill="rgb(245,148,34)" fg:x="22351" fg:w="12"/><text x="31.2208%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::NextImpl (16 samples, 0.02%)</title><rect x="30.9916%" y="133" width="0.0222%" height="15" fill="rgb(222,29,6)" fg:x="22366" fg:w="16"/><text x="31.2416%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (16 samples, 0.02%)</title><rect x="31.1426%" y="85" width="0.0222%" height="15" fill="rgb(221,189,43)" fg:x="22475" fg:w="16"/><text x="31.3926%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.02%)</title><rect x="31.1482%" y="69" width="0.0166%" height="15" fill="rgb(207,36,27)" fg:x="22479" fg:w="12"/><text x="31.3982%" y="79.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::CompareCurrentKey (36 samples, 0.05%)</title><rect x="31.1315%" y="101" width="0.0499%" height="15" fill="rgb(217,90,24)" fg:x="22467" fg:w="36"/><text x="31.3815%" y="111.50"></text></g><g><title>httpmq-rs`bool rocksdb::BlockIter&lt;rocksdb::Slice&gt;::BinarySeek&lt;rocksdb::DecodeKey&gt; (92 samples, 0.13%)</title><rect x="31.0553%" y="117" width="0.1275%" height="15" fill="rgb(224,66,35)" fg:x="22412" fg:w="92"/><text x="31.3053%" y="127.50"></text></g><g><title>httpmq-rs`bool rocksdb::DataBlockIter::ParseNextDataKey&lt;rocksdb::DecodeEntry&gt; (44 samples, 0.06%)</title><rect x="31.1828%" y="117" width="0.0610%" height="15" fill="rgb(221,13,50)" fg:x="22504" fg:w="44"/><text x="31.4328%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (12 samples, 0.02%)</title><rect x="31.2576%" y="101" width="0.0166%" height="15" fill="rgb(236,68,49)" fg:x="22558" fg:w="12"/><text x="31.5076%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (10 samples, 0.01%)</title><rect x="31.2604%" y="85" width="0.0139%" height="15" fill="rgb(229,146,28)" fg:x="22560" fg:w="10"/><text x="31.5104%" y="95.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::CompareCurrentKey (28 samples, 0.04%)</title><rect x="31.2465%" y="117" width="0.0388%" height="15" fill="rgb(225,31,38)" fg:x="22550" fg:w="28"/><text x="31.4965%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (14 samples, 0.02%)</title><rect x="31.2909%" y="117" width="0.0194%" height="15" fill="rgb(250,208,3)" fg:x="22582" fg:w="14"/><text x="31.5409%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::SeekImpl (228 samples, 0.32%)</title><rect x="31.0137%" y="133" width="0.3159%" height="15" fill="rgb(246,54,23)" fg:x="22382" fg:w="228"/><text x="31.2637%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.02%)</title><rect x="31.3103%" y="117" width="0.0194%" height="15" fill="rgb(243,76,11)" fg:x="22596" fg:w="14"/><text x="31.5603%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::SeekForGet (286 samples, 0.40%)</title><rect x="30.9389%" y="149" width="0.3963%" height="15" fill="rgb(245,21,50)" fg:x="22328" fg:w="286"/><text x="31.1889%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::SeekImpl (9 samples, 0.01%)</title><rect x="31.3352%" y="149" width="0.0125%" height="15" fill="rgb(228,9,43)" fg:x="22614" fg:w="9"/><text x="31.5852%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::~DataBlockIter (16 samples, 0.02%)</title><rect x="31.3477%" y="149" width="0.0222%" height="15" fill="rgb(208,100,47)" fg:x="22623" fg:w="16"/><text x="31.5977%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (8 samples, 0.01%)</title><rect x="31.4502%" y="133" width="0.0111%" height="15" fill="rgb(232,26,8)" fg:x="22697" fg:w="8"/><text x="31.7002%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::DelegateCleanupsTo (10 samples, 0.01%)</title><rect x="31.4613%" y="133" width="0.0139%" height="15" fill="rgb(216,166,38)" fg:x="22705" fg:w="10"/><text x="31.7113%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::GetContext::SaveValue (79 samples, 0.11%)</title><rect x="31.3699%" y="149" width="0.1095%" height="15" fill="rgb(251,202,51)" fg:x="22639" fg:w="79"/><text x="31.6199%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::SeekImpl (20 samples, 0.03%)</title><rect x="31.4793%" y="149" width="0.0277%" height="15" fill="rgb(254,216,34)" fg:x="22718" fg:w="20"/><text x="31.7293%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::~IndexBlockIter (11 samples, 0.02%)</title><rect x="31.5154%" y="149" width="0.0152%" height="15" fill="rgb(251,32,27)" fg:x="22744" fg:w="11"/><text x="31.7654%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::ParseInternalKey (19 samples, 0.03%)</title><rect x="31.5306%" y="149" width="0.0263%" height="15" fill="rgb(208,127,28)" fg:x="22755" fg:w="19"/><text x="31.7806%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (27 samples, 0.04%)</title><rect x="31.5569%" y="149" width="0.0374%" height="15" fill="rgb(224,137,22)" fg:x="22774" fg:w="27"/><text x="31.8069%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::Get (2,742 samples, 3.80%)</title><rect x="27.8669%" y="165" width="3.7995%" height="15" fill="rgb(254,70,32)" fg:x="20111" fg:w="2742"/><text x="28.1169%" y="175.50">http..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (46 samples, 0.06%)</title><rect x="31.6026%" y="149" width="0.0637%" height="15" fill="rgb(229,75,37)" fg:x="22807" fg:w="46"/><text x="31.8526%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::status (8 samples, 0.01%)</title><rect x="31.6747%" y="165" width="0.0111%" height="15" fill="rgb(252,64,23)" fg:x="22859" fg:w="8"/><text x="31.9247%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Seek (14 samples, 0.02%)</title><rect x="31.6858%" y="165" width="0.0194%" height="15" fill="rgb(232,162,48)" fg:x="22867" fg:w="14"/><text x="31.9358%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (12 samples, 0.02%)</title><rect x="31.7149%" y="165" width="0.0166%" height="15" fill="rgb(246,160,12)" fg:x="22888" fg:w="12"/><text x="31.9649%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::~DataBlockIter (11 samples, 0.02%)</title><rect x="31.7398%" y="165" width="0.0152%" height="15" fill="rgb(247,166,0)" fg:x="22906" fg:w="11"/><text x="31.9898%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::GetContext::SaveValue (8 samples, 0.01%)</title><rect x="31.7551%" y="165" width="0.0111%" height="15" fill="rgb(249,219,21)" fg:x="22917" fg:w="8"/><text x="32.0051%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::value (10 samples, 0.01%)</title><rect x="31.7662%" y="165" width="0.0139%" height="15" fill="rgb(205,209,3)" fg:x="22925" fg:w="10"/><text x="32.0162%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::ParseInternalKey (8 samples, 0.01%)</title><rect x="31.7856%" y="165" width="0.0111%" height="15" fill="rgb(243,44,1)" fg:x="22939" fg:w="8"/><text x="32.0356%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::TableCache::Get (2,962 samples, 4.10%)</title><rect x="27.7159%" y="181" width="4.1043%" height="15" fill="rgb(206,159,16)" fg:x="20002" fg:w="2962"/><text x="27.9659%" y="191.50">http..</text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (17 samples, 0.02%)</title><rect x="31.7966%" y="165" width="0.0236%" height="15" fill="rgb(244,77,30)" fg:x="22947" fg:w="17"/><text x="32.0466%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (18 samples, 0.02%)</title><rect x="31.8230%" y="181" width="0.0249%" height="15" fill="rgb(218,69,12)" fg:x="22966" fg:w="18"/><text x="32.0730%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (3,676 samples, 5.09%)</title><rect x="26.7584%" y="197" width="5.0937%" height="15" fill="rgb(212,87,7)" fg:x="19311" fg:w="3676"/><text x="27.0084%" y="207.50">httpmq..</text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Handler::SingleDelete (40 samples, 0.06%)</title><rect x="31.8521%" y="197" width="0.0554%" height="15" fill="rgb(245,114,25)" fg:x="22987" fg:w="40"/><text x="32.1021%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (43 samples, 0.06%)</title><rect x="31.9421%" y="133" width="0.0596%" height="15" fill="rgb(210,61,42)" fg:x="23052" fg:w="43"/><text x="32.1921%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (18 samples, 0.02%)</title><rect x="31.9768%" y="117" width="0.0249%" height="15" fill="rgb(211,52,33)" fg:x="23077" fg:w="18"/><text x="32.2268%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (50 samples, 0.07%)</title><rect x="31.9338%" y="165" width="0.0693%" height="15" fill="rgb(234,58,33)" fg:x="23046" fg:w="50"/><text x="32.1838%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (45 samples, 0.06%)</title><rect x="31.9407%" y="149" width="0.0624%" height="15" fill="rgb(220,115,36)" fg:x="23051" fg:w="45"/><text x="32.1907%" y="159.50"></text></g><g><title>httpmq-rs`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::__rehash (66 samples, 0.09%)</title><rect x="31.9172%" y="197" width="0.0915%" height="15" fill="rgb(243,153,54)" fg:x="23034" fg:w="66"/><text x="32.1672%" y="207.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (54 samples, 0.07%)</title><rect x="31.9338%" y="181" width="0.0748%" height="15" fill="rgb(251,47,18)" fg:x="23046" fg:w="54"/><text x="32.1838%" y="191.50"></text></g><g><title>httpmq-rs`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::rehash (32 samples, 0.04%)</title><rect x="32.0086%" y="197" width="0.0443%" height="15" fill="rgb(242,102,42)" fg:x="23100" fg:w="32"/><text x="32.2586%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::__next_prime (28 samples, 0.04%)</title><rect x="32.0142%" y="181" width="0.0388%" height="15" fill="rgb(234,31,38)" fg:x="23104" fg:w="28"/><text x="32.2642%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (47 samples, 0.07%)</title><rect x="32.0710%" y="133" width="0.0651%" height="15" fill="rgb(221,117,51)" fg:x="23145" fg:w="47"/><text x="32.3210%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (18 samples, 0.02%)</title><rect x="32.1112%" y="117" width="0.0249%" height="15" fill="rgb(212,20,18)" fg:x="23174" fg:w="18"/><text x="32.3612%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (53 samples, 0.07%)</title><rect x="32.0641%" y="165" width="0.0734%" height="15" fill="rgb(245,133,36)" fg:x="23140" fg:w="53"/><text x="32.3141%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (50 samples, 0.07%)</title><rect x="32.0682%" y="149" width="0.0693%" height="15" fill="rgb(212,6,19)" fg:x="23143" fg:w="50"/><text x="32.3182%" y="159.50"></text></g><g><title>httpmq-rs`std::__1::vector&lt;rocksdb::Status, std::__1::allocator&lt;rocksdb::Status&gt; &gt;::vector (65 samples, 0.09%)</title><rect x="32.0530%" y="197" width="0.0901%" height="15" fill="rgb(218,1,36)" fg:x="23132" fg:w="65"/><text x="32.3030%" y="207.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (57 samples, 0.08%)</title><rect x="32.0641%" y="181" width="0.0790%" height="15" fill="rgb(246,84,54)" fg:x="23140" fg:w="57"/><text x="32.3141%" y="191.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (21 samples, 0.03%)</title><rect x="32.1431%" y="197" width="0.0291%" height="15" fill="rgb(242,110,6)" fg:x="23197" fg:w="21"/><text x="32.3931%" y="207.50"></text></g><g><title>libc+ (34 samples, 0.05%)</title><rect x="32.1722%" y="197" width="0.0471%" height="15" fill="rgb(214,47,5)" fg:x="23218" fg:w="34"/><text x="32.4222%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external (21 samples, 0.03%)</title><rect x="32.2234%" y="197" width="0.0291%" height="15" fill="rgb(218,159,25)" fg:x="23255" fg:w="21"/><text x="32.4734%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.02%)</title><rect x="32.2359%" y="181" width="0.0166%" height="15" fill="rgb(215,211,28)" fg:x="23264" fg:w="12"/><text x="32.4859%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.03%)</title><rect x="32.2996%" y="133" width="0.0305%" height="15" fill="rgb(238,59,32)" fg:x="23310" fg:w="22"/><text x="32.5496%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.01%)</title><rect x="32.3190%" y="117" width="0.0111%" height="15" fill="rgb(226,82,3)" fg:x="23324" fg:w="8"/><text x="32.5690%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (56 samples, 0.08%)</title><rect x="32.2539%" y="181" width="0.0776%" height="15" fill="rgb(240,164,32)" fg:x="23277" fg:w="56"/><text x="32.5039%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (50 samples, 0.07%)</title><rect x="32.2622%" y="165" width="0.0693%" height="15" fill="rgb(232,46,7)" fg:x="23283" fg:w="50"/><text x="32.5122%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (49 samples, 0.07%)</title><rect x="32.2636%" y="149" width="0.0679%" height="15" fill="rgb(229,129,53)" fg:x="23284" fg:w="49"/><text x="32.5136%" y="159.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (57 samples, 0.08%)</title><rect x="32.2539%" y="197" width="0.0790%" height="15" fill="rgb(234,188,29)" fg:x="23277" fg:w="57"/><text x="32.5039%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (75 samples, 0.10%)</title><rect x="32.3329%" y="197" width="0.1039%" height="15" fill="rgb(246,141,4)" fg:x="23334" fg:w="75"/><text x="32.5829%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (29 samples, 0.04%)</title><rect x="32.4618%" y="181" width="0.0402%" height="15" fill="rgb(229,23,39)" fg:x="23427" fg:w="29"/><text x="32.7118%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (29 samples, 0.04%)</title><rect x="32.4618%" y="165" width="0.0402%" height="15" fill="rgb(206,12,3)" fg:x="23427" fg:w="29"/><text x="32.7118%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (44 samples, 0.06%)</title><rect x="32.4424%" y="197" width="0.0610%" height="15" fill="rgb(252,226,20)" fg:x="23413" fg:w="44"/><text x="32.6924%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (23 samples, 0.03%)</title><rect x="32.6100%" y="165" width="0.0319%" height="15" fill="rgb(216,123,35)" fg:x="23534" fg:w="23"/><text x="32.8600%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (55 samples, 0.08%)</title><rect x="32.5726%" y="181" width="0.0762%" height="15" fill="rgb(212,68,40)" fg:x="23507" fg:w="55"/><text x="32.8226%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (106 samples, 0.15%)</title><rect x="32.5033%" y="197" width="0.1469%" height="15" fill="rgb(254,125,32)" fg:x="23457" fg:w="106"/><text x="32.7533%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.01%)</title><rect x="32.6502%" y="197" width="0.0125%" height="15" fill="rgb(253,97,22)" fg:x="23563" fg:w="9"/><text x="32.9002%" y="207.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (27 samples, 0.04%)</title><rect x="32.6682%" y="197" width="0.0374%" height="15" fill="rgb(241,101,14)" fg:x="23576" fg:w="27"/><text x="32.9182%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="32.7056%" y="197" width="0.0180%" height="15" fill="rgb(238,103,29)" fg:x="23603" fg:w="13"/><text x="32.9556%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;*, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6,078 samples, 8.42%)</title><rect x="24.3058%" y="213" width="8.4220%" height="15" fill="rgb(233,195,47)" fg:x="17541" fg:w="6078"/><text x="24.5558%" y="223.50">httpmq-rs`ro..</text></g><g><title>httpmq-rs`rocksdb::LogFileImpl::LogNumber (47 samples, 0.07%)</title><rect x="32.7278%" y="213" width="0.0651%" height="15" fill="rgb(246,218,30)" fg:x="23619" fg:w="47"/><text x="32.9778%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::LookupKey::LookupKey (17 samples, 0.02%)</title><rect x="32.7929%" y="213" width="0.0236%" height="15" fill="rgb(219,145,47)" fg:x="23666" fg:w="17"/><text x="33.0429%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (17 samples, 0.02%)</title><rect x="32.8165%" y="213" width="0.0236%" height="15" fill="rgb(243,12,26)" fg:x="23683" fg:w="17"/><text x="33.0665%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (16 samples, 0.02%)</title><rect x="32.8400%" y="213" width="0.0222%" height="15" fill="rgb(214,87,16)" fg:x="23700" fg:w="16"/><text x="33.0900%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (16 samples, 0.02%)</title><rect x="32.8622%" y="213" width="0.0222%" height="15" fill="rgb(208,99,42)" fg:x="23716" fg:w="16"/><text x="33.1122%" y="223.50"></text></g><g><title>httpmq-rs`std::__1::__function::__func&lt;rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;*, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;*)::$_0, std::__1::allocator&lt;rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string (21 samples, 0.03%)</title><rect x="32.8844%" y="213" width="0.0291%" height="15" fill="rgb(253,99,2)" fg:x="23732" fg:w="21"/><text x="33.1344%" y="223.50"></text></g><g><title>httpmq-rs`std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::__unordered_map_hasher&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::hash&lt;unsigned int&gt;, true&gt;, std::__1::__unordered_map_equal&lt;unsigned int, std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt;, std::__1::equal_to&lt;unsigned int&gt;, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;unsigned int, rocksdb::DBImpl::MultiGetColumnFamilyData&gt; &gt; &gt;::rehash (13 samples, 0.02%)</title><rect x="32.9135%" y="213" width="0.0180%" height="15" fill="rgb(220,168,23)" fg:x="23753" fg:w="13"/><text x="33.1635%" y="223.50"></text></g><g><title>libc+ (34 samples, 0.05%)</title><rect x="32.9384%" y="213" width="0.0471%" height="15" fill="rgb(242,38,24)" fg:x="23771" fg:w="34"/><text x="33.1884%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::assign (8 samples, 0.01%)</title><rect x="32.9883%" y="213" width="0.0111%" height="15" fill="rgb(225,182,9)" fg:x="23807" fg:w="8"/><text x="33.2383%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (16 samples, 0.02%)</title><rect x="33.0091%" y="213" width="0.0222%" height="15" fill="rgb(243,178,37)" fg:x="23822" fg:w="16"/><text x="33.2591%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.02%)</title><rect x="33.0326%" y="213" width="0.0194%" height="15" fill="rgb(232,139,19)" fg:x="23839" fg:w="14"/><text x="33.2826%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6,362 samples, 8.82%)</title><rect x="24.2448%" y="229" width="8.8155%" height="15" fill="rgb(225,201,24)" fg:x="17497" fg:w="6362"/><text x="24.4948%" y="239.50">httpmq-rs`ro..</text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.01%)</title><rect x="33.1116%" y="165" width="0.0111%" height="15" fill="rgb(221,47,46)" fg:x="23896" fg:w="8"/><text x="33.3616%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (55 samples, 0.08%)</title><rect x="33.0687%" y="213" width="0.0762%" height="15" fill="rgb(249,23,13)" fg:x="23865" fg:w="55"/><text x="33.3187%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (49 samples, 0.07%)</title><rect x="33.0770%" y="197" width="0.0679%" height="15" fill="rgb(219,9,5)" fg:x="23871" fg:w="49"/><text x="33.3270%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (48 samples, 0.07%)</title><rect x="33.0784%" y="181" width="0.0665%" height="15" fill="rgb(254,171,16)" fg:x="23872" fg:w="48"/><text x="33.3284%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.02%)</title><rect x="33.1227%" y="165" width="0.0222%" height="15" fill="rgb(230,171,20)" fg:x="23904" fg:w="16"/><text x="33.3727%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.01%)</title><rect x="33.1338%" y="149" width="0.0111%" height="15" fill="rgb(210,71,41)" fg:x="23912" fg:w="8"/><text x="33.3838%" y="159.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (57 samples, 0.08%)</title><rect x="33.0687%" y="229" width="0.0790%" height="15" fill="rgb(206,173,20)" fg:x="23865" fg:w="57"/><text x="33.3187%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.02%)</title><rect x="33.1490%" y="229" width="0.0208%" height="15" fill="rgb(233,88,34)" fg:x="23923" fg:w="15"/><text x="33.3990%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.02%)</title><rect x="33.1518%" y="213" width="0.0180%" height="15" fill="rgb(223,209,46)" fg:x="23925" fg:w="13"/><text x="33.4018%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (13 samples, 0.02%)</title><rect x="33.1518%" y="197" width="0.0180%" height="15" fill="rgb(250,43,18)" fg:x="23925" fg:w="13"/><text x="33.4018%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.02%)</title><rect x="33.2363%" y="197" width="0.0194%" height="15" fill="rgb(208,13,10)" fg:x="23986" fg:w="14"/><text x="33.4863%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (72 samples, 0.10%)</title><rect x="33.1698%" y="229" width="0.0998%" height="15" fill="rgb(212,200,36)" fg:x="23938" fg:w="72"/><text x="33.4198%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (56 samples, 0.08%)</title><rect x="33.1920%" y="213" width="0.0776%" height="15" fill="rgb(225,90,30)" fg:x="23954" fg:w="56"/><text x="33.4420%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (10 samples, 0.01%)</title><rect x="33.2557%" y="197" width="0.0139%" height="15" fill="rgb(236,182,39)" fg:x="24000" fg:w="10"/><text x="33.5057%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::DB::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (6,537 samples, 9.06%)</title><rect x="24.2185%" y="245" width="9.0580%" height="15" fill="rgb(212,144,35)" fg:x="17478" fg:w="6537"/><text x="24.4685%" y="255.50">httpmq-rs`roc..</text></g><g><title>httpmq-rs`rocksdb::DBImpl::DefaultColumnFamily (25 samples, 0.03%)</title><rect x="33.2765%" y="245" width="0.0346%" height="15" fill="rgb(228,63,44)" fg:x="24015" fg:w="25"/><text x="33.5265%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MultiGet(rocksdb::ReadOptions const&amp;, std::__1::vector&lt;rocksdb::ColumnFamilyHandle*, std::__1::allocator&lt;rocksdb::ColumnFamilyHandle*&gt; &gt; const&amp;, std::__1::vector&lt;rocksdb::Slice, std::__1::allocator&lt;rocksdb::Slice&gt; &gt; const&amp;, std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (13 samples, 0.02%)</title><rect x="33.3112%" y="245" width="0.0180%" height="15" fill="rgb(228,109,6)" fg:x="24040" fg:w="13"/><text x="33.5612%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.04%)</title><rect x="33.3389%" y="213" width="0.0388%" height="15" fill="rgb(238,117,24)" fg:x="24060" fg:w="28"/><text x="33.5889%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.03%)</title><rect x="33.3430%" y="197" width="0.0346%" height="15" fill="rgb(242,26,26)" fg:x="24063" fg:w="25"/><text x="33.5930%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (25 samples, 0.03%)</title><rect x="33.3430%" y="181" width="0.0346%" height="15" fill="rgb(221,92,48)" fg:x="24063" fg:w="25"/><text x="33.5930%" y="191.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (34 samples, 0.05%)</title><rect x="33.3333%" y="229" width="0.0471%" height="15" fill="rgb(209,209,32)" fg:x="24056" fg:w="34"/><text x="33.5833%" y="239.50"></text></g><g><title>httpmq-rs`std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::vector (73 samples, 0.10%)</title><rect x="33.3292%" y="245" width="0.1012%" height="15" fill="rgb(221,70,22)" fg:x="24053" fg:w="73"/><text x="33.5792%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (33 samples, 0.05%)</title><rect x="33.3846%" y="229" width="0.0457%" height="15" fill="rgb(248,145,5)" fg:x="24093" fg:w="33"/><text x="33.6346%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (52 samples, 0.07%)</title><rect x="33.4428%" y="229" width="0.0721%" height="15" fill="rgb(226,116,26)" fg:x="24135" fg:w="52"/><text x="33.6928%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (51 samples, 0.07%)</title><rect x="33.4442%" y="213" width="0.0707%" height="15" fill="rgb(244,5,17)" fg:x="24136" fg:w="51"/><text x="33.6942%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (47 samples, 0.07%)</title><rect x="33.4497%" y="197" width="0.0651%" height="15" fill="rgb(252,159,33)" fg:x="24140" fg:w="47"/><text x="33.6997%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.02%)</title><rect x="33.4955%" y="181" width="0.0194%" height="15" fill="rgb(206,71,0)" fg:x="24173" fg:w="14"/><text x="33.7455%" y="191.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (55 samples, 0.08%)</title><rect x="33.4414%" y="245" width="0.0762%" height="15" fill="rgb(233,118,54)" fg:x="24134" fg:w="55"/><text x="33.6914%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (64 samples, 0.09%)</title><rect x="33.6603%" y="197" width="0.0887%" height="15" fill="rgb(234,83,48)" fg:x="24292" fg:w="64"/><text x="33.9103%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.01%)</title><rect x="33.7366%" y="181" width="0.0125%" height="15" fill="rgb(228,3,54)" fg:x="24347" fg:w="9"/><text x="33.9866%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (135 samples, 0.19%)</title><rect x="33.5634%" y="213" width="0.1871%" height="15" fill="rgb(226,155,13)" fg:x="24222" fg:w="135"/><text x="33.8134%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (142 samples, 0.20%)</title><rect x="33.5550%" y="229" width="0.1968%" height="15" fill="rgb(241,28,37)" fg:x="24216" fg:w="142"/><text x="33.8050%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (165 samples, 0.23%)</title><rect x="33.5259%" y="245" width="0.2286%" height="15" fill="rgb(233,93,10)" fg:x="24195" fg:w="165"/><text x="33.7759%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (20 samples, 0.03%)</title><rect x="33.7837%" y="229" width="0.0277%" height="15" fill="rgb(225,113,19)" fg:x="24381" fg:w="20"/><text x="34.0337%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (20 samples, 0.03%)</title><rect x="33.7837%" y="213" width="0.0277%" height="15" fill="rgb(241,2,18)" fg:x="24381" fg:w="20"/><text x="34.0337%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (39 samples, 0.05%)</title><rect x="33.7587%" y="245" width="0.0540%" height="15" fill="rgb(228,207,21)" fg:x="24363" fg:w="39"/><text x="34.0087%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (8 samples, 0.01%)</title><rect x="33.8737%" y="229" width="0.0111%" height="15" fill="rgb(213,211,35)" fg:x="24446" fg:w="8"/><text x="34.1237%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (38 samples, 0.05%)</title><rect x="33.9763%" y="213" width="0.0527%" height="15" fill="rgb(209,83,10)" fg:x="24520" fg:w="38"/><text x="34.2263%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (119 samples, 0.16%)</title><rect x="33.8848%" y="229" width="0.1649%" height="15" fill="rgb(209,164,1)" fg:x="24454" fg:w="119"/><text x="34.1348%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.02%)</title><rect x="34.0289%" y="213" width="0.0208%" height="15" fill="rgb(213,184,43)" fg:x="24558" fg:w="15"/><text x="34.2789%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (172 samples, 0.24%)</title><rect x="33.8128%" y="245" width="0.2383%" height="15" fill="rgb(231,61,34)" fg:x="24402" fg:w="172"/><text x="34.0628%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb_multi_get (7,194 samples, 9.97%)</title><rect x="24.1187%" y="261" width="9.9684%" height="15" fill="rgb(235,75,3)" fg:x="17406" fg:w="7194"/><text x="24.3687%" y="271.50">httpmq-rs`rock..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.03%)</title><rect x="34.0594%" y="245" width="0.0277%" height="15" fill="rgb(220,106,47)" fg:x="24580" fg:w="20"/><text x="34.3094%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb_readoptions_create (14 samples, 0.02%)</title><rect x="34.0871%" y="261" width="0.0194%" height="15" fill="rgb(210,196,33)" fg:x="24600" fg:w="14"/><text x="34.3371%" y="271.50"></text></g><g><title>httpmq-rs`std::__1::vector&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;, std::__1::allocator&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; &gt; &gt;::vector (14 samples, 0.02%)</title><rect x="34.1121%" y="261" width="0.0194%" height="15" fill="rgb(229,154,42)" fg:x="24618" fg:w="14"/><text x="34.3621%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (9 samples, 0.01%)</title><rect x="34.1439%" y="261" width="0.0125%" height="15" fill="rgb(228,114,26)" fg:x="24641" fg:w="9"/><text x="34.3939%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_calloc (8 samples, 0.01%)</title><rect x="34.1675%" y="245" width="0.0111%" height="15" fill="rgb(208,144,1)" fg:x="24658" fg:w="8"/><text x="34.4175%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (9 samples, 0.01%)</title><rect x="34.1855%" y="229" width="0.0125%" height="15" fill="rgb(239,112,37)" fg:x="24671" fg:w="9"/><text x="34.4355%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (8 samples, 0.01%)</title><rect x="34.2908%" y="213" width="0.0111%" height="15" fill="rgb(210,96,50)" fg:x="24747" fg:w="8"/><text x="34.5408%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (12 samples, 0.02%)</title><rect x="34.3047%" y="213" width="0.0166%" height="15" fill="rgb(222,178,2)" fg:x="24757" fg:w="12"/><text x="34.5547%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (50 samples, 0.07%)</title><rect x="34.3213%" y="213" width="0.0693%" height="15" fill="rgb(226,74,18)" fg:x="24769" fg:w="50"/><text x="34.5713%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (21 samples, 0.03%)</title><rect x="34.3615%" y="197" width="0.0291%" height="15" fill="rgb(225,67,54)" fg:x="24798" fg:w="21"/><text x="34.6115%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (157 samples, 0.22%)</title><rect x="34.1994%" y="229" width="0.2175%" height="15" fill="rgb(251,92,32)" fg:x="24681" fg:w="157"/><text x="34.4494%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (14 samples, 0.02%)</title><rect x="34.3975%" y="213" width="0.0194%" height="15" fill="rgb(228,149,22)" fg:x="24824" fg:w="14"/><text x="34.6475%" y="223.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memset (23 samples, 0.03%)</title><rect x="34.4169%" y="229" width="0.0319%" height="15" fill="rgb(243,54,13)" fg:x="24838" fg:w="23"/><text x="34.6669%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (229 samples, 0.32%)</title><rect x="34.1564%" y="261" width="0.3173%" height="15" fill="rgb(243,180,28)" fg:x="24650" fg:w="229"/><text x="34.4064%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (213 samples, 0.30%)</title><rect x="34.1786%" y="245" width="0.2951%" height="15" fill="rgb(208,167,24)" fg:x="24666" fg:w="213"/><text x="34.4286%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (18 samples, 0.02%)</title><rect x="34.4488%" y="229" width="0.0249%" height="15" fill="rgb(245,73,45)" fg:x="24861" fg:w="18"/><text x="34.6988%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.01%)</title><rect x="34.5250%" y="213" width="0.0139%" height="15" fill="rgb(237,203,48)" fg:x="24916" fg:w="10"/><text x="34.7750%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (49 samples, 0.07%)</title><rect x="34.4737%" y="261" width="0.0679%" height="15" fill="rgb(211,197,16)" fg:x="24879" fg:w="49"/><text x="34.7237%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (44 samples, 0.06%)</title><rect x="34.4807%" y="245" width="0.0610%" height="15" fill="rgb(243,99,51)" fg:x="24884" fg:w="44"/><text x="34.7307%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (41 samples, 0.06%)</title><rect x="34.4848%" y="229" width="0.0568%" height="15" fill="rgb(215,123,29)" fg:x="24887" fg:w="41"/><text x="34.7348%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_calloc (18 samples, 0.02%)</title><rect x="34.5416%" y="261" width="0.0249%" height="15" fill="rgb(239,186,37)" fg:x="24928" fg:w="18"/><text x="34.7916%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (62 samples, 0.09%)</title><rect x="34.6192%" y="245" width="0.0859%" height="15" fill="rgb(252,136,39)" fg:x="24984" fg:w="62"/><text x="34.8692%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (53 samples, 0.07%)</title><rect x="34.6317%" y="229" width="0.0734%" height="15" fill="rgb(223,213,32)" fg:x="24993" fg:w="53"/><text x="34.8817%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (101 samples, 0.14%)</title><rect x="34.5680%" y="261" width="0.1400%" height="15" fill="rgb(233,115,5)" fg:x="24947" fg:w="101"/><text x="34.8180%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (17 samples, 0.02%)</title><rect x="34.8326%" y="245" width="0.0236%" height="15" fill="rgb(207,226,44)" fg:x="25138" fg:w="17"/><text x="35.0826%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (70 samples, 0.10%)</title><rect x="35.0377%" y="229" width="0.0970%" height="15" fill="rgb(208,126,0)" fg:x="25286" fg:w="70"/><text x="35.2877%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (244 samples, 0.34%)</title><rect x="34.8631%" y="245" width="0.3381%" height="15" fill="rgb(244,66,21)" fg:x="25160" fg:w="244"/><text x="35.1131%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (48 samples, 0.07%)</title><rect x="35.1347%" y="229" width="0.0665%" height="15" fill="rgb(222,97,12)" fg:x="25356" fg:w="48"/><text x="35.3847%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (362 samples, 0.50%)</title><rect x="34.7079%" y="261" width="0.5016%" height="15" fill="rgb(219,213,19)" fg:x="25048" fg:w="362"/><text x="34.9579%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.01%)</title><rect x="35.2095%" y="261" width="0.0111%" height="15" fill="rgb(252,169,30)" fg:x="25410" fg:w="8"/><text x="35.4595%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_calloc (8 samples, 0.01%)</title><rect x="35.2206%" y="261" width="0.0111%" height="15" fill="rgb(206,32,51)" fg:x="25418" fg:w="8"/><text x="35.4706%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.01%)</title><rect x="35.2372%" y="261" width="0.0139%" height="15" fill="rgb(250,172,42)" fg:x="25430" fg:w="10"/><text x="35.4872%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::multi_get (9,419 samples, 13.05%)</title><rect x="22.2121%" y="277" width="13.0515%" height="15" fill="rgb(209,34,43)" fg:x="16030" fg:w="9419"/><text x="22.4621%" y="287.50">httpmq-rs`rocksdb::d..</text></g><g><title>httpmq-rs`rocksdb::db::convert_values (20 samples, 0.03%)</title><rect x="35.2636%" y="277" width="0.0277%" height="15" fill="rgb(223,11,35)" fg:x="25449" fg:w="20"/><text x="35.5136%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (9 samples, 0.01%)</title><rect x="35.2954%" y="277" width="0.0125%" height="15" fill="rgb(251,219,26)" fg:x="25472" fg:w="9"/><text x="35.5454%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (9 samples, 0.01%)</title><rect x="35.3079%" y="277" width="0.0125%" height="15" fill="rgb(231,119,3)" fg:x="25481" fg:w="9"/><text x="35.5579%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (37 samples, 0.05%)</title><rect x="35.4229%" y="229" width="0.0513%" height="15" fill="rgb(216,97,11)" fg:x="25564" fg:w="37"/><text x="35.6729%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.02%)</title><rect x="35.4575%" y="213" width="0.0166%" height="15" fill="rgb(223,59,9)" fg:x="25589" fg:w="12"/><text x="35.7075%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (113 samples, 0.16%)</title><rect x="35.3204%" y="277" width="0.1566%" height="15" fill="rgb(233,93,31)" fg:x="25490" fg:w="113"/><text x="35.5704%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (102 samples, 0.14%)</title><rect x="35.3356%" y="261" width="0.1413%" height="15" fill="rgb(239,81,33)" fg:x="25501" fg:w="102"/><text x="35.5856%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (99 samples, 0.14%)</title><rect x="35.3398%" y="245" width="0.1372%" height="15" fill="rgb(213,120,34)" fg:x="25504" fg:w="99"/><text x="35.5898%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`calloc (12 samples, 0.02%)</title><rect x="35.4769%" y="277" width="0.0166%" height="15" fill="rgb(243,49,53)" fg:x="25603" fg:w="12"/><text x="35.7269%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (12 samples, 0.02%)</title><rect x="35.4936%" y="277" width="0.0166%" height="15" fill="rgb(247,216,33)" fg:x="25615" fg:w="12"/><text x="35.7436%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (34 samples, 0.05%)</title><rect x="35.5504%" y="261" width="0.0471%" height="15" fill="rgb(226,26,14)" fg:x="25656" fg:w="34"/><text x="35.8004%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (34 samples, 0.05%)</title><rect x="35.5504%" y="245" width="0.0471%" height="15" fill="rgb(215,49,53)" fg:x="25656" fg:w="34"/><text x="35.8004%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (60 samples, 0.08%)</title><rect x="35.5171%" y="277" width="0.0831%" height="15" fill="rgb(245,162,40)" fg:x="25632" fg:w="60"/><text x="35.7671%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (9 samples, 0.01%)</title><rect x="35.6682%" y="261" width="0.0125%" height="15" fill="rgb(229,68,17)" fg:x="25741" fg:w="9"/><text x="35.9182%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (48 samples, 0.07%)</title><rect x="35.7998%" y="245" width="0.0665%" height="15" fill="rgb(213,182,10)" fg:x="25836" fg:w="48"/><text x="36.0498%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (188 samples, 0.26%)</title><rect x="35.6889%" y="261" width="0.2605%" height="15" fill="rgb(245,125,30)" fg:x="25756" fg:w="188"/><text x="35.9389%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (60 samples, 0.08%)</title><rect x="35.8663%" y="245" width="0.0831%" height="15" fill="rgb(232,202,2)" fg:x="25884" fg:w="60"/><text x="36.1163%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (253 samples, 0.35%)</title><rect x="35.6003%" y="277" width="0.3506%" height="15" fill="rgb(237,140,51)" fg:x="25692" fg:w="253"/><text x="35.8503%" y="287.50"></text></g><g><title>httpmq-rs`httpmq_rs::service::httpmq_read_metadata (10,533 samples, 14.60%)</title><rect x="21.3862%" y="293" width="14.5951%" height="15" fill="rgb(236,157,25)" fg:x="15434" fg:w="10533"/><text x="21.6362%" y="303.50">httpmq-rs`httpmq_rs::s..</text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.02%)</title><rect x="35.9910%" y="293" width="0.0249%" height="15" fill="rgb(219,209,0)" fg:x="25974" fg:w="18"/><text x="36.2410%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.02%)</title><rect x="36.0769%" y="261" width="0.0166%" height="15" fill="rgb(240,116,54)" fg:x="26036" fg:w="12"/><text x="36.3269%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (71 samples, 0.10%)</title><rect x="36.0160%" y="293" width="0.0984%" height="15" fill="rgb(216,10,36)" fg:x="25992" fg:w="71"/><text x="36.2660%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (59 samples, 0.08%)</title><rect x="36.0326%" y="277" width="0.0818%" height="15" fill="rgb(222,72,44)" fg:x="26004" fg:w="59"/><text x="36.2826%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.02%)</title><rect x="36.0936%" y="261" width="0.0208%" height="15" fill="rgb(232,159,9)" fg:x="26048" fg:w="15"/><text x="36.3436%" y="271.50"></text></g><g><title>httpmq-rs`httpmq_rs::service::httpmq_now_putpos (10,695 samples, 14.82%)</title><rect x="21.3031%" y="309" width="14.8196%" height="15" fill="rgb(210,39,32)" fg:x="15374" fg:w="10695"/><text x="21.5531%" y="319.50">httpmq-rs`httpmq_rs::se..</text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Put (35 samples, 0.05%)</title><rect x="36.1365%" y="309" width="0.0485%" height="15" fill="rgb(216,194,45)" fg:x="26079" fg:w="35"/><text x="36.3865%" y="319.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::WriteBatch (21 samples, 0.03%)</title><rect x="36.1850%" y="309" width="0.0291%" height="15" fill="rgb(218,18,35)" fg:x="26114" fg:w="21"/><text x="36.4350%" y="319.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (29 samples, 0.04%)</title><rect x="36.2612%" y="261" width="0.0402%" height="15" fill="rgb(207,83,51)" fg:x="26169" fg:w="29"/><text x="36.5112%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.04%)</title><rect x="36.2640%" y="245" width="0.0374%" height="15" fill="rgb(225,63,43)" fg:x="26171" fg:w="27"/><text x="36.5140%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.03%)</title><rect x="36.2709%" y="229" width="0.0305%" height="15" fill="rgb(207,57,36)" fg:x="26176" fg:w="22"/><text x="36.5209%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (21 samples, 0.03%)</title><rect x="36.2723%" y="213" width="0.0291%" height="15" fill="rgb(216,99,33)" fg:x="26177" fg:w="21"/><text x="36.5223%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb_writeoptions_create (31 samples, 0.04%)</title><rect x="36.2598%" y="277" width="0.0430%" height="15" fill="rgb(225,42,16)" fg:x="26168" fg:w="31"/><text x="36.5098%" y="287.50"></text></g><g><title>httpmq-rs`&lt;rocksdb::db_options::WriteOptions as core::default::Default&gt;::default (39 samples, 0.05%)</title><rect x="36.2598%" y="293" width="0.0540%" height="15" fill="rgb(220,201,45)" fg:x="26168" fg:w="39"/><text x="36.5098%" y="303.50"></text></g><g><title>httpmq-rs`SaveError(char**, rocksdb::Status const&amp;) (14 samples, 0.02%)</title><rect x="36.3139%" y="293" width="0.0194%" height="15" fill="rgb(225,33,4)" fg:x="26207" fg:w="14"/><text x="36.5639%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::Write (29 samples, 0.04%)</title><rect x="36.3333%" y="293" width="0.0402%" height="15" fill="rgb(224,33,50)" fg:x="26221" fg:w="29"/><text x="36.5833%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::~WriteBatch (16 samples, 0.02%)</title><rect x="36.3735%" y="293" width="0.0222%" height="15" fill="rgb(246,198,51)" fg:x="26250" fg:w="16"/><text x="36.6235%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyHandleImpl::~ColumnFamilyHandleImpl (8 samples, 0.01%)</title><rect x="37.2797%" y="245" width="0.0111%" height="15" fill="rgb(205,22,4)" fg:x="26904" fg:w="8"/><text x="37.5297%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MergeBatch (9 samples, 0.01%)</title><rect x="37.2908%" y="245" width="0.0125%" height="15" fill="rgb(206,3,8)" fg:x="26912" fg:w="9"/><text x="37.5408%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::PreprocessWrite (36 samples, 0.05%)</title><rect x="37.3032%" y="245" width="0.0499%" height="15" fill="rgb(251,23,15)" fg:x="26921" fg:w="36"/><text x="37.5532%" y="255.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (12 samples, 0.02%)</title><rect x="37.3365%" y="229" width="0.0166%" height="15" fill="rgb(252,88,28)" fg:x="26945" fg:w="12"/><text x="37.5865%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteContext::~WriteContext (16 samples, 0.02%)</title><rect x="37.3531%" y="245" width="0.0222%" height="15" fill="rgb(212,127,14)" fg:x="26957" fg:w="16"/><text x="37.6031%" y="255.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (39 samples, 0.05%)</title><rect x="37.4460%" y="197" width="0.0540%" height="15" fill="rgb(247,145,37)" fg:x="27024" fg:w="39"/><text x="37.6960%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (35 samples, 0.05%)</title><rect x="37.4515%" y="181" width="0.0485%" height="15" fill="rgb(209,117,53)" fg:x="27028" fg:w="35"/><text x="37.7015%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Append (64 samples, 0.09%)</title><rect x="37.4238%" y="213" width="0.0887%" height="15" fill="rgb(212,90,42)" fg:x="27008" fg:w="64"/><text x="37.6738%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::MergeBatch (79 samples, 0.11%)</title><rect x="37.4099%" y="229" width="0.1095%" height="15" fill="rgb(218,164,37)" fg:x="26998" fg:w="79"/><text x="37.6599%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::Flush (11 samples, 0.02%)</title><rect x="37.6122%" y="197" width="0.0152%" height="15" fill="rgb(246,65,34)" fg:x="27144" fg:w="11"/><text x="37.8622%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::use_direct_io (10 samples, 0.01%)</title><rect x="37.6275%" y="197" width="0.0139%" height="15" fill="rgb(231,100,33)" fg:x="27155" fg:w="10"/><text x="37.8775%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Append (9 samples, 0.01%)</title><rect x="37.6413%" y="197" width="0.0125%" height="15" fill="rgb(228,126,14)" fg:x="27165" fg:w="9"/><text x="37.8913%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::Append (10 samples, 0.01%)</title><rect x="37.7577%" y="181" width="0.0139%" height="15" fill="rgb(215,173,21)" fg:x="27249" fg:w="10"/><text x="38.0077%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::Append (29 samples, 0.04%)</title><rect x="37.8145%" y="165" width="0.0402%" height="15" fill="rgb(210,6,40)" fg:x="27290" fg:w="29"/><text x="38.0645%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (12 samples, 0.02%)</title><rect x="37.8630%" y="165" width="0.0166%" height="15" fill="rgb(212,48,18)" fg:x="27325" fg:w="12"/><text x="38.1130%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::WriteBuffered (3,787 samples, 5.25%)</title><rect x="37.7799%" y="181" width="5.2475%" height="15" fill="rgb(230,214,11)" fg:x="27265" fg:w="3787"/><text x="38.0299%" y="191.50">httpmq..</text></g><g><title>libsystem_kernel.dylib`write (3,715 samples, 5.15%)</title><rect x="37.8797%" y="165" width="5.1477%" height="15" fill="rgb(254,105,39)" fg:x="27337" fg:w="3715"/><text x="38.1297%" y="175.50">libsys..</text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Flush (3,888 samples, 5.39%)</title><rect x="37.6538%" y="197" width="5.3874%" height="15" fill="rgb(245,158,5)" fg:x="27174" fg:w="3888"/><text x="37.9038%" y="207.50">httpmq-..</text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.01%)</title><rect x="43.0274%" y="181" width="0.0139%" height="15" fill="rgb(249,208,11)" fg:x="31052" fg:w="10"/><text x="43.2774%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::WriteBuffered (9 samples, 0.01%)</title><rect x="43.0412%" y="197" width="0.0125%" height="15" fill="rgb(210,39,28)" fg:x="31062" fg:w="9"/><text x="43.2912%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::FSWritableFile::PrepareWrite (18 samples, 0.02%)</title><rect x="43.0745%" y="181" width="0.0249%" height="15" fill="rgb(211,56,53)" fg:x="31086" fg:w="18"/><text x="43.3245%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::PosixWritableFile::use_direct_io (8 samples, 0.01%)</title><rect x="43.0994%" y="181" width="0.0111%" height="15" fill="rgb(226,201,30)" fg:x="31104" fg:w="8"/><text x="43.3494%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::FSWritableFile::PrepareWrite (10 samples, 0.01%)</title><rect x="43.1646%" y="165" width="0.0139%" height="15" fill="rgb(239,101,34)" fg:x="31151" fg:w="10"/><text x="43.4146%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Append (79 samples, 0.11%)</title><rect x="43.1105%" y="181" width="0.1095%" height="15" fill="rgb(226,209,5)" fg:x="31112" fg:w="79"/><text x="43.3605%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (25 samples, 0.03%)</title><rect x="43.1853%" y="165" width="0.0346%" height="15" fill="rgb(250,105,47)" fg:x="31166" fg:w="25"/><text x="43.4353%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::crc32c::Extend (311 samples, 0.43%)</title><rect x="43.2200%" y="181" width="0.4309%" height="15" fill="rgb(230,72,3)" fg:x="31191" fg:w="311"/><text x="43.4700%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteToWAL (4,431 samples, 6.14%)</title><rect x="37.5194%" y="229" width="6.1398%" height="15" fill="rgb(232,218,39)" fg:x="27077" fg:w="4431"/><text x="37.7694%" y="239.50">httpmq-r..</text></g><g><title>httpmq-rs`rocksdb::log::Writer::AddRecord (4,398 samples, 6.09%)</title><rect x="37.5651%" y="213" width="6.0941%" height="15" fill="rgb(248,166,6)" fg:x="27110" fg:w="4398"/><text x="37.8151%" y="223.50">httpmq-r..</text></g><g><title>httpmq-rs`rocksdb::log::Writer::EmitPhysicalRecord (433 samples, 0.60%)</title><rect x="43.0593%" y="197" width="0.6000%" height="15" fill="rgb(247,89,20)" fg:x="31075" fg:w="433"/><text x="43.3093%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Clear (31 samples, 0.04%)</title><rect x="43.6592%" y="229" width="0.0430%" height="15" fill="rgb(248,130,54)" fg:x="31508" fg:w="31"/><text x="43.9092%" y="239.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::resize (21 samples, 0.03%)</title><rect x="43.6731%" y="213" width="0.0291%" height="15" fill="rgb(234,196,4)" fg:x="31518" fg:w="21"/><text x="43.9231%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::log::Writer::AddRecord (15 samples, 0.02%)</title><rect x="43.7105%" y="229" width="0.0208%" height="15" fill="rgb(250,143,31)" fg:x="31545" fg:w="15"/><text x="43.9605%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteToWAL (4,594 samples, 6.37%)</title><rect x="37.3753%" y="245" width="6.3657%" height="15" fill="rgb(211,110,34)" fg:x="26973" fg:w="4594"/><text x="37.6253%" y="255.50">httpmq-r..</text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Lock (14 samples, 0.02%)</title><rect x="43.7562%" y="229" width="0.0194%" height="15" fill="rgb(215,124,48)" fg:x="31578" fg:w="14"/><text x="44.0062%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (14 samples, 0.02%)</title><rect x="43.7562%" y="213" width="0.0194%" height="15" fill="rgb(216,46,13)" fg:x="31578" fg:w="14"/><text x="44.0062%" y="223.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (9 samples, 0.01%)</title><rect x="43.7756%" y="229" width="0.0125%" height="15" fill="rgb(205,184,25)" fg:x="31592" fg:w="9"/><text x="44.0256%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.01%)</title><rect x="43.7881%" y="229" width="0.0139%" height="15" fill="rgb(228,1,10)" fg:x="31601" fg:w="10"/><text x="44.0381%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::InstrumentedMutex::Lock (42 samples, 0.06%)</title><rect x="43.7507%" y="245" width="0.0582%" height="15" fill="rgb(213,116,27)" fg:x="31574" fg:w="42"/><text x="44.0007%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Count (16 samples, 0.02%)</title><rect x="43.8477%" y="245" width="0.0222%" height="15" fill="rgb(241,95,50)" fg:x="31644" fg:w="16"/><text x="44.0977%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::UpdateFlushState (25 samples, 0.03%)</title><rect x="44.4435%" y="229" width="0.0346%" height="15" fill="rgb(238,48,32)" fg:x="32074" fg:w="25"/><text x="44.6935%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCF (11 samples, 0.02%)</title><rect x="44.4782%" y="229" width="0.0152%" height="15" fill="rgb(235,113,49)" fg:x="32099" fg:w="11"/><text x="44.7282%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.02%)</title><rect x="44.5170%" y="197" width="0.0152%" height="15" fill="rgb(205,127,43)" fg:x="32127" fg:w="11"/><text x="44.7670%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (11 samples, 0.02%)</title><rect x="44.5170%" y="181" width="0.0152%" height="15" fill="rgb(250,162,2)" fg:x="32127" fg:w="11"/><text x="44.7670%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.03%)</title><rect x="44.5017%" y="213" width="0.0319%" height="15" fill="rgb(220,13,41)" fg:x="32116" fg:w="23"/><text x="44.7517%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.02%)</title><rect x="44.5862%" y="181" width="0.0166%" height="15" fill="rgb(249,221,25)" fg:x="32177" fg:w="12"/><text x="44.8362%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (56 samples, 0.08%)</title><rect x="44.5336%" y="213" width="0.0776%" height="15" fill="rgb(215,208,19)" fg:x="32139" fg:w="56"/><text x="44.7836%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (43 samples, 0.06%)</title><rect x="44.5516%" y="197" width="0.0596%" height="15" fill="rgb(236,175,2)" fg:x="32152" fg:w="43"/><text x="44.8016%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::~MemTableInserter (95 samples, 0.13%)</title><rect x="44.4934%" y="229" width="0.1316%" height="15" fill="rgb(241,52,2)" fg:x="32110" fg:w="95"/><text x="44.7434%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::ReadRecordFromWriteBatch (13 samples, 0.02%)</title><rect x="44.6250%" y="229" width="0.0180%" height="15" fill="rgb(248,140,14)" fg:x="32205" fg:w="13"/><text x="44.8750%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Handler::Continue (30 samples, 0.04%)</title><rect x="44.6431%" y="229" width="0.0416%" height="15" fill="rgb(253,22,42)" fg:x="32218" fg:w="30"/><text x="44.8931%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOTS (20 samples, 0.03%)</title><rect x="44.8440%" y="197" width="0.0277%" height="15" fill="rgb(234,61,47)" fg:x="32363" fg:w="20"/><text x="45.0940%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Allocate (20 samples, 0.03%)</title><rect x="44.9507%" y="181" width="0.0277%" height="15" fill="rgb(208,226,15)" fg:x="32440" fg:w="20"/><text x="45.2007%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::InsertKeyConcurrently (13 samples, 0.02%)</title><rect x="44.9839%" y="181" width="0.0180%" height="15" fill="rgb(217,221,4)" fg:x="32464" fg:w="13"/><text x="45.2339%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyMemTablesImpl::GetMemTable (9 samples, 0.01%)</title><rect x="45.0019%" y="181" width="0.0125%" height="15" fill="rgb(212,174,34)" fg:x="32477" fg:w="9"/><text x="45.2519%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyMemTablesImpl::Seek (19 samples, 0.03%)</title><rect x="45.0144%" y="181" width="0.0263%" height="15" fill="rgb(253,83,4)" fg:x="32486" fg:w="19"/><text x="45.2644%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::HistogramImpl::max (24 samples, 0.03%)</title><rect x="45.0463%" y="181" width="0.0333%" height="15" fill="rgb(250,195,49)" fg:x="32509" fg:w="24"/><text x="45.2963%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (58 samples, 0.08%)</title><rect x="45.4841%" y="133" width="0.0804%" height="15" fill="rgb(241,192,25)" fg:x="32825" fg:w="58"/><text x="45.7341%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (40 samples, 0.06%)</title><rect x="45.5091%" y="117" width="0.0554%" height="15" fill="rgb(208,124,10)" fg:x="32843" fg:w="40"/><text x="45.7591%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (17 samples, 0.02%)</title><rect x="45.5673%" y="133" width="0.0236%" height="15" fill="rgb(222,33,0)" fg:x="32885" fg:w="17"/><text x="45.8173%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (119 samples, 0.16%)</title><rect x="45.4343%" y="149" width="0.1649%" height="15" fill="rgb(234,209,28)" fg:x="32789" fg:w="119"/><text x="45.6843%" y="159.50"></text></g><g><title>httpmq-rs`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList (279 samples, 0.39%)</title><rect x="45.2306%" y="165" width="0.3866%" height="15" fill="rgb(224,11,23)" fg:x="32642" fg:w="279"/><text x="45.4806%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.01%)</title><rect x="45.6047%" y="149" width="0.0125%" height="15" fill="rgb(232,99,1)" fg:x="32912" fg:w="9"/><text x="45.8547%" y="159.50"></text></g><g><title>httpmq-rs`char* rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::&apos;lambda&apos;()&gt;(unsigned long, bool, rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::&apos;lambda&apos; (12 samples, 0.02%)</title><rect x="45.6671%" y="149" width="0.0166%" height="15" fill="rgb(237,95,45)" fg:x="32957" fg:w="12"/><text x="45.9171%" y="159.50"></text></g><g><title>httpmq-rs`char* rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::&apos;lambda&apos;()&gt;(unsigned long, bool, rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::&apos;lambda&apos; (62 samples, 0.09%)</title><rect x="45.6920%" y="133" width="0.0859%" height="15" fill="rgb(208,109,11)" fg:x="32975" fg:w="62"/><text x="45.9420%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::ConcurrentArena::AllocateAligned (73 samples, 0.10%)</title><rect x="45.6837%" y="149" width="0.1012%" height="15" fill="rgb(216,190,48)" fg:x="32969" fg:w="73"/><text x="45.9337%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::Random::GetTLSInstance (11 samples, 0.02%)</title><rect x="45.7848%" y="149" width="0.0152%" height="15" fill="rgb(251,171,36)" fg:x="33042" fg:w="11"/><text x="46.0348%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::Allocate (151 samples, 0.21%)</title><rect x="45.6241%" y="165" width="0.2092%" height="15" fill="rgb(230,62,22)" fg:x="32926" fg:w="151"/><text x="45.8741%" y="175.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (24 samples, 0.03%)</title><rect x="45.8001%" y="149" width="0.0333%" height="15" fill="rgb(225,114,35)" fg:x="33053" fg:w="24"/><text x="46.0501%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (14 samples, 0.02%)</title><rect x="46.5151%" y="133" width="0.0194%" height="15" fill="rgb(215,118,42)" fg:x="33569" fg:w="14"/><text x="46.7651%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (189 samples, 0.26%)</title><rect x="46.6980%" y="117" width="0.2619%" height="15" fill="rgb(243,119,21)" fg:x="33701" fg:w="189"/><text x="46.9480%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (141 samples, 0.20%)</title><rect x="46.7645%" y="101" width="0.1954%" height="15" fill="rgb(252,177,53)" fg:x="33749" fg:w="141"/><text x="47.0145%" y="111.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (15 samples, 0.02%)</title><rect x="46.9599%" y="117" width="0.0208%" height="15" fill="rgb(237,209,29)" fg:x="33890" fg:w="15"/><text x="47.2099%" y="127.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (39 samples, 0.05%)</title><rect x="46.9807%" y="117" width="0.0540%" height="15" fill="rgb(212,65,23)" fg:x="33905" fg:w="39"/><text x="47.2307%" y="127.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (384 samples, 0.53%)</title><rect x="46.5345%" y="133" width="0.5321%" height="15" fill="rgb(230,222,46)" fg:x="33583" fg:w="384"/><text x="46.7845%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (23 samples, 0.03%)</title><rect x="47.0347%" y="117" width="0.0319%" height="15" fill="rgb(215,135,32)" fg:x="33944" fg:w="23"/><text x="47.2847%" y="127.50"></text></g><g><title>httpmq-rs`bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList (909 samples, 1.26%)</title><rect x="45.8444%" y="149" width="1.2596%" height="15" fill="rgb(246,101,22)" fg:x="33085" fg:w="909"/><text x="46.0944%" y="159.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (20 samples, 0.03%)</title><rect x="47.0763%" y="133" width="0.0277%" height="15" fill="rgb(206,107,13)" fg:x="33974" fg:w="20"/><text x="47.3263%" y="143.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::KeyComparator::operator() (21 samples, 0.03%)</title><rect x="47.1040%" y="149" width="0.0291%" height="15" fill="rgb(250,100,44)" fg:x="33994" fg:w="21"/><text x="47.3540%" y="159.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::SkipListRep::InsertKeyConcurrently (945 samples, 1.31%)</title><rect x="45.8333%" y="165" width="1.3094%" height="15" fill="rgb(231,147,38)" fg:x="33077" fg:w="945"/><text x="46.0833%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::ConcurrentArena::AllocateAligned (16 samples, 0.02%)</title><rect x="47.1428%" y="165" width="0.0222%" height="15" fill="rgb(229,8,40)" fg:x="34022" fg:w="16"/><text x="47.3928%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::EncodeVarint32 (16 samples, 0.02%)</title><rect x="47.1649%" y="165" width="0.0222%" height="15" fill="rgb(221,135,30)" fg:x="34038" fg:w="16"/><text x="47.4149%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableRep::KeyComparator::decode_key (8 samples, 0.01%)</title><rect x="47.1954%" y="165" width="0.0111%" height="15" fill="rgb(249,193,18)" fg:x="34060" fg:w="8"/><text x="47.4454%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::Random::GetTLSInstance (8 samples, 0.01%)</title><rect x="47.2065%" y="165" width="0.0111%" height="15" fill="rgb(209,133,39)" fg:x="34068" fg:w="8"/><text x="47.4565%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::Add(unsigned long long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOTS (1,773 samples, 2.46%)</title><rect x="45.0795%" y="181" width="2.4568%" height="15" fill="rgb(232,100,14)" fg:x="32533" fg:w="1773"/><text x="45.3295%" y="191.50">ht..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (230 samples, 0.32%)</title><rect x="47.2176%" y="165" width="0.3187%" height="15" fill="rgb(224,185,1)" fg:x="34076" fg:w="230"/><text x="47.4676%" y="175.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::CheckMemtableFull (22 samples, 0.03%)</title><rect x="47.5363%" y="181" width="0.0305%" height="15" fill="rgb(223,139,8)" fg:x="34306" fg:w="22"/><text x="47.7863%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::SeekToColumnFamily (21 samples, 0.03%)</title><rect x="47.5668%" y="181" width="0.0291%" height="15" fill="rgb(232,213,38)" fg:x="34328" fg:w="21"/><text x="47.8168%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::ColumnFamilyMemTablesImpl::Seek (9 samples, 0.01%)</title><rect x="47.5834%" y="165" width="0.0125%" height="15" fill="rgb(207,94,22)" fg:x="34340" fg:w="9"/><text x="47.8334%" y="175.50"></text></g><g><title>libc+ (9 samples, 0.01%)</title><rect x="47.5959%" y="181" width="0.0125%" height="15" fill="rgb(219,183,54)" fg:x="34349" fg:w="9"/><text x="47.8459%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (89 samples, 0.12%)</title><rect x="47.6388%" y="149" width="0.1233%" height="15" fill="rgb(216,185,54)" fg:x="34380" fg:w="89"/><text x="47.8888%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (86 samples, 0.12%)</title><rect x="47.6430%" y="133" width="0.1192%" height="15" fill="rgb(254,217,39)" fg:x="34383" fg:w="86"/><text x="47.8930%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (36 samples, 0.05%)</title><rect x="47.7123%" y="117" width="0.0499%" height="15" fill="rgb(240,178,23)" fg:x="34433" fg:w="36"/><text x="47.9623%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.01%)</title><rect x="47.7511%" y="101" width="0.0111%" height="15" fill="rgb(218,11,47)" fg:x="34461" fg:w="8"/><text x="48.0011%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (109 samples, 0.15%)</title><rect x="47.6125%" y="165" width="0.1510%" height="15" fill="rgb(218,51,51)" fg:x="34361" fg:w="109"/><text x="47.8625%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (16 samples, 0.02%)</title><rect x="47.7636%" y="165" width="0.0222%" height="15" fill="rgb(238,126,27)" fg:x="34470" fg:w="16"/><text x="48.0136%" y="175.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (133 samples, 0.18%)</title><rect x="47.6084%" y="181" width="0.1843%" height="15" fill="rgb(249,202,22)" fg:x="34358" fg:w="133"/><text x="47.8584%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.02%)</title><rect x="47.7927%" y="181" width="0.0194%" height="15" fill="rgb(254,195,49)" fg:x="34491" fg:w="14"/><text x="48.0427%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (10 samples, 0.01%)</title><rect x="47.8120%" y="181" width="0.0139%" height="15" fill="rgb(208,123,14)" fg:x="34505" fg:w="10"/><text x="48.0620%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOTS (2,151 samples, 2.98%)</title><rect x="44.8772%" y="197" width="2.9805%" height="15" fill="rgb(224,200,8)" fg:x="32387" fg:w="2151"/><text x="45.1272%" y="207.50">htt..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.03%)</title><rect x="47.8259%" y="181" width="0.0319%" height="15" fill="rgb(217,61,36)" fg:x="34515" fg:w="23"/><text x="48.0759%" y="191.50"></text></g><g><title>httpmq-rs`void std::__1::__tree_balance_after_insert&lt;std::__1::__tree_node_base&lt;void*&gt;*&gt;(std::__1::__tree_node_base&lt;void*&gt;*, std::__1::__tree_node_base (8 samples, 0.01%)</title><rect x="47.8661%" y="197" width="0.0111%" height="15" fill="rgb(206,35,45)" fg:x="34544" fg:w="8"/><text x="48.1161%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCF (2,211 samples, 3.06%)</title><rect x="44.8204%" y="213" width="3.0637%" height="15" fill="rgb(217,65,33)" fg:x="32346" fg:w="2211"/><text x="45.0704%" y="223.50">htt..</text></g><g><title>httpmq-rs`rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType, rocksdb::ProtectionInfoKVOTS (16 samples, 0.02%)</title><rect x="47.8841%" y="213" width="0.0222%" height="15" fill="rgb(222,158,48)" fg:x="34557" fg:w="16"/><text x="48.1341%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::ReadRecordFromWriteBatch (55 samples, 0.08%)</title><rect x="47.9063%" y="213" width="0.0762%" height="15" fill="rgb(254,2,54)" fg:x="34573" fg:w="55"/><text x="48.1563%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Iterate (2,381 samples, 3.30%)</title><rect x="44.6846%" y="229" width="3.2992%" height="15" fill="rgb(250,143,38)" fg:x="32248" fg:w="2381"/><text x="44.9346%" y="239.50">htt..</text></g><g><title>httpmq-rs`std::__1::__tree&lt;std::__1::pair&lt;int, unsigned long long&gt;, std::__1::less&lt;std::__1::pair&lt;int, unsigned long long&gt; &gt;, std::__1::allocator&lt;std::__1::pair&lt;int, unsigned long long&gt; &gt; &gt;::destroy(std::__1::__tree_node&lt;std::__1::pair (14 samples, 0.02%)</title><rect x="47.9839%" y="229" width="0.0194%" height="15" fill="rgb(248,25,0)" fg:x="34629" fg:w="14"/><text x="48.2339%" y="239.50"></text></g><g><title>libc+ (11 samples, 0.02%)</title><rect x="48.0033%" y="229" width="0.0152%" height="15" fill="rgb(206,152,27)" fg:x="34643" fg:w="11"/><text x="48.2533%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.02%)</title><rect x="48.0199%" y="229" width="0.0152%" height="15" fill="rgb(240,77,30)" fg:x="34655" fg:w="11"/><text x="48.2699%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::InsertInto (3,013 samples, 4.17%)</title><rect x="43.8699%" y="245" width="4.1750%" height="15" fill="rgb(231,5,3)" fg:x="31660" fg:w="3013"/><text x="44.1199%" y="255.50">httpm..</text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Iterate (8 samples, 0.01%)</title><rect x="48.0448%" y="245" width="0.0111%" height="15" fill="rgb(207,226,32)" fg:x="34673" fg:w="8"/><text x="48.2948%" y="255.50"></text></g><g><title>libc+ (17 samples, 0.02%)</title><rect x="54.5713%" y="229" width="0.0236%" height="15" fill="rgb(222,207,47)" fg:x="39383" fg:w="17"/><text x="54.8213%" y="239.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (13 samples, 0.02%)</title><rect x="54.6004%" y="197" width="0.0180%" height="15" fill="rgb(229,115,45)" fg:x="39404" fg:w="13"/><text x="54.8504%" y="207.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (18 samples, 0.02%)</title><rect x="54.5948%" y="213" width="0.0249%" height="15" fill="rgb(224,191,6)" fg:x="39400" fg:w="18"/><text x="54.8448%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::chrono::steady_clock::now (19 samples, 0.03%)</title><rect x="54.5948%" y="229" width="0.0263%" height="15" fill="rgb(230,227,24)" fg:x="39400" fg:w="19"/><text x="54.8448%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (1,769 samples, 2.45%)</title><rect x="54.6447%" y="213" width="2.4512%" height="15" fill="rgb(228,80,19)" fg:x="39436" fg:w="1769"/><text x="54.8947%" y="223.50">li..</text></g><g><title>libsystem_pthread.dylib`_pthread_cond_check_init_slow (8 samples, 0.01%)</title><rect x="57.0987%" y="213" width="0.0111%" height="15" fill="rgb(247,229,0)" fg:x="41207" fg:w="8"/><text x="57.3487%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_check_init_slow (11 samples, 0.02%)</title><rect x="57.1611%" y="197" width="0.0152%" height="15" fill="rgb(237,194,15)" fg:x="41252" fg:w="11"/><text x="57.4111%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_droplock (22 samples, 0.03%)</title><rect x="57.1763%" y="197" width="0.0305%" height="15" fill="rgb(219,203,20)" fg:x="41263" fg:w="22"/><text x="57.4263%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (48 samples, 0.07%)</title><rect x="57.2068%" y="181" width="0.0665%" height="15" fill="rgb(234,128,8)" fg:x="41285" fg:w="48"/><text x="57.4568%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (51 samples, 0.07%)</title><rect x="57.2068%" y="197" width="0.0707%" height="15" fill="rgb(248,202,8)" fg:x="41285" fg:w="51"/><text x="57.4568%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (31 samples, 0.04%)</title><rect x="57.2775%" y="197" width="0.0430%" height="15" fill="rgb(206,104,37)" fg:x="41336" fg:w="31"/><text x="57.5275%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (179 samples, 0.25%)</title><rect x="57.1098%" y="213" width="0.2480%" height="15" fill="rgb(223,8,27)" fg:x="41215" fg:w="179"/><text x="57.3598%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_testcancel (27 samples, 0.04%)</title><rect x="57.3204%" y="197" width="0.0374%" height="15" fill="rgb(216,217,28)" fg:x="41367" fg:w="27"/><text x="57.5704%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock (1,981 samples, 2.74%)</title><rect x="54.6212%" y="229" width="2.7450%" height="15" fill="rgb(249,199,1)" fg:x="39419" fg:w="1981"/><text x="54.8712%" y="239.50">li..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (31 samples, 0.04%)</title><rect x="57.3731%" y="213" width="0.0430%" height="15" fill="rgb(240,85,17)" fg:x="41405" fg:w="31"/><text x="57.6231%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_check_init_slow (31 samples, 0.04%)</title><rect x="57.3731%" y="197" width="0.0430%" height="15" fill="rgb(206,108,45)" fg:x="41405" fg:w="31"/><text x="57.6231%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (44 samples, 0.06%)</title><rect x="57.3661%" y="229" width="0.0610%" height="15" fill="rgb(245,210,41)" fg:x="41400" fg:w="44"/><text x="57.6161%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (8 samples, 0.01%)</title><rect x="57.4160%" y="213" width="0.0111%" height="15" fill="rgb(206,13,37)" fg:x="41436" fg:w="8"/><text x="57.6660%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::unlock (9 samples, 0.01%)</title><rect x="57.4271%" y="229" width="0.0125%" height="15" fill="rgb(250,61,18)" fg:x="41444" fg:w="9"/><text x="57.6771%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (9 samples, 0.01%)</title><rect x="57.4271%" y="213" width="0.0125%" height="15" fill="rgb(235,172,48)" fg:x="41444" fg:w="9"/><text x="57.6771%" y="223.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (20 samples, 0.03%)</title><rect x="57.4396%" y="229" width="0.0277%" height="15" fill="rgb(249,201,17)" fg:x="41453" fg:w="20"/><text x="57.6896%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (161 samples, 0.22%)</title><rect x="57.4701%" y="229" width="0.2231%" height="15" fill="rgb(219,208,6)" fg:x="41475" fg:w="161"/><text x="57.7201%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (18 samples, 0.02%)</title><rect x="57.6932%" y="229" width="0.0249%" height="15" fill="rgb(248,31,23)" fg:x="41636" fg:w="18"/><text x="57.9432%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_wait (13 samples, 0.02%)</title><rect x="57.7236%" y="229" width="0.0180%" height="15" fill="rgb(245,15,42)" fg:x="41658" fg:w="13"/><text x="57.9736%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (11 samples, 0.02%)</title><rect x="57.7417%" y="229" width="0.0152%" height="15" fill="rgb(222,217,39)" fg:x="41671" fg:w="11"/><text x="57.9917%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::AwaitState (7,026 samples, 9.74%)</title><rect x="48.0615%" y="245" width="9.7356%" height="15" fill="rgb(210,219,27)" fg:x="34685" fg:w="7026"/><text x="48.3115%" y="255.50">httpmq-rs`rock..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (29 samples, 0.04%)</title><rect x="57.7569%" y="229" width="0.0402%" height="15" fill="rgb(252,166,36)" fg:x="41682" fg:w="29"/><text x="58.0069%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_continuous_time (11 samples, 0.02%)</title><rect x="60.3204%" y="165" width="0.0152%" height="15" fill="rgb(245,132,34)" fg:x="43532" fg:w="11"/><text x="60.5704%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`_mach_continuous_time (10 samples, 0.01%)</title><rect x="60.3217%" y="149" width="0.0139%" height="15" fill="rgb(236,54,3)" fg:x="43533" fg:w="10"/><text x="60.5717%" y="159.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (16 samples, 0.02%)</title><rect x="60.3162%" y="181" width="0.0222%" height="15" fill="rgb(241,173,43)" fg:x="43529" fg:w="16"/><text x="60.5662%" y="191.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (27 samples, 0.04%)</title><rect x="60.3093%" y="197" width="0.0374%" height="15" fill="rgb(215,190,9)" fg:x="43524" fg:w="27"/><text x="60.5593%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::chrono::steady_clock::now (32 samples, 0.04%)</title><rect x="60.3093%" y="213" width="0.0443%" height="15" fill="rgb(242,101,16)" fg:x="43524" fg:w="32"/><text x="60.5593%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock (8 samples, 0.01%)</title><rect x="60.3536%" y="213" width="0.0111%" height="15" fill="rgb(223,190,21)" fg:x="43556" fg:w="8"/><text x="60.6036%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (8 samples, 0.01%)</title><rect x="60.3536%" y="197" width="0.0111%" height="15" fill="rgb(215,228,25)" fg:x="43556" fg:w="8"/><text x="60.6036%" y="207.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (9 samples, 0.01%)</title><rect x="60.3675%" y="213" width="0.0125%" height="15" fill="rgb(225,36,22)" fg:x="43566" fg:w="9"/><text x="60.6175%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (293 samples, 0.41%)</title><rect x="60.3799%" y="213" width="0.4060%" height="15" fill="rgb(251,106,46)" fg:x="43575" fg:w="293"/><text x="60.6299%" y="223.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::AwaitState (2,134 samples, 2.96%)</title><rect x="57.8373%" y="229" width="2.9570%" height="15" fill="rgb(208,90,1)" fg:x="41740" fg:w="2134"/><text x="58.0873%" y="239.50">htt..</text></g><g><title>httpmq-rs`rocksdb::WriteThread::CompleteParallelMemTableWriter (2,173 samples, 3.01%)</title><rect x="57.7971%" y="245" width="3.0110%" height="15" fill="rgb(243,10,4)" fg:x="41711" fg:w="2173"/><text x="58.0471%" y="255.50">htt..</text></g><g><title>httpmq-rs`rocksdb::WriteThread::EnterAsBatchGroupLeader (27 samples, 0.04%)</title><rect x="60.8081%" y="245" width="0.0374%" height="15" fill="rgb(212,137,27)" fg:x="43884" fg:w="27"/><text x="61.0581%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (269 samples, 0.37%)</title><rect x="60.8968%" y="197" width="0.3727%" height="15" fill="rgb(231,220,49)" fg:x="43948" fg:w="269"/><text x="61.1468%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::notify_one (283 samples, 0.39%)</title><rect x="60.8954%" y="213" width="0.3921%" height="15" fill="rgb(237,96,20)" fg:x="43947" fg:w="283"/><text x="61.1454%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (9 samples, 0.01%)</title><rect x="61.2751%" y="197" width="0.0125%" height="15" fill="rgb(239,229,30)" fg:x="44221" fg:w="9"/><text x="61.5251%" y="207.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (10 samples, 0.01%)</title><rect x="61.2876%" y="197" width="0.0139%" height="15" fill="rgb(219,65,33)" fg:x="44230" fg:w="10"/><text x="61.5376%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (10 samples, 0.01%)</title><rect x="61.2876%" y="181" width="0.0139%" height="15" fill="rgb(243,134,7)" fg:x="44230" fg:w="10"/><text x="61.5376%" y="191.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (13 samples, 0.02%)</title><rect x="61.2876%" y="213" width="0.0180%" height="15" fill="rgb(216,177,54)" fg:x="44230" fg:w="13"/><text x="61.5376%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::unlock (9 samples, 0.01%)</title><rect x="61.3056%" y="213" width="0.0125%" height="15" fill="rgb(211,160,20)" fg:x="44243" fg:w="9"/><text x="61.5556%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (9 samples, 0.01%)</title><rect x="61.3056%" y="197" width="0.0125%" height="15" fill="rgb(239,85,39)" fg:x="44243" fg:w="9"/><text x="61.5556%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (9 samples, 0.01%)</title><rect x="61.3056%" y="181" width="0.0125%" height="15" fill="rgb(232,125,22)" fg:x="44243" fg:w="9"/><text x="61.5556%" y="191.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::ExitAsBatchGroupLeader (340 samples, 0.47%)</title><rect x="60.8538%" y="229" width="0.4711%" height="15" fill="rgb(244,57,34)" fg:x="43917" fg:w="340"/><text x="61.1038%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::ExitAsBatchGroupFollower (350 samples, 0.48%)</title><rect x="60.8455%" y="245" width="0.4850%" height="15" fill="rgb(214,203,32)" fg:x="43911" fg:w="350"/><text x="61.0955%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (171 samples, 0.24%)</title><rect x="61.3762%" y="213" width="0.2369%" height="15" fill="rgb(207,58,43)" fg:x="44294" fg:w="171"/><text x="61.6262%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::notify_one (176 samples, 0.24%)</title><rect x="61.3748%" y="229" width="0.2439%" height="15" fill="rgb(215,193,15)" fg:x="44293" fg:w="176"/><text x="61.6248%" y="239.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::unlock (8 samples, 0.01%)</title><rect x="61.6257%" y="229" width="0.0111%" height="15" fill="rgb(232,15,44)" fg:x="44474" fg:w="8"/><text x="61.8757%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (8 samples, 0.01%)</title><rect x="61.6257%" y="213" width="0.0111%" height="15" fill="rgb(212,3,48)" fg:x="44474" fg:w="8"/><text x="61.8757%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (8 samples, 0.01%)</title><rect x="61.6257%" y="197" width="0.0111%" height="15" fill="rgb(218,128,7)" fg:x="44474" fg:w="8"/><text x="61.8757%" y="207.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::ExitAsBatchGroupLeader (227 samples, 0.31%)</title><rect x="61.3305%" y="245" width="0.3145%" height="15" fill="rgb(226,216,39)" fg:x="44261" fg:w="227"/><text x="61.5805%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::JoinBatchGroup (30 samples, 0.04%)</title><rect x="61.6451%" y="245" width="0.0416%" height="15" fill="rgb(243,47,51)" fg:x="44488" fg:w="30"/><text x="61.8951%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::__1::atomic (30 samples, 0.04%)</title><rect x="61.6451%" y="229" width="0.0416%" height="15" fill="rgb(241,183,40)" fg:x="44488" fg:w="30"/><text x="61.8951%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (588 samples, 0.81%)</title><rect x="61.7019%" y="213" width="0.8148%" height="15" fill="rgb(231,217,32)" fg:x="44529" fg:w="588"/><text x="61.9519%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::notify_one (612 samples, 0.85%)</title><rect x="61.7005%" y="229" width="0.8480%" height="15" fill="rgb(229,61,38)" fg:x="44528" fg:w="612"/><text x="61.9505%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_signal (20 samples, 0.03%)</title><rect x="62.5208%" y="213" width="0.0277%" height="15" fill="rgb(225,210,5)" fg:x="45120" fg:w="20"/><text x="62.7708%" y="223.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (10 samples, 0.01%)</title><rect x="62.5485%" y="229" width="0.0139%" height="15" fill="rgb(231,79,45)" fg:x="45140" fg:w="10"/><text x="62.7985%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (9 samples, 0.01%)</title><rect x="62.5499%" y="213" width="0.0125%" height="15" fill="rgb(224,100,7)" fg:x="45141" fg:w="9"/><text x="62.7999%" y="223.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (13 samples, 0.02%)</title><rect x="62.5624%" y="213" width="0.0180%" height="15" fill="rgb(241,198,18)" fg:x="45150" fg:w="13"/><text x="62.8124%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (13 samples, 0.02%)</title><rect x="62.5624%" y="197" width="0.0180%" height="15" fill="rgb(252,97,53)" fg:x="45150" fg:w="13"/><text x="62.8124%" y="207.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::unlock (15 samples, 0.02%)</title><rect x="62.5624%" y="229" width="0.0208%" height="15" fill="rgb(220,88,7)" fg:x="45150" fg:w="15"/><text x="62.8124%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::LaunchParallelMemTableWriters (663 samples, 0.92%)</title><rect x="61.6866%" y="245" width="0.9187%" height="15" fill="rgb(213,176,14)" fg:x="44518" fg:w="663"/><text x="61.9366%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::__1::atomic (10 samples, 0.01%)</title><rect x="62.6053%" y="245" width="0.0139%" height="15" fill="rgb(246,73,7)" fg:x="45181" fg:w="10"/><text x="62.8553%" y="255.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (47 samples, 0.07%)</title><rect x="62.6358%" y="245" width="0.0651%" height="15" fill="rgb(245,64,36)" fg:x="45203" fg:w="47"/><text x="62.8858%" y="255.50"></text></g><g><title>libc+ (74 samples, 0.10%)</title><rect x="62.7009%" y="245" width="0.1025%" height="15" fill="rgb(245,80,10)" fg:x="45250" fg:w="74"/><text x="62.9509%" y="255.50"></text></g><g><title>libc++.1.dylib`std::__1::condition_variable::~condition_variable (21 samples, 0.03%)</title><rect x="62.8159%" y="245" width="0.0291%" height="15" fill="rgb(232,107,50)" fg:x="45333" fg:w="21"/><text x="63.0659%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_destroy (21 samples, 0.03%)</title><rect x="62.8159%" y="229" width="0.0291%" height="15" fill="rgb(253,3,0)" fg:x="45333" fg:w="21"/><text x="63.0659%" y="239.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::~mutex (21 samples, 0.03%)</title><rect x="62.8603%" y="245" width="0.0291%" height="15" fill="rgb(212,99,53)" fg:x="45365" fg:w="21"/><text x="63.1103%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (21 samples, 0.03%)</title><rect x="62.8603%" y="229" width="0.0291%" height="15" fill="rgb(249,111,54)" fg:x="45365" fg:w="21"/><text x="63.1103%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (57 samples, 0.08%)</title><rect x="62.8894%" y="245" width="0.0790%" height="15" fill="rgb(249,55,30)" fg:x="45386" fg:w="57"/><text x="63.1394%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_destroy (8 samples, 0.01%)</title><rect x="62.9697%" y="245" width="0.0111%" height="15" fill="rgb(237,47,42)" fg:x="45444" fg:w="8"/><text x="63.2197%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_destroy (10 samples, 0.01%)</title><rect x="62.9808%" y="245" width="0.0139%" height="15" fill="rgb(211,20,18)" fg:x="45452" fg:w="10"/><text x="63.2308%" y="255.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::WriteImpl (19,120 samples, 26.49%)</title><rect x="36.5023%" y="261" width="26.4937%" height="15" fill="rgb(231,203,46)" fg:x="26343" fg:w="19120"/><text x="36.7523%" y="271.50">httpmq-rs`rocksdb::DBImpl::WriteImpl</text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::InsertInto (10 samples, 0.01%)</title><rect x="63.0279%" y="261" width="0.0139%" height="15" fill="rgb(237,142,3)" fg:x="45486" fg:w="10"/><text x="63.2779%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::AwaitState (8 samples, 0.01%)</title><rect x="63.0418%" y="261" width="0.0111%" height="15" fill="rgb(241,107,1)" fg:x="45496" fg:w="8"/><text x="63.2918%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::WriteThread::JoinBatchGroup (11 samples, 0.02%)</title><rect x="63.0584%" y="261" width="0.0152%" height="15" fill="rgb(229,83,13)" fg:x="45508" fg:w="11"/><text x="63.3084%" y="271.50"></text></g><g><title>httpmq-rs`thread-local wrapper routine for rocksdb::perf_context (23 samples, 0.03%)</title><rect x="63.0778%" y="261" width="0.0319%" height="15" fill="rgb(241,91,40)" fg:x="45522" fg:w="23"/><text x="63.3278%" y="271.50"></text></g><g><title>libc+ (17 samples, 0.02%)</title><rect x="63.1097%" y="261" width="0.0236%" height="15" fill="rgb(225,3,45)" fg:x="45545" fg:w="17"/><text x="63.3597%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb_write (19,312 samples, 26.76%)</title><rect x="36.3956%" y="293" width="26.7598%" height="15" fill="rgb(244,223,14)" fg:x="26266" fg:w="19312"/><text x="36.6456%" y="303.50">httpmq-rs`rocksdb_write</text></g><g><title>httpmq-rs`rocksdb::DBImpl::Write (19,270 samples, 26.70%)</title><rect x="36.4538%" y="277" width="26.7016%" height="15" fill="rgb(224,124,37)" fg:x="26308" fg:w="19270"/><text x="36.7038%" y="287.50">httpmq-rs`rocksdb::DBImpl::Write</text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.01%)</title><rect x="63.1416%" y="261" width="0.0139%" height="15" fill="rgb(251,171,30)" fg:x="45568" fg:w="10"/><text x="63.3916%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.06%)</title><rect x="63.1776%" y="261" width="0.0554%" height="15" fill="rgb(236,46,54)" fg:x="45594" fg:w="40"/><text x="63.4276%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (27 samples, 0.04%)</title><rect x="63.1956%" y="245" width="0.0374%" height="15" fill="rgb(245,213,5)" fg:x="45607" fg:w="27"/><text x="63.4456%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (27 samples, 0.04%)</title><rect x="63.1956%" y="229" width="0.0374%" height="15" fill="rgb(230,144,27)" fg:x="45607" fg:w="27"/><text x="63.4456%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (11 samples, 0.02%)</title><rect x="63.3411%" y="229" width="0.0152%" height="15" fill="rgb(220,86,6)" fg:x="45712" fg:w="11"/><text x="63.5911%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (110 samples, 0.15%)</title><rect x="63.2330%" y="261" width="0.1524%" height="15" fill="rgb(240,20,13)" fg:x="45634" fg:w="110"/><text x="63.4830%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (63 samples, 0.09%)</title><rect x="63.2981%" y="245" width="0.0873%" height="15" fill="rgb(217,89,34)" fg:x="45681" fg:w="63"/><text x="63.5481%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (21 samples, 0.03%)</title><rect x="63.3563%" y="229" width="0.0291%" height="15" fill="rgb(229,13,5)" fg:x="45723" fg:w="21"/><text x="63.6063%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::~WriteBatch (176 samples, 0.24%)</title><rect x="63.1568%" y="277" width="0.2439%" height="15" fill="rgb(244,67,35)" fg:x="45579" fg:w="176"/><text x="63.4068%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.02%)</title><rect x="63.3854%" y="261" width="0.0152%" height="15" fill="rgb(221,40,2)" fg:x="45744" fg:w="11"/><text x="63.6354%" y="271.50"></text></g><g><title>libc+ (12 samples, 0.02%)</title><rect x="63.4007%" y="277" width="0.0166%" height="15" fill="rgb(237,157,21)" fg:x="45755" fg:w="12"/><text x="63.6507%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb_writebatch_destroy (201 samples, 0.28%)</title><rect x="63.1554%" y="293" width="0.2785%" height="15" fill="rgb(222,94,11)" fg:x="45578" fg:w="201"/><text x="63.4054%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (21 samples, 0.03%)</title><rect x="63.4353%" y="293" width="0.0291%" height="15" fill="rgb(249,113,6)" fg:x="45780" fg:w="21"/><text x="63.6853%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.02%)</title><rect x="63.4783%" y="277" width="0.0249%" height="15" fill="rgb(238,137,36)" fg:x="45811" fg:w="18"/><text x="63.7283%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (18 samples, 0.02%)</title><rect x="63.4783%" y="261" width="0.0249%" height="15" fill="rgb(210,102,26)" fg:x="45811" fg:w="18"/><text x="63.7283%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.04%)</title><rect x="63.4644%" y="293" width="0.0402%" height="15" fill="rgb(218,30,30)" fg:x="45801" fg:w="29"/><text x="63.7144%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (9 samples, 0.01%)</title><rect x="63.5670%" y="277" width="0.0125%" height="15" fill="rgb(214,67,26)" fg:x="45875" fg:w="9"/><text x="63.8170%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.03%)</title><rect x="63.6349%" y="261" width="0.0305%" height="15" fill="rgb(251,9,53)" fg:x="45924" fg:w="22"/><text x="63.8849%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (72 samples, 0.10%)</title><rect x="63.5808%" y="277" width="0.0998%" height="15" fill="rgb(228,204,25)" fg:x="45885" fg:w="72"/><text x="63.8308%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (11 samples, 0.02%)</title><rect x="63.6653%" y="261" width="0.0152%" height="15" fill="rgb(207,153,8)" fg:x="45946" fg:w="11"/><text x="63.9153%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (128 samples, 0.18%)</title><rect x="63.5046%" y="293" width="0.1774%" height="15" fill="rgb(242,9,16)" fg:x="45830" fg:w="128"/><text x="63.7546%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::write (19,834 samples, 27.48%)</title><rect x="36.2141%" y="309" width="27.4831%" height="15" fill="rgb(217,211,10)" fg:x="26135" fg:w="19834"/><text x="36.4641%" y="319.50">httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::..</text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (22 samples, 0.03%)</title><rect x="63.7471%" y="261" width="0.0305%" height="15" fill="rgb(219,228,52)" fg:x="46005" fg:w="22"/><text x="63.9971%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (15 samples, 0.02%)</title><rect x="63.7568%" y="245" width="0.0208%" height="15" fill="rgb(231,92,29)" fg:x="46012" fg:w="15"/><text x="64.0068%" y="255.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memset (17 samples, 0.02%)</title><rect x="63.7776%" y="261" width="0.0236%" height="15" fill="rgb(232,8,23)" fg:x="46027" fg:w="17"/><text x="64.0276%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::WriteBatch (77 samples, 0.11%)</title><rect x="63.7083%" y="293" width="0.1067%" height="15" fill="rgb(216,211,34)" fg:x="45977" fg:w="77"/><text x="63.9583%" y="303.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::resize (57 samples, 0.08%)</title><rect x="63.7360%" y="277" width="0.0790%" height="15" fill="rgb(236,151,0)" fg:x="45997" fg:w="57"/><text x="63.9860%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (10 samples, 0.01%)</title><rect x="63.8011%" y="261" width="0.0139%" height="15" fill="rgb(209,168,3)" fg:x="46044" fg:w="10"/><text x="64.0511%" y="271.50"></text></g><g><title>libc+ (33 samples, 0.05%)</title><rect x="63.8150%" y="293" width="0.0457%" height="15" fill="rgb(208,129,28)" fg:x="46054" fg:w="33"/><text x="64.0650%" y="303.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (42 samples, 0.06%)</title><rect x="63.8732%" y="293" width="0.0582%" height="15" fill="rgb(229,78,22)" fg:x="46096" fg:w="42"/><text x="64.1232%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (38 samples, 0.05%)</title><rect x="63.8787%" y="277" width="0.0527%" height="15" fill="rgb(228,187,13)" fg:x="46100" fg:w="38"/><text x="64.1287%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (30 samples, 0.04%)</title><rect x="63.8898%" y="261" width="0.0416%" height="15" fill="rgb(240,119,24)" fg:x="46108" fg:w="30"/><text x="64.1398%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (29 samples, 0.04%)</title><rect x="63.8912%" y="245" width="0.0402%" height="15" fill="rgb(209,194,42)" fg:x="46109" fg:w="29"/><text x="64.1412%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.02%)</title><rect x="63.9148%" y="229" width="0.0166%" height="15" fill="rgb(247,200,46)" fg:x="46126" fg:w="12"/><text x="64.1648%" y="239.50"></text></g><g><title>httpmq-rs`rocksdb_writebatch_create (176 samples, 0.24%)</title><rect x="63.7000%" y="309" width="0.2439%" height="15" fill="rgb(218,76,16)" fg:x="45971" fg:w="176"/><text x="63.9500%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (9 samples, 0.01%)</title><rect x="63.9314%" y="293" width="0.0125%" height="15" fill="rgb(225,21,48)" fg:x="46138" fg:w="9"/><text x="64.1814%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb::GetColumnFamilyID (28 samples, 0.04%)</title><rect x="63.9619%" y="293" width="0.0388%" height="15" fill="rgb(239,223,50)" fg:x="46160" fg:w="28"/><text x="64.2119%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb::EncodeVarint32 (15 samples, 0.02%)</title><rect x="64.0131%" y="277" width="0.0208%" height="15" fill="rgb(244,45,21)" fg:x="46197" fg:w="15"/><text x="64.2631%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::LocalSavePoint::commit (10 samples, 0.01%)</title><rect x="64.0339%" y="277" width="0.0139%" height="15" fill="rgb(232,33,43)" fg:x="46212" fg:w="10"/><text x="64.2839%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::LocalSavePoint::commit (11 samples, 0.02%)</title><rect x="64.1032%" y="261" width="0.0152%" height="15" fill="rgb(209,8,3)" fg:x="46262" fg:w="11"/><text x="64.3532%" y="271.50"></text></g><g><title>libc+ (17 samples, 0.02%)</title><rect x="64.1184%" y="261" width="0.0236%" height="15" fill="rgb(214,25,53)" fg:x="46273" fg:w="17"/><text x="64.3684%" y="271.50"></text></g><g><title>libc+ (39 samples, 0.05%)</title><rect x="64.2071%" y="245" width="0.0540%" height="15" fill="rgb(254,186,54)" fg:x="46337" fg:w="39"/><text x="64.4571%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (20 samples, 0.03%)</title><rect x="64.4247%" y="165" width="0.0277%" height="15" fill="rgb(208,174,49)" fg:x="46494" fg:w="20"/><text x="64.6747%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (177 samples, 0.25%)</title><rect x="64.2903%" y="213" width="0.2453%" height="15" fill="rgb(233,191,51)" fg:x="46397" fg:w="177"/><text x="64.5403%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (167 samples, 0.23%)</title><rect x="64.3041%" y="197" width="0.2314%" height="15" fill="rgb(222,134,10)" fg:x="46407" fg:w="167"/><text x="64.5541%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (157 samples, 0.22%)</title><rect x="64.3180%" y="181" width="0.2175%" height="15" fill="rgb(230,226,20)" fg:x="46417" fg:w="157"/><text x="64.5680%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (60 samples, 0.08%)</title><rect x="64.4524%" y="165" width="0.0831%" height="15" fill="rgb(251,111,25)" fg:x="46514" fg:w="60"/><text x="64.7024%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (16 samples, 0.02%)</title><rect x="64.5134%" y="149" width="0.0222%" height="15" fill="rgb(224,40,46)" fg:x="46558" fg:w="16"/><text x="64.7634%" y="159.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (184 samples, 0.25%)</title><rect x="64.2861%" y="229" width="0.2550%" height="15" fill="rgb(236,108,47)" fg:x="46394" fg:w="184"/><text x="64.5361%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="64.5632%" y="213" width="0.0111%" height="15" fill="rgb(234,93,0)" fg:x="46594" fg:w="8"/><text x="64.8132%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.01%)</title><rect x="64.5632%" y="197" width="0.0111%" height="15" fill="rgb(224,213,32)" fg:x="46594" fg:w="8"/><text x="64.8132%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.04%)</title><rect x="64.5438%" y="229" width="0.0360%" height="15" fill="rgb(251,11,48)" fg:x="46580" fg:w="26"/><text x="64.7938%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (26 samples, 0.04%)</title><rect x="64.6741%" y="197" width="0.0360%" height="15" fill="rgb(236,173,5)" fg:x="46674" fg:w="26"/><text x="64.9241%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (80 samples, 0.11%)</title><rect x="64.6159%" y="213" width="0.1109%" height="15" fill="rgb(230,95,12)" fg:x="46632" fg:w="80"/><text x="64.8659%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (12 samples, 0.02%)</title><rect x="64.7101%" y="197" width="0.0166%" height="15" fill="rgb(232,209,1)" fg:x="46700" fg:w="12"/><text x="64.9601%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (108 samples, 0.15%)</title><rect x="64.5799%" y="229" width="0.1497%" height="15" fill="rgb(232,6,1)" fg:x="46606" fg:w="108"/><text x="64.8299%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (82 samples, 0.11%)</title><rect x="64.7337%" y="229" width="0.1136%" height="15" fill="rgb(210,224,50)" fg:x="46717" fg:w="82"/><text x="64.9837%" y="239.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__grow_by_and_replace (424 samples, 0.59%)</title><rect x="64.2612%" y="245" width="0.5875%" height="15" fill="rgb(228,127,35)" fg:x="46376" fg:w="424"/><text x="64.5112%" y="255.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (533 samples, 0.74%)</title><rect x="64.1489%" y="261" width="0.7386%" height="15" fill="rgb(245,102,45)" fg:x="46295" fg:w="533"/><text x="64.3989%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.02%)</title><rect x="64.8639%" y="245" width="0.0236%" height="15" fill="rgb(214,1,49)" fg:x="46811" fg:w="17"/><text x="65.1139%" y="255.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::push_back (15 samples, 0.02%)</title><rect x="64.8875%" y="261" width="0.0208%" height="15" fill="rgb(226,163,40)" fg:x="46828" fg:w="15"/><text x="65.1375%" y="271.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (14 samples, 0.02%)</title><rect x="64.9083%" y="261" width="0.0194%" height="15" fill="rgb(239,212,28)" fg:x="46843" fg:w="14"/><text x="65.1583%" y="271.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatchInternal::Put (643 samples, 0.89%)</title><rect x="64.0478%" y="277" width="0.8910%" height="15" fill="rgb(220,20,13)" fg:x="46222" fg:w="643"/><text x="64.2978%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="64.9277%" y="261" width="0.0111%" height="15" fill="rgb(210,164,35)" fg:x="46857" fg:w="8"/><text x="65.1777%" y="271.50"></text></g><g><title>libc+ (33 samples, 0.05%)</title><rect x="64.9388%" y="277" width="0.0457%" height="15" fill="rgb(248,109,41)" fg:x="46865" fg:w="33"/><text x="65.1888%" y="287.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (10 samples, 0.01%)</title><rect x="64.9845%" y="277" width="0.0139%" height="15" fill="rgb(238,23,50)" fg:x="46898" fg:w="10"/><text x="65.2345%" y="287.50"></text></g><g><title>httpmq-rs`rocksdb::WriteBatch::Put (722 samples, 1.00%)</title><rect x="64.0007%" y="293" width="1.0004%" height="15" fill="rgb(211,48,49)" fg:x="46188" fg:w="722"/><text x="64.2507%" y="303.50"></text></g><g><title>httpmq-rs`rocksdb_writebatch_put (764 samples, 1.06%)</title><rect x="63.9508%" y="309" width="1.0586%" height="15" fill="rgb(223,36,21)" fg:x="46152" fg:w="764"/><text x="64.2008%" y="319.50"></text></g><g><title>libc+ (9 samples, 0.01%)</title><rect x="65.0150%" y="309" width="0.0125%" height="15" fill="rgb(207,123,46)" fg:x="46920" fg:w="9"/><text x="65.2650%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wake (22 samples, 0.03%)</title><rect x="65.0371%" y="309" width="0.0305%" height="15" fill="rgb(240,218,32)" fg:x="46936" fg:w="22"/><text x="65.2871%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (11 samples, 0.02%)</title><rect x="65.1397%" y="261" width="0.0152%" height="15" fill="rgb(252,5,43)" fg:x="47010" fg:w="11"/><text x="65.3897%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (51 samples, 0.07%)</title><rect x="65.0967%" y="277" width="0.0707%" height="15" fill="rgb(252,84,19)" fg:x="46979" fg:w="51"/><text x="65.3467%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.01%)</title><rect x="65.1549%" y="261" width="0.0125%" height="15" fill="rgb(243,152,39)" fg:x="47021" fg:w="9"/><text x="65.4049%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (56 samples, 0.08%)</title><rect x="65.0912%" y="293" width="0.0776%" height="15" fill="rgb(234,160,15)" fg:x="46975" fg:w="56"/><text x="65.3412%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (76 samples, 0.11%)</title><rect x="65.0690%" y="309" width="0.1053%" height="15" fill="rgb(237,34,20)" fg:x="46959" fg:w="76"/><text x="65.3190%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (54 samples, 0.07%)</title><rect x="65.2450%" y="293" width="0.0748%" height="15" fill="rgb(229,97,13)" fg:x="47086" fg:w="54"/><text x="65.4950%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (49 samples, 0.07%)</title><rect x="65.2519%" y="277" width="0.0679%" height="15" fill="rgb(234,71,50)" fg:x="47091" fg:w="49"/><text x="65.5019%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (103 samples, 0.14%)</title><rect x="65.1799%" y="309" width="0.1427%" height="15" fill="rgb(253,155,4)" fg:x="47039" fg:w="103"/><text x="65.4299%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (22 samples, 0.03%)</title><rect x="65.4792%" y="293" width="0.0305%" height="15" fill="rgb(222,185,37)" fg:x="47255" fg:w="22"/><text x="65.7292%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (57 samples, 0.08%)</title><rect x="65.6676%" y="277" width="0.0790%" height="15" fill="rgb(251,177,13)" fg:x="47391" fg:w="57"/><text x="65.9176%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (200 samples, 0.28%)</title><rect x="65.5180%" y="293" width="0.2771%" height="15" fill="rgb(250,179,40)" fg:x="47283" fg:w="200"/><text x="65.7680%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (35 samples, 0.05%)</title><rect x="65.7466%" y="277" width="0.0485%" height="15" fill="rgb(242,44,2)" fg:x="47448" fg:w="35"/><text x="65.9966%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (350 samples, 0.48%)</title><rect x="65.3226%" y="309" width="0.4850%" height="15" fill="rgb(216,177,13)" fg:x="47142" fg:w="350"/><text x="65.5726%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_os_unfair_lock_lock_slow (9 samples, 0.01%)</title><rect x="65.7951%" y="293" width="0.0125%" height="15" fill="rgb(216,106,43)" fg:x="47483" fg:w="9"/><text x="66.0451%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.02%)</title><rect x="65.8297%" y="309" width="0.0236%" height="15" fill="rgb(216,183,2)" fg:x="47508" fg:w="17"/><text x="66.0797%" y="319.50"></text></g><g><title>httpmq-rs`httpmq_rs::service::process::_{{closure}} (32,887 samples, 45.57%)</title><rect x="20.2915%" y="325" width="45.5701%" height="15" fill="rgb(249,75,3)" fg:x="14644" fg:w="32887"/><text x="20.5415%" y="335.50">httpmq-rs`httpmq_rs::service::process::_{{closure}}</text></g><g><title>httpmq-rs`rocksdb::db::DBWithThreadMode&lt;T&gt;::write (13 samples, 0.02%)</title><rect x="65.8644%" y="325" width="0.0180%" height="15" fill="rgb(219,67,39)" fg:x="47533" fg:w="13"/><text x="66.1144%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.03%)</title><rect x="66.0196%" y="277" width="0.0263%" height="15" fill="rgb(253,228,2)" fg:x="47645" fg:w="19"/><text x="66.2696%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (89 samples, 0.12%)</title><rect x="65.9253%" y="293" width="0.1233%" height="15" fill="rgb(235,138,27)" fg:x="47577" fg:w="89"/><text x="66.1753%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (98 samples, 0.14%)</title><rect x="65.9156%" y="309" width="0.1358%" height="15" fill="rgb(236,97,51)" fg:x="47570" fg:w="98"/><text x="66.1656%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (111 samples, 0.15%)</title><rect x="65.8990%" y="325" width="0.1538%" height="15" fill="rgb(240,80,30)" fg:x="47558" fg:w="111"/><text x="66.1490%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (14 samples, 0.02%)</title><rect x="66.0528%" y="325" width="0.0194%" height="15" fill="rgb(230,178,19)" fg:x="47669" fg:w="14"/><text x="66.3028%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (19 samples, 0.03%)</title><rect x="66.1484%" y="309" width="0.0263%" height="15" fill="rgb(210,190,27)" fg:x="47738" fg:w="19"/><text x="66.3984%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (18 samples, 0.02%)</title><rect x="66.1498%" y="293" width="0.0249%" height="15" fill="rgb(222,107,31)" fg:x="47739" fg:w="18"/><text x="66.3998%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (72 samples, 0.10%)</title><rect x="66.0764%" y="325" width="0.0998%" height="15" fill="rgb(216,127,34)" fg:x="47686" fg:w="72"/><text x="66.3264%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.01%)</title><rect x="66.2634%" y="293" width="0.0125%" height="15" fill="rgb(234,116,52)" fg:x="47821" fg:w="9"/><text x="66.5134%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (59 samples, 0.08%)</title><rect x="66.2149%" y="309" width="0.0818%" height="15" fill="rgb(222,124,15)" fg:x="47786" fg:w="59"/><text x="66.4649%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.02%)</title><rect x="66.2759%" y="293" width="0.0208%" height="15" fill="rgb(231,179,28)" fg:x="47830" fg:w="15"/><text x="66.5259%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (90 samples, 0.12%)</title><rect x="66.1761%" y="325" width="0.1247%" height="15" fill="rgb(226,93,45)" fg:x="47758" fg:w="90"/><text x="66.4261%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc (14 samples, 0.02%)</title><rect x="66.3009%" y="325" width="0.0194%" height="15" fill="rgb(215,8,51)" fg:x="47848" fg:w="14"/><text x="66.5509%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.02%)</title><rect x="66.3397%" y="325" width="0.0222%" height="15" fill="rgb(223,106,5)" fg:x="47876" fg:w="16"/><text x="66.5897%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_rdlock (48 samples, 0.07%)</title><rect x="66.3646%" y="325" width="0.0665%" height="15" fill="rgb(250,191,5)" fg:x="47894" fg:w="48"/><text x="66.6146%" y="335.50"></text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (37,799 samples, 52.38%)</title><rect x="14.0852%" y="341" width="52.3764%" height="15" fill="rgb(242,132,44)" fg:x="10165" fg:w="37799"/><text x="14.3352%" y="351.50">httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;..</text></g><g><title>libsystem_pthread.dylib`pthread_rwlock_unlock (22 samples, 0.03%)</title><rect x="66.4311%" y="325" width="0.0305%" height="15" fill="rgb(251,152,29)" fg:x="47942" fg:w="22"/><text x="66.6811%" y="335.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum_core::extract::RequestParts&lt;hyper::body::body::Body&gt;&gt; (12 samples, 0.02%)</title><rect x="66.4657%" y="341" width="0.0166%" height="15" fill="rgb(218,179,5)" fg:x="47967" fg:w="12"/><text x="66.7157%" y="351.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;axum::extract::query::Query&lt;httpmq_rs::service::KVSet&gt; as axum_core::extract::FromRequest&lt;hyper::body::body::Body&gt;&gt;::from_request::{{closure}}&gt;&gt; (25 samples, 0.03%)</title><rect x="66.4824%" y="341" width="0.0346%" height="15" fill="rgb(227,67,19)" fg:x="47979" fg:w="25"/><text x="66.7324%" y="351.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;httpmq_rs::service::process as axum::handler::Handler&lt;(axum::extract::query::Query&lt;httpmq_rs::service::KVSet&gt;,axum::extract::extension::Extension&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;)&gt;&gt;::call::{{closure}}&gt;&gt; (8 samples, 0.01%)</title><rect x="66.5170%" y="341" width="0.0111%" height="15" fill="rgb(233,119,31)" fg:x="48004" fg:w="8"/><text x="66.7670%" y="351.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;httpmq_rs::service::process::{{closure}}&gt;&gt; (14 samples, 0.02%)</title><rect x="66.5281%" y="341" width="0.0194%" height="15" fill="rgb(241,120,22)" fg:x="48012" fg:w="14"/><text x="66.7781%" y="351.50"></text></g><g><title>httpmq-rs`core::result::Result::Ok (8 samples, 0.01%)</title><rect x="66.5489%" y="341" width="0.0111%" height="15" fill="rgb(224,102,30)" fg:x="48027" fg:w="8"/><text x="66.7989%" y="351.50"></text></g><g><title>httpmq-rs`httpmq_rs::service::process (13 samples, 0.02%)</title><rect x="66.5600%" y="341" width="0.0180%" height="15" fill="rgb(210,164,37)" fg:x="48035" fg:w="13"/><text x="66.8100%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.03%)</title><rect x="66.5932%" y="341" width="0.0305%" height="15" fill="rgb(226,191,16)" fg:x="48059" fg:w="22"/><text x="66.8432%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="66.6126%" y="325" width="0.0111%" height="15" fill="rgb(214,40,45)" fg:x="48073" fg:w="8"/><text x="66.8626%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.02%)</title><rect x="66.7055%" y="309" width="0.0236%" height="15" fill="rgb(244,29,26)" fg:x="48140" fg:w="17"/><text x="66.9555%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (59 samples, 0.08%)</title><rect x="66.6653%" y="325" width="0.0818%" height="15" fill="rgb(216,16,5)" fg:x="48111" fg:w="59"/><text x="66.9153%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (13 samples, 0.02%)</title><rect x="66.7290%" y="309" width="0.0180%" height="15" fill="rgb(249,76,35)" fg:x="48157" fg:w="13"/><text x="66.9790%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (90 samples, 0.12%)</title><rect x="66.6237%" y="341" width="0.1247%" height="15" fill="rgb(207,11,44)" fg:x="48081" fg:w="90"/><text x="66.8737%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="66.7595%" y="341" width="0.0111%" height="15" fill="rgb(228,190,49)" fg:x="48179" fg:w="8"/><text x="67.0095%" y="351.50"></text></g><g><title>httpmq-rs`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (38,095 samples, 52.79%)</title><rect x="13.9868%" y="357" width="52.7866%" height="15" fill="rgb(214,173,12)" fg:x="10094" fg:w="38095"/><text x="14.2368%" y="367.50">httpmq-rs`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Futur..</text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;httpmq_rs::service::process as axum::handler::Handler&lt;(axum::extract::query::Query&lt;httpmq_rs::service::KVSet&gt;,axum::extract::extension::Extension&lt;alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;)&gt;&gt;::call::{{closure}}&gt;&gt; (12 samples, 0.02%)</title><rect x="66.7747%" y="357" width="0.0166%" height="15" fill="rgb(218,26,35)" fg:x="48190" fg:w="12"/><text x="67.0247%" y="367.50"></text></g><g><title>httpmq-rs`core::result::Result::Ok (18 samples, 0.02%)</title><rect x="66.7914%" y="357" width="0.0249%" height="15" fill="rgb(220,200,19)" fg:x="48202" fg:w="18"/><text x="67.0414%" y="367.50"></text></g><g><title>httpmq-rs`&lt;axum::handler::future::IntoServiceFuture as core::future::future::Future&gt;::poll (38,181 samples, 52.91%)</title><rect x="13.9258%" y="373" width="52.9057%" height="15" fill="rgb(239,95,49)" fg:x="10050" fg:w="38181"/><text x="14.1758%" y="383.50">httpmq-rs`&lt;axum::handler::future::IntoServiceFuture as core::future::future::Future&gt;::p..</text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.01%)</title><rect x="66.8205%" y="357" width="0.0111%" height="15" fill="rgb(235,85,53)" fg:x="48223" fg:w="8"/><text x="67.0705%" y="367.50"></text></g><g><title>httpmq-rs`&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (21 samples, 0.03%)</title><rect x="66.8316%" y="373" width="0.0291%" height="15" fill="rgb(233,133,31)" fg:x="48231" fg:w="21"/><text x="67.0816%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (16 samples, 0.02%)</title><rect x="66.9480%" y="309" width="0.0222%" height="15" fill="rgb(218,25,20)" fg:x="48315" fg:w="16"/><text x="67.1980%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (68 samples, 0.09%)</title><rect x="66.9715%" y="309" width="0.0942%" height="15" fill="rgb(252,210,38)" fg:x="48332" fg:w="68"/><text x="67.2215%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.01%)</title><rect x="67.0519%" y="293" width="0.0139%" height="15" fill="rgb(242,134,21)" fg:x="48390" fg:w="10"/><text x="67.3019%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (149 samples, 0.21%)</title><rect x="66.8620%" y="357" width="0.2065%" height="15" fill="rgb(213,28,48)" fg:x="48253" fg:w="149"/><text x="67.1120%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (137 samples, 0.19%)</title><rect x="66.8787%" y="341" width="0.1898%" height="15" fill="rgb(250,196,2)" fg:x="48265" fg:w="137"/><text x="67.1287%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (135 samples, 0.19%)</title><rect x="66.8814%" y="325" width="0.1871%" height="15" fill="rgb(227,5,17)" fg:x="48267" fg:w="135"/><text x="67.1314%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.01%)</title><rect x="67.0685%" y="357" width="0.0111%" height="15" fill="rgb(221,226,24)" fg:x="48402" fg:w="8"/><text x="67.3185%" y="367.50"></text></g><g><title>httpmq-rs`&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::call (173 samples, 0.24%)</title><rect x="66.8607%" y="373" width="0.2397%" height="15" fill="rgb(211,5,48)" fg:x="48252" fg:w="173"/><text x="67.1107%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.02%)</title><rect x="67.0796%" y="357" width="0.0208%" height="15" fill="rgb(219,150,6)" fg:x="48410" fg:w="15"/><text x="67.3296%" y="367.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::handler::future::IntoServiceFuture&gt; (14 samples, 0.02%)</title><rect x="67.1267%" y="373" width="0.0194%" height="15" fill="rgb(251,46,16)" fg:x="48444" fg:w="14"/><text x="67.3767%" y="383.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone::BoxCloneService&lt;http::request::Request&lt;hyper::body::body::Body&gt;,http::response::Response&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;,core::convert::Infallible&gt;,http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt; (29 samples, 0.04%)</title><rect x="67.1461%" y="373" width="0.0402%" height="15" fill="rgb(220,204,40)" fg:x="48458" fg:w="29"/><text x="67.3961%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.02%)</title><rect x="67.1960%" y="373" width="0.0236%" height="15" fill="rgb(211,85,2)" fg:x="48494" fg:w="17"/><text x="67.4460%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.02%)</title><rect x="67.2043%" y="357" width="0.0152%" height="15" fill="rgb(229,17,7)" fg:x="48500" fg:w="11"/><text x="67.4543%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.01%)</title><rect x="67.2057%" y="341" width="0.0139%" height="15" fill="rgb(239,72,28)" fg:x="48501" fg:w="10"/><text x="67.4557%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (11 samples, 0.02%)</title><rect x="67.2389%" y="357" width="0.0152%" height="15" fill="rgb(230,47,54)" fg:x="48525" fg:w="11"/><text x="67.4889%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.02%)</title><rect x="67.2833%" y="341" width="0.0236%" height="15" fill="rgb(214,50,8)" fg:x="48557" fg:w="17"/><text x="67.5333%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (75 samples, 0.10%)</title><rect x="67.2195%" y="373" width="0.1039%" height="15" fill="rgb(216,198,43)" fg:x="48511" fg:w="75"/><text x="67.4695%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (49 samples, 0.07%)</title><rect x="67.2556%" y="357" width="0.0679%" height="15" fill="rgb(234,20,35)" fg:x="48537" fg:w="49"/><text x="67.5056%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (12 samples, 0.02%)</title><rect x="67.3068%" y="341" width="0.0166%" height="15" fill="rgb(254,45,19)" fg:x="48574" fg:w="12"/><text x="67.5568%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc (10 samples, 0.01%)</title><rect x="67.3235%" y="373" width="0.0139%" height="15" fill="rgb(219,14,44)" fg:x="48586" fg:w="10"/><text x="67.5735%" y="383.50"></text></g><g><title>httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (38,614 samples, 53.51%)</title><rect x="13.8566%" y="389" width="53.5057%" height="15" fill="rgb(217,220,26)" fg:x="10000" fg:w="38614"/><text x="14.1066%" y="399.50">httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.02%)</title><rect x="67.3415%" y="373" width="0.0208%" height="15" fill="rgb(213,158,28)" fg:x="48599" fg:w="15"/><text x="67.5915%" y="383.50"></text></g><g><title>httpmq-rs`&lt;tower::timeout::future::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (38,701 samples, 53.63%)</title><rect x="13.7526%" y="405" width="53.6263%" height="15" fill="rgb(252,51,52)" fg:x="9925" fg:w="38701"/><text x="14.0026%" y="415.50">httpmq-rs`&lt;tower::timeout::future::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::p..</text></g><g><title>httpmq-rs`&lt;tokio::sync::semaphore::OwnedSemaphorePermit as core::ops::drop::Drop&gt;::drop (22 samples, 0.03%)</title><rect x="67.4205%" y="389" width="0.0305%" height="15" fill="rgb(246,89,16)" fg:x="48656" fg:w="22"/><text x="67.6705%" y="399.50"></text></g><g><title>httpmq-rs`parking_lot::raw_mutex::RawMutex::lock_slow (9 samples, 0.01%)</title><rect x="67.4925%" y="373" width="0.0125%" height="15" fill="rgb(216,158,49)" fg:x="48708" fg:w="9"/><text x="67.7425%" y="383.50"></text></g><g><title>httpmq-rs`&lt;tokio::time::driver::entry::TimerEntry as core::ops::drop::Drop&gt;::drop (40 samples, 0.06%)</title><rect x="67.4509%" y="389" width="0.0554%" height="15" fill="rgb(236,107,19)" fg:x="48678" fg:w="40"/><text x="67.7009%" y="399.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="67.5161%" y="389" width="0.0249%" height="15" fill="rgb(228,185,30)" fg:x="48725" fg:w="18"/><text x="67.7661%" y="399.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;,http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt; (132 samples, 0.18%)</title><rect x="67.3955%" y="405" width="0.1829%" height="15" fill="rgb(246,134,8)" fg:x="48638" fg:w="132"/><text x="67.6455%" y="415.50"></text></g><g><title>httpmq-rs`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (26 samples, 0.04%)</title><rect x="67.5424%" y="389" width="0.0360%" height="15" fill="rgb(214,143,50)" fg:x="48744" fg:w="26"/><text x="67.7924%" y="399.50"></text></g><g><title>httpmq-rs`tokio::time::driver::sleep::sleep (9 samples, 0.01%)</title><rect x="67.5937%" y="405" width="0.0125%" height="15" fill="rgb(228,75,8)" fg:x="48781" fg:w="9"/><text x="67.8437%" y="415.50"></text></g><g><title>httpmq-rs`tokio_util::sync::poll_semaphore::PollSemaphore::poll_acquire (27 samples, 0.04%)</title><rect x="67.6061%" y="405" width="0.0374%" height="15" fill="rgb(207,175,4)" fg:x="48790" fg:w="27"/><text x="67.8561%" y="415.50"></text></g><g><title>httpmq-rs`tokio::sync::semaphore::Semaphore::try_acquire_owned (19 samples, 0.03%)</title><rect x="67.6172%" y="389" width="0.0263%" height="15" fill="rgb(205,108,24)" fg:x="48798" fg:w="19"/><text x="67.8672%" y="399.50"></text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39,483 samples, 54.71%)</title><rect x="13.0626%" y="421" width="54.7098%" height="15" fill="rgb(244,120,49)" fg:x="9427" fg:w="39483"/><text x="13.3126%" y="431.50">httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::po..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (93 samples, 0.13%)</title><rect x="67.6436%" y="405" width="0.1289%" height="15" fill="rgb(223,47,38)" fg:x="48817" fg:w="93"/><text x="67.8936%" y="415.50"></text></g><g><title>httpmq-rs`&lt;tower::timeout::future::ResponseFuture&lt;F&gt; as core::future::future::Future&gt;::poll (14 samples, 0.02%)</title><rect x="67.7738%" y="421" width="0.0194%" height="15" fill="rgb(229,179,11)" fg:x="48911" fg:w="14"/><text x="68.0238%" y="431.50"></text></g><g><title>httpmq-rs`tokio_util::sync::poll_semaphore::PollSemaphore::poll_acquire (19 samples, 0.03%)</title><rect x="67.8057%" y="421" width="0.0263%" height="15" fill="rgb(231,122,1)" fg:x="48934" fg:w="19"/><text x="68.0557%" y="431.50"></text></g><g><title>httpmq-rs`&lt;axum::error_handling::future::HandleErrorFuture as core::future::future::Future&gt;::poll (39,592 samples, 54.86%)</title><rect x="13.0224%" y="437" width="54.8609%" height="15" fill="rgb(245,119,9)" fg:x="9398" fg:w="39592"/><text x="13.2724%" y="447.50">httpmq-rs`&lt;axum::error_handling::future::HandleErrorFuture as core::future::future::Future..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (37 samples, 0.05%)</title><rect x="67.8320%" y="421" width="0.0513%" height="15" fill="rgb(241,163,25)" fg:x="48953" fg:w="37"/><text x="68.0820%" y="431.50"></text></g><g><title>httpmq-rs`&lt;tower_http::map_response_body::ResponseFuture&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (39,655 samples, 54.95%)</title><rect x="12.9711%" y="453" width="54.9482%" height="15" fill="rgb(217,214,3)" fg:x="9361" fg:w="39655"/><text x="13.2211%" y="463.50">httpmq-rs`&lt;tower_http::map_response_body::ResponseFuture&lt;Fut,F&gt; as core::future::future::Fu..</text></g><g><title>httpmq-rs`&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.04%)</title><rect x="67.8833%" y="437" width="0.0360%" height="15" fill="rgb(240,86,28)" fg:x="48990" fg:w="26"/><text x="68.1333%" y="447.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place$LT$tower..util..map_future..MapFuture$LT$tower_http..map_response_body..MapResponseBody$LT$tower_http..map_response_body..MapResponseBody$LT$axum..error_handling..HandleError$LT$tower..load_shed..LoadShed$LT$tower..limit..concurrency..service..ConcurrencyLimit$LT$tower..timeout..Timeout$LT$tower_http..add_extension..AddExtension$LT$axum..routing..route..Route$C$alloc..sync..Arc$LT$std..sync..rwlock..RwLock$LT$httpmq_rs..service..State$GT$$GT$$GT$$GT$$GT$$GT$$C$httpmq_rs..service..handle_error$C$$LP$$RP$$GT$$C$axum_core..body..boxed$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_core..error..Error$GT$$GT$$GT$$C$axum_core..body..boxed$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_core..error..Error$GT$$GT$$GT$$C$tower..util..boxed_clone..BoxCloneService$LT$http..request..Request$LT$hyper..body..body..Body$GT$$C$http..response..Response$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_cor� (8 samples, 0.01%)</title><rect x="67.9276%" y="453" width="0.0111%" height="15" fill="rgb(215,47,9)" fg:x="49022" fg:w="8"/><text x="68.1776%" y="463.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::error_handling::HandleError&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;,httpmq_rs::service::handle_error,()&gt;&gt; (19 samples, 0.03%)</title><rect x="67.9706%" y="437" width="0.0263%" height="15" fill="rgb(252,25,45)" fg:x="49053" fg:w="19"/><text x="68.2206%" y="447.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;axum::error_handling::HandleError&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;,httpmq_rs::service::handle_error,()&gt; as tower_service::Service&lt;http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt;::call::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="67.9969%" y="437" width="0.0249%" height="15" fill="rgb(251,164,9)" fg:x="49072" fg:w="18"/><text x="68.2469%" y="447.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower_http::map_response_body::ResponseFuture&lt;tower_http::map_response_body::ResponseFuture&lt;axum::error_handling::future::HandleErrorFuture,axum_core::body::boxed&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;&gt;,axum_core::body::boxed&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;&gt;&gt; (11 samples, 0.02%)</title><rect x="68.0218%" y="437" width="0.0152%" height="15" fill="rgb(233,194,0)" fg:x="49090" fg:w="11"/><text x="68.2718%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_size (45 samples, 0.06%)</title><rect x="68.0620%" y="421" width="0.0624%" height="15" fill="rgb(249,111,24)" fg:x="49119" fg:w="45"/><text x="68.3120%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (30 samples, 0.04%)</title><rect x="68.1244%" y="421" width="0.0416%" height="15" fill="rgb(250,223,3)" fg:x="49164" fg:w="30"/><text x="68.3744%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (27 samples, 0.04%)</title><rect x="68.1285%" y="405" width="0.0374%" height="15" fill="rgb(236,178,37)" fg:x="49167" fg:w="27"/><text x="68.3785%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (95 samples, 0.13%)</title><rect x="68.0371%" y="437" width="0.1316%" height="15" fill="rgb(241,158,50)" fg:x="49101" fg:w="95"/><text x="68.2871%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (10 samples, 0.01%)</title><rect x="68.2214%" y="421" width="0.0139%" height="15" fill="rgb(213,121,41)" fg:x="49234" fg:w="10"/><text x="68.4714%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_small (58 samples, 0.08%)</title><rect x="68.1687%" y="437" width="0.0804%" height="15" fill="rgb(240,92,3)" fg:x="49196" fg:w="58"/><text x="68.4187%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (8 samples, 0.01%)</title><rect x="68.2380%" y="421" width="0.0111%" height="15" fill="rgb(205,123,3)" fg:x="49246" fg:w="8"/><text x="68.4880%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.03%)</title><rect x="68.2491%" y="437" width="0.0263%" height="15" fill="rgb(205,97,47)" fg:x="49254" fg:w="19"/><text x="68.4991%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.01%)</title><rect x="68.2782%" y="437" width="0.0125%" height="15" fill="rgb(247,152,14)" fg:x="49275" fg:w="9"/><text x="68.5282%" y="447.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower::util::oneshot::State&lt;tower::util::boxed_clone::BoxCloneService&lt;http::request::Request&lt;hyper::body::body::Body&gt;,http::response::Response&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;,core::convert::Infallible&gt;,http::request::Request&lt;hyper::body::body::Body&gt;&gt;&gt; (255 samples, 0.35%)</title><rect x="67.9387%" y="453" width="0.3533%" height="15" fill="rgb(248,195,53)" fg:x="49030" fg:w="255"/><text x="68.1887%" y="463.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;tower_http::map_response_body::ResponseFuture&lt;tower_http::map_response_body::ResponseFuture&lt;axum::error_handling::future::HandleErrorFuture,axum_core::body::boxed&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;&gt;,axum_core::body::boxed&lt;http_body::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,axum_core::error::Error&gt;&gt;&gt;&gt; (19 samples, 0.03%)</title><rect x="68.2920%" y="453" width="0.0263%" height="15" fill="rgb(226,201,16)" fg:x="49285" fg:w="19"/><text x="68.5420%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="68.3489%" y="437" width="0.0111%" height="15" fill="rgb(205,98,0)" fg:x="49326" fg:w="8"/><text x="68.5989%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.02%)</title><rect x="68.3378%" y="453" width="0.0249%" height="15" fill="rgb(214,191,48)" fg:x="49318" fg:w="18"/><text x="68.5878%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (9 samples, 0.01%)</title><rect x="68.3960%" y="437" width="0.0125%" height="15" fill="rgb(237,112,39)" fg:x="49360" fg:w="9"/><text x="68.6460%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.01%)</title><rect x="68.4403%" y="421" width="0.0139%" height="15" fill="rgb(247,203,27)" fg:x="49392" fg:w="10"/><text x="68.6903%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (49 samples, 0.07%)</title><rect x="68.4112%" y="437" width="0.0679%" height="15" fill="rgb(235,124,28)" fg:x="49371" fg:w="49"/><text x="68.6612%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (18 samples, 0.02%)</title><rect x="68.4542%" y="421" width="0.0249%" height="15" fill="rgb(208,207,46)" fg:x="49402" fg:w="18"/><text x="68.7042%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (84 samples, 0.12%)</title><rect x="68.3641%" y="453" width="0.1164%" height="15" fill="rgb(234,176,4)" fg:x="49337" fg:w="84"/><text x="68.6141%" y="463.50"></text></g><g><title>httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (40,552 samples, 56.19%)</title><rect x="12.3503%" y="469" width="56.1911%" height="15" fill="rgb(230,133,28)" fg:x="8913" fg:w="40552"/><text x="12.6003%" y="479.50">httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (39 samples, 0.05%)</title><rect x="68.4874%" y="453" width="0.0540%" height="15" fill="rgb(211,137,40)" fg:x="49426" fg:w="39"/><text x="68.7374%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.02%)</title><rect x="68.5706%" y="469" width="0.0166%" height="15" fill="rgb(254,35,13)" fg:x="49486" fg:w="12"/><text x="68.8206%" y="479.50"></text></g><g><title>httpmq-rs`&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll (40,638 samples, 56.31%)</title><rect x="12.2783%" y="485" width="56.3103%" height="15" fill="rgb(225,49,51)" fg:x="8861" fg:w="40638"/><text x="12.5283%" y="495.50">httpmq-rs`&lt;futures_util::future::either::Either&lt;A,B&gt; as core::future::future::Future&gt;::poll</text></g><g><title>httpmq-rs`&lt;http_body::combinators::map_err::MapErr&lt;B,F&gt; as http_body::Body&gt;::poll_data (9 samples, 0.01%)</title><rect x="68.5983%" y="485" width="0.0125%" height="15" fill="rgb(251,10,15)" fg:x="49506" fg:w="9"/><text x="68.8483%" y="495.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::conn::KA as core::ops::bit::BitAndAssign&lt;bool&gt;&gt;::bitand_assign (13 samples, 0.02%)</title><rect x="68.6121%" y="485" width="0.0180%" height="15" fill="rgb(228,207,15)" fg:x="49516" fg:w="13"/><text x="68.8621%" y="495.50"></text></g><g><title>httpmq-rs`&lt;T as tower::util::boxed_clone::CloneService&lt;R&gt;&gt;::clone_box (35 samples, 0.05%)</title><rect x="68.8477%" y="453" width="0.0485%" height="15" fill="rgb(241,99,19)" fg:x="49686" fg:w="35"/><text x="69.0977%" y="463.50"></text></g><g><title>httpmq-rs`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.03%)</title><rect x="68.8962%" y="453" width="0.0319%" height="15" fill="rgb(207,104,49)" fg:x="49721" fg:w="23"/><text x="69.1462%" y="463.50"></text></g><g><title>httpmq-rs`&lt;tokio_util::sync::poll_semaphore::PollSemaphore as core::clone::Clone&gt;::clone (23 samples, 0.03%)</title><rect x="69.0666%" y="421" width="0.0319%" height="15" fill="rgb(234,99,18)" fg:x="49844" fg:w="23"/><text x="69.3166%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.01%)</title><rect x="69.1775%" y="373" width="0.0111%" height="15" fill="rgb(213,191,49)" fg:x="49924" fg:w="8"/><text x="69.4275%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (32 samples, 0.04%)</title><rect x="69.1886%" y="373" width="0.0443%" height="15" fill="rgb(210,226,19)" fg:x="49932" fg:w="32"/><text x="69.4386%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.02%)</title><rect x="69.2163%" y="357" width="0.0166%" height="15" fill="rgb(229,97,18)" fg:x="49952" fg:w="12"/><text x="69.4663%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (98 samples, 0.14%)</title><rect x="69.0985%" y="421" width="0.1358%" height="15" fill="rgb(211,167,15)" fg:x="49867" fg:w="98"/><text x="69.3485%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (94 samples, 0.13%)</title><rect x="69.1040%" y="405" width="0.1303%" height="15" fill="rgb(210,169,34)" fg:x="49871" fg:w="94"/><text x="69.3540%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (87 samples, 0.12%)</title><rect x="69.1137%" y="389" width="0.1206%" height="15" fill="rgb(241,121,31)" fg:x="49878" fg:w="87"/><text x="69.3637%" y="399.50"></text></g><g><title>httpmq-rs`&lt;T as tower::util::boxed_clone::CloneService&lt;R&gt;&gt;::clone_box (201 samples, 0.28%)</title><rect x="68.9627%" y="437" width="0.2785%" height="15" fill="rgb(232,40,11)" fg:x="49769" fg:w="201"/><text x="69.2127%" y="447.50"></text></g><g><title>httpmq-rs`&lt;axum::routing::method_routing::MethodRouter&lt;B,E&gt; as core::clone::Clone&gt;::clone (231 samples, 0.32%)</title><rect x="68.9281%" y="453" width="0.3201%" height="15" fill="rgb(205,86,26)" fg:x="49744" fg:w="231"/><text x="69.1781%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (63 samples, 0.09%)</title><rect x="69.3008%" y="421" width="0.0873%" height="15" fill="rgb(231,126,28)" fg:x="50013" fg:w="63"/><text x="69.5508%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (59 samples, 0.08%)</title><rect x="69.3063%" y="405" width="0.0818%" height="15" fill="rgb(219,221,18)" fg:x="50017" fg:w="59"/><text x="69.5563%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (56 samples, 0.08%)</title><rect x="69.3105%" y="389" width="0.0776%" height="15" fill="rgb(211,40,0)" fg:x="50020" fg:w="56"/><text x="69.5605%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.03%)</title><rect x="69.3576%" y="373" width="0.0305%" height="15" fill="rgb(239,85,43)" fg:x="50054" fg:w="22"/><text x="69.6076%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.01%)</title><rect x="69.3742%" y="357" width="0.0139%" height="15" fill="rgb(231,55,21)" fg:x="50066" fg:w="10"/><text x="69.6242%" y="367.50"></text></g><g><title>httpmq-rs`&lt;T as tower::util::boxed_clone::CloneService&lt;R&gt;&gt;::clone_box (80 samples, 0.11%)</title><rect x="69.2814%" y="437" width="0.1109%" height="15" fill="rgb(225,184,43)" fg:x="49999" fg:w="80"/><text x="69.5314%" y="447.50"></text></g><g><title>httpmq-rs`&lt;axum::routing::method_routing::MethodRouter&lt;B,E&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (116 samples, 0.16%)</title><rect x="69.2481%" y="453" width="0.1607%" height="15" fill="rgb(251,158,41)" fg:x="49975" fg:w="116"/><text x="69.4981%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="69.3936%" y="437" width="0.0152%" height="15" fill="rgb(234,159,37)" fg:x="50080" fg:w="11"/><text x="69.6436%" y="447.50"></text></g><g><title>httpmq-rs`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="69.4172%" y="453" width="0.0111%" height="15" fill="rgb(216,204,22)" fg:x="50097" fg:w="8"/><text x="69.6672%" y="463.50"></text></g><g><title>httpmq-rs`alloc::vec::source_iter_marker::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (9 samples, 0.01%)</title><rect x="69.4380%" y="453" width="0.0125%" height="15" fill="rgb(214,17,3)" fg:x="50112" fg:w="9"/><text x="69.6880%" y="463.50"></text></g><g><title>httpmq-rs`matchit::params::Params::new (18 samples, 0.02%)</title><rect x="69.4546%" y="437" width="0.0249%" height="15" fill="rgb(212,111,17)" fg:x="50124" fg:w="18"/><text x="69.7046%" y="447.50"></text></g><g><title>httpmq-rs`matchit::tree::Node&lt;T&gt;::at (66 samples, 0.09%)</title><rect x="69.4795%" y="437" width="0.0915%" height="15" fill="rgb(221,157,24)" fg:x="50142" fg:w="66"/><text x="69.7295%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (23 samples, 0.03%)</title><rect x="69.5391%" y="421" width="0.0319%" height="15" fill="rgb(252,16,13)" fg:x="50185" fg:w="23"/><text x="69.7891%" y="431.50"></text></g><g><title>httpmq-rs`axum::routing::Node::at (96 samples, 0.13%)</title><rect x="69.4504%" y="453" width="0.1330%" height="15" fill="rgb(221,62,2)" fg:x="50121" fg:w="96"/><text x="69.7004%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 0.01%)</title><rect x="69.5710%" y="437" width="0.0125%" height="15" fill="rgb(247,87,22)" fg:x="50208" fg:w="9"/><text x="69.8210%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (62 samples, 0.09%)</title><rect x="69.6070%" y="389" width="0.0859%" height="15" fill="rgb(215,73,9)" fg:x="50234" fg:w="62"/><text x="69.8570%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.02%)</title><rect x="69.6763%" y="373" width="0.0166%" height="15" fill="rgb(207,175,33)" fg:x="50284" fg:w="12"/><text x="69.9263%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (70 samples, 0.10%)</title><rect x="69.5973%" y="421" width="0.0970%" height="15" fill="rgb(243,129,54)" fg:x="50227" fg:w="70"/><text x="69.8473%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (64 samples, 0.09%)</title><rect x="69.6056%" y="405" width="0.0887%" height="15" fill="rgb(227,119,45)" fg:x="50233" fg:w="64"/><text x="69.8556%" y="415.50"></text></g><g><title>httpmq-rs`bytes::bytes::shallow_clone_vec (82 samples, 0.11%)</title><rect x="69.5890%" y="437" width="0.1136%" height="15" fill="rgb(205,109,36)" fg:x="50221" fg:w="82"/><text x="69.8390%" y="447.50"></text></g><g><title>httpmq-rs`bytes::bytes::promotable_even_clone (90 samples, 0.12%)</title><rect x="69.5835%" y="453" width="0.1247%" height="15" fill="rgb(205,6,39)" fg:x="50217" fg:w="90"/><text x="69.8335%" y="463.50"></text></g><g><title>httpmq-rs`bytes::bytes::shallow_clone_vec (10 samples, 0.01%)</title><rect x="69.7082%" y="453" width="0.0139%" height="15" fill="rgb(221,32,16)" fg:x="50307" fg:w="10"/><text x="69.9582%" y="463.50"></text></g><g><title>httpmq-rs`core::iter::adapters::process_results (65 samples, 0.09%)</title><rect x="69.7220%" y="453" width="0.0901%" height="15" fill="rgb(228,144,50)" fg:x="50317" fg:w="65"/><text x="69.9720%" y="463.50"></text></g><g><title>httpmq-rs`alloc::vec::source_iter_marker::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (52 samples, 0.07%)</title><rect x="69.7401%" y="437" width="0.0721%" height="15" fill="rgb(229,201,53)" fg:x="50330" fg:w="52"/><text x="69.9901%" y="447.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.03%)</title><rect x="69.7775%" y="421" width="0.0346%" height="15" fill="rgb(249,153,27)" fg:x="50357" fg:w="25"/><text x="70.0275%" y="431.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place$LT$tower..util..map_future..MapFuture$LT$tower_http..map_response_body..MapResponseBody$LT$tower_http..map_response_body..MapResponseBody$LT$axum..error_handling..HandleError$LT$tower..load_shed..LoadShed$LT$tower..limit..concurrency..service..ConcurrencyLimit$LT$tower..timeout..Timeout$LT$tower_http..add_extension..AddExtension$LT$axum..routing..route..Route$C$alloc..sync..Arc$LT$std..sync..rwlock..RwLock$LT$httpmq_rs..service..State$GT$$GT$$GT$$GT$$GT$$GT$$C$httpmq_rs..service..handle_error$C$$LP$$RP$$GT$$C$axum_core..body..boxed$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_core..error..Error$GT$$GT$$GT$$C$axum_core..body..boxed$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_core..error..Error$GT$$GT$$GT$$C$tower..util..boxed_clone..BoxCloneService$LT$http..request..Request$LT$hyper..body..body..Body$GT$$C$http..response..Response$LT$http_body..combinators..box_body..UnsyncBoxBody$LT$bytes..bytes..Bytes$C$axum_cor� (22 samples, 0.03%)</title><rect x="69.8121%" y="453" width="0.0305%" height="15" fill="rgb(227,106,25)" fg:x="50382" fg:w="22"/><text x="70.0621%" y="463.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;&amp;core::option::Option&lt;core::ptr::non_null::NonNull&lt;tokio::runtime::task::core::Header&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="69.8814%" y="437" width="0.0249%" height="15" fill="rgb(230,65,29)" fg:x="50432" fg:w="18"/><text x="70.1314%" y="447.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::error_handling::HandleError&lt;tower::load_shed::LoadShed&lt;tower::limit::concurrency::service::ConcurrencyLimit&lt;tower::timeout::Timeout&lt;tower_http::add_extension::AddExtension&lt;axum::routing::route::Route,alloc::sync::Arc&lt;std::sync::rwlock::RwLock&lt;httpmq_rs::service::State&gt;&gt;&gt;&gt;&gt;&gt;,httpmq_rs::service::handle_error,()&gt;&gt; (34 samples, 0.05%)</title><rect x="69.9063%" y="437" width="0.0471%" height="15" fill="rgb(221,57,46)" fg:x="50450" fg:w="34"/><text x="70.1563%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.02%)</title><rect x="69.9534%" y="437" width="0.0180%" height="15" fill="rgb(229,161,17)" fg:x="50484" fg:w="13"/><text x="70.2034%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="69.9604%" y="421" width="0.0111%" height="15" fill="rgb(222,213,11)" fg:x="50489" fg:w="8"/><text x="70.2104%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.02%)</title><rect x="70.0463%" y="405" width="0.0194%" height="15" fill="rgb(235,35,13)" fg:x="50551" fg:w="14"/><text x="70.2963%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (70 samples, 0.10%)</title><rect x="69.9715%" y="437" width="0.0970%" height="15" fill="rgb(233,158,34)" fg:x="50497" fg:w="70"/><text x="70.2215%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (54 samples, 0.07%)</title><rect x="69.9936%" y="421" width="0.0748%" height="15" fill="rgb(215,151,48)" fg:x="50513" fg:w="54"/><text x="70.2436%" y="431.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;axum::routing::method_routing::MethodRouter&gt; (164 samples, 0.23%)</title><rect x="69.8481%" y="453" width="0.2272%" height="15" fill="rgb(229,84,14)" fg:x="50408" fg:w="164"/><text x="70.0981%" y="463.50"></text></g><g><title>httpmq-rs`hashbrown::map::make_hash (41 samples, 0.06%)</title><rect x="70.0754%" y="453" width="0.0568%" height="15" fill="rgb(229,68,14)" fg:x="50572" fg:w="41"/><text x="70.3254%" y="463.50"></text></g><g><title>httpmq-rs`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.02%)</title><rect x="70.1128%" y="437" width="0.0194%" height="15" fill="rgb(243,106,26)" fg:x="50599" fg:w="14"/><text x="70.3628%" y="447.50"></text></g><g><title>httpmq-rs`hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.01%)</title><rect x="70.1322%" y="453" width="0.0111%" height="15" fill="rgb(206,45,38)" fg:x="50613" fg:w="8"/><text x="70.3822%" y="463.50"></text></g><g><title>httpmq-rs`hashbrown::raw::sse2::Group::static_empty (16 samples, 0.02%)</title><rect x="70.1433%" y="453" width="0.0222%" height="15" fill="rgb(226,6,15)" fg:x="50621" fg:w="16"/><text x="70.3933%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.01%)</title><rect x="70.5035%" y="357" width="0.0111%" height="15" fill="rgb(232,22,54)" fg:x="50881" fg:w="8"/><text x="70.7535%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (37 samples, 0.05%)</title><rect x="70.5146%" y="357" width="0.0513%" height="15" fill="rgb(229,222,32)" fg:x="50889" fg:w="37"/><text x="70.7646%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (17 samples, 0.02%)</title><rect x="70.5423%" y="341" width="0.0236%" height="15" fill="rgb(228,62,29)" fg:x="50909" fg:w="17"/><text x="70.7923%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (117 samples, 0.16%)</title><rect x="70.4052%" y="405" width="0.1621%" height="15" fill="rgb(251,103,34)" fg:x="50810" fg:w="117"/><text x="70.6552%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (109 samples, 0.15%)</title><rect x="70.4163%" y="389" width="0.1510%" height="15" fill="rgb(233,12,30)" fg:x="50818" fg:w="109"/><text x="70.6663%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (106 samples, 0.15%)</title><rect x="70.4204%" y="373" width="0.1469%" height="15" fill="rgb(238,52,0)" fg:x="50821" fg:w="106"/><text x="70.6704%" y="383.50"></text></g><g><title>httpmq-rs`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (199 samples, 0.28%)</title><rect x="70.3359%" y="421" width="0.2757%" height="15" fill="rgb(223,98,5)" fg:x="50760" fg:w="199"/><text x="70.5859%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (19 samples, 0.03%)</title><rect x="70.5853%" y="405" width="0.0263%" height="15" fill="rgb(228,75,37)" fg:x="50940" fg:w="19"/><text x="70.8353%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (21 samples, 0.03%)</title><rect x="70.6380%" y="405" width="0.0291%" height="15" fill="rgb(205,115,49)" fg:x="50978" fg:w="21"/><text x="70.8880%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.02%)</title><rect x="70.6435%" y="389" width="0.0236%" height="15" fill="rgb(250,154,43)" fg:x="50982" fg:w="17"/><text x="70.8935%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.06%)</title><rect x="70.6172%" y="421" width="0.0554%" height="15" fill="rgb(226,43,29)" fg:x="50963" fg:w="40"/><text x="70.8672%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (19 samples, 0.03%)</title><rect x="70.6726%" y="421" width="0.0263%" height="15" fill="rgb(249,228,39)" fg:x="51003" fg:w="19"/><text x="70.9226%" y="431.50"></text></g><g><title>httpmq-rs`hashbrown::raw::RawTable&lt;T,A&gt;::insert (324 samples, 0.45%)</title><rect x="70.2749%" y="437" width="0.4490%" height="15" fill="rgb(216,79,43)" fg:x="50716" fg:w="324"/><text x="70.5249%" y="447.50"></text></g><g><title>httpmq-rs`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (22 samples, 0.03%)</title><rect x="70.7239%" y="437" width="0.0305%" height="15" fill="rgb(228,95,12)" fg:x="51040" fg:w="22"/><text x="70.9739%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait (10 samples, 0.01%)</title><rect x="70.9525%" y="389" width="0.0139%" height="15" fill="rgb(249,221,15)" fg:x="51205" fg:w="10"/><text x="71.2025%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (15 samples, 0.02%)</title><rect x="70.9719%" y="389" width="0.0208%" height="15" fill="rgb(233,34,13)" fg:x="51219" fg:w="15"/><text x="71.2219%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (93 samples, 0.13%)</title><rect x="70.9955%" y="389" width="0.1289%" height="15" fill="rgb(214,103,39)" fg:x="51236" fg:w="93"/><text x="71.2455%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (26 samples, 0.04%)</title><rect x="71.0883%" y="373" width="0.0360%" height="15" fill="rgb(251,126,39)" fg:x="51303" fg:w="26"/><text x="71.3383%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (244 samples, 0.34%)</title><rect x="70.7876%" y="405" width="0.3381%" height="15" fill="rgb(214,216,36)" fg:x="51086" fg:w="244"/><text x="71.0376%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (270 samples, 0.37%)</title><rect x="70.7544%" y="437" width="0.3741%" height="15" fill="rgb(220,221,8)" fg:x="51062" fg:w="270"/><text x="71.0044%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (257 samples, 0.36%)</title><rect x="70.7724%" y="421" width="0.3561%" height="15" fill="rgb(240,216,3)" fg:x="51075" fg:w="257"/><text x="71.0224%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.02%)</title><rect x="71.1354%" y="437" width="0.0152%" height="15" fill="rgb(232,218,17)" fg:x="51337" fg:w="11"/><text x="71.3854%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="71.1506%" y="437" width="0.0125%" height="15" fill="rgb(229,163,45)" fg:x="51348" fg:w="9"/><text x="71.4006%" y="447.50"></text></g><g><title>httpmq-rs`http::extensions::Extensions::insert (726 samples, 1.01%)</title><rect x="70.1654%" y="453" width="1.0060%" height="15" fill="rgb(231,110,42)" fg:x="50637" fg:w="726"/><text x="70.4154%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (32 samples, 0.04%)</title><rect x="71.1950%" y="421" width="0.0443%" height="15" fill="rgb(208,170,48)" fg:x="51380" fg:w="32"/><text x="71.4450%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.02%)</title><rect x="71.2227%" y="405" width="0.0166%" height="15" fill="rgb(239,116,25)" fg:x="51400" fg:w="12"/><text x="71.4727%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.06%)</title><rect x="71.1853%" y="453" width="0.0554%" height="15" fill="rgb(219,200,50)" fg:x="51373" fg:w="40"/><text x="71.4353%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (35 samples, 0.05%)</title><rect x="71.1922%" y="437" width="0.0485%" height="15" fill="rgb(245,200,0)" fg:x="51378" fg:w="35"/><text x="71.4422%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (23 samples, 0.03%)</title><rect x="71.2670%" y="437" width="0.0319%" height="15" fill="rgb(245,119,33)" fg:x="51432" fg:w="23"/><text x="71.5170%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (23 samples, 0.03%)</title><rect x="71.2670%" y="421" width="0.0319%" height="15" fill="rgb(231,125,12)" fg:x="51432" fg:w="23"/><text x="71.5170%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (38 samples, 0.05%)</title><rect x="71.2476%" y="453" width="0.0527%" height="15" fill="rgb(216,96,41)" fg:x="51418" fg:w="38"/><text x="71.4976%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (22 samples, 0.03%)</title><rect x="71.4209%" y="421" width="0.0305%" height="15" fill="rgb(248,43,45)" fg:x="51543" fg:w="22"/><text x="71.6709%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (94 samples, 0.13%)</title><rect x="71.3599%" y="437" width="0.1303%" height="15" fill="rgb(217,222,7)" fg:x="51499" fg:w="94"/><text x="71.6099%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (28 samples, 0.04%)</title><rect x="71.4513%" y="421" width="0.0388%" height="15" fill="rgb(233,28,6)" fg:x="51565" fg:w="28"/><text x="71.7013%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (138 samples, 0.19%)</title><rect x="71.3003%" y="453" width="0.1912%" height="15" fill="rgb(231,218,15)" fg:x="51456" fg:w="138"/><text x="71.5503%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`malloc (22 samples, 0.03%)</title><rect x="71.4915%" y="453" width="0.0305%" height="15" fill="rgb(226,171,48)" fg:x="51594" fg:w="22"/><text x="71.7415%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (52 samples, 0.07%)</title><rect x="71.5289%" y="453" width="0.0721%" height="15" fill="rgb(235,201,9)" fg:x="51621" fg:w="52"/><text x="71.7789%" y="463.50"></text></g><g><title>httpmq-rs`&lt;T as hyper::service::http::HttpService&lt;B1&gt;&gt;::call (2,122 samples, 2.94%)</title><rect x="68.6620%" y="469" width="2.9404%" height="15" fill="rgb(217,80,15)" fg:x="49552" fg:w="2122"/><text x="68.9120%" y="479.50">ht..</text></g><g><title>httpmq-rs`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.02%)</title><rect x="71.6024%" y="469" width="0.0152%" height="15" fill="rgb(219,152,8)" fg:x="51674" fg:w="11"/><text x="71.8524%" y="479.50"></text></g><g><title>httpmq-rs`&lt;axum::routing::method_routing::MethodRouter&lt;B,E&gt; as tower_service::Service&lt;http::request::Request&lt;B&gt;&gt;&gt;::call (11 samples, 0.02%)</title><rect x="71.6176%" y="469" width="0.0152%" height="15" fill="rgb(243,107,38)" fg:x="51685" fg:w="11"/><text x="71.8676%" y="479.50"></text></g><g><title>httpmq-rs`axum::routing::Node::at (16 samples, 0.02%)</title><rect x="71.6384%" y="469" width="0.0222%" height="15" fill="rgb(231,17,5)" fg:x="51700" fg:w="16"/><text x="71.8884%" y="479.50"></text></g><g><title>httpmq-rs`bytes::bytes::static_drop (21 samples, 0.03%)</title><rect x="71.6717%" y="469" width="0.0291%" height="15" fill="rgb(209,25,54)" fg:x="51724" fg:w="21"/><text x="71.9217%" y="479.50"></text></g><g><title>httpmq-rs`core::iter::adapters::process_results (13 samples, 0.02%)</title><rect x="71.7008%" y="469" width="0.0180%" height="15" fill="rgb(219,0,2)" fg:x="51745" fg:w="13"/><text x="71.9508%" y="479.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;http::uri::Uri&gt; (13 samples, 0.02%)</title><rect x="71.7382%" y="469" width="0.0180%" height="15" fill="rgb(246,9,5)" fg:x="51772" fg:w="13"/><text x="71.9882%" y="479.50"></text></g><g><title>httpmq-rs`hashbrown::map::make_hash (19 samples, 0.03%)</title><rect x="71.7562%" y="469" width="0.0263%" height="15" fill="rgb(226,159,4)" fg:x="51785" fg:w="19"/><text x="72.0062%" y="479.50"></text></g><g><title>httpmq-rs`http::extensions::Extensions::insert (17 samples, 0.02%)</title><rect x="71.7825%" y="469" width="0.0236%" height="15" fill="rgb(219,175,34)" fg:x="51804" fg:w="17"/><text x="72.0325%" y="479.50"></text></g><g><title>httpmq-rs`http::request::Parts::new (11 samples, 0.02%)</title><rect x="71.8061%" y="469" width="0.0152%" height="15" fill="rgb(236,10,46)" fg:x="51821" fg:w="11"/><text x="72.0561%" y="479.50"></text></g><g><title>httpmq-rs`http::uri::Uri::has_path (9 samples, 0.01%)</title><rect x="71.8213%" y="469" width="0.0125%" height="15" fill="rgb(240,211,16)" fg:x="51832" fg:w="9"/><text x="72.0713%" y="479.50"></text></g><g><title>httpmq-rs`matchit::params::Params::iter (9 samples, 0.01%)</title><rect x="71.8338%" y="469" width="0.0125%" height="15" fill="rgb(205,3,43)" fg:x="51841" fg:w="9"/><text x="72.0838%" y="479.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg (2,392 samples, 3.31%)</title><rect x="68.6301%" y="485" width="3.3145%" height="15" fill="rgb(245,7,22)" fg:x="49529" fg:w="2392"/><text x="68.8801%" y="495.50">htt..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (49 samples, 0.07%)</title><rect x="71.8767%" y="469" width="0.0679%" height="15" fill="rgb(239,132,32)" fg:x="51872" fg:w="49"/><text x="72.1267%" y="479.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::is_server (23 samples, 0.03%)</title><rect x="71.9446%" y="485" width="0.0319%" height="15" fill="rgb(228,202,34)" fg:x="51921" fg:w="23"/><text x="72.1946%" y="495.50"></text></g><g><title>httpmq-rs`&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (16 samples, 0.02%)</title><rect x="71.9793%" y="469" width="0.0222%" height="15" fill="rgb(254,200,22)" fg:x="51946" fg:w="16"/><text x="72.2293%" y="479.50"></text></g><g><title>httpmq-rs`hyper::common::date::CACHED::__getit (12 samples, 0.02%)</title><rect x="72.0014%" y="469" width="0.0166%" height="15" fill="rgb(219,10,39)" fg:x="51962" fg:w="12"/><text x="72.2514%" y="479.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$__commpage_gettimeofday (12 samples, 0.02%)</title><rect x="72.0402%" y="437" width="0.0166%" height="15" fill="rgb(226,210,39)" fg:x="51990" fg:w="12"/><text x="72.2902%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday_internal (23 samples, 0.03%)</title><rect x="72.0583%" y="421" width="0.0319%" height="15" fill="rgb(208,219,16)" fg:x="52003" fg:w="23"/><text x="72.3083%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (11 samples, 0.02%)</title><rect x="72.0749%" y="405" width="0.0152%" height="15" fill="rgb(216,158,51)" fg:x="52015" fg:w="11"/><text x="72.3249%" y="415.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (25 samples, 0.03%)</title><rect x="72.0569%" y="437" width="0.0346%" height="15" fill="rgb(233,14,44)" fg:x="52002" fg:w="25"/><text x="72.3069%" y="447.50"></text></g><g><title>httpmq-rs`std::time::SystemTime::now (69 samples, 0.10%)</title><rect x="72.0361%" y="453" width="0.0956%" height="15" fill="rgb(237,97,39)" fg:x="51987" fg:w="69"/><text x="72.2861%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday (29 samples, 0.04%)</title><rect x="72.0915%" y="437" width="0.0402%" height="15" fill="rgb(218,198,43)" fg:x="52027" fg:w="29"/><text x="72.3415%" y="447.50"></text></g><g><title>httpmq-rs`hyper::common::date::CachedDate::check (108 samples, 0.15%)</title><rect x="72.0181%" y="469" width="0.1497%" height="15" fill="rgb(231,104,20)" fg:x="51974" fg:w="108"/><text x="72.2681%" y="479.50"></text></g><g><title>libsystem_c.dylib`gettimeofday (26 samples, 0.04%)</title><rect x="72.1317%" y="453" width="0.0360%" height="15" fill="rgb(254,36,13)" fg:x="52056" fg:w="26"/><text x="72.3817%" y="463.50"></text></g><g><title>httpmq-rs`std::time::SystemTime::now (15 samples, 0.02%)</title><rect x="72.1677%" y="469" width="0.0208%" height="15" fill="rgb(248,14,50)" fg:x="52082" fg:w="15"/><text x="72.4177%" y="479.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::update_date (161 samples, 0.22%)</title><rect x="71.9765%" y="485" width="0.2231%" height="15" fill="rgb(217,107,29)" fg:x="51944" fg:w="161"/><text x="72.2265%" y="495.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (8 samples, 0.01%)</title><rect x="72.1885%" y="469" width="0.0111%" height="15" fill="rgb(251,169,33)" fg:x="52097" fg:w="8"/><text x="72.4385%" y="479.50"></text></g><g><title>httpmq-rs`&lt;tower::util::oneshot::Oneshot&lt;S,Req&gt; as core::future::future::Future&gt;::poll (9 samples, 0.01%)</title><rect x="72.1996%" y="485" width="0.0125%" height="15" fill="rgb(217,108,32)" fg:x="52105" fg:w="9"/><text x="72.4496%" y="495.50"></text></g><g><title>httpmq-rs`core::ptr::drop_in_place&lt;core::option::Option&lt;axum::routing::future::RouterFuture&lt;hyper::body::body::Body&gt;&gt;&gt; (12 samples, 0.02%)</title><rect x="72.2176%" y="485" width="0.0166%" height="15" fill="rgb(219,66,42)" fg:x="52118" fg:w="12"/><text x="72.4676%" y="495.50"></text></g><g><title>httpmq-rs`core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (8 samples, 0.01%)</title><rect x="72.2453%" y="485" width="0.0111%" height="15" fill="rgb(206,180,7)" fg:x="52138" fg:w="8"/><text x="72.4953%" y="495.50"></text></g><g><title>httpmq-rs`hyper::common::date::CACHED::__getit (10 samples, 0.01%)</title><rect x="72.2675%" y="485" width="0.0139%" height="15" fill="rgb(208,226,31)" fg:x="52154" fg:w="10"/><text x="72.5175%" y="495.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (11 samples, 0.02%)</title><rect x="72.3395%" y="469" width="0.0152%" height="15" fill="rgb(218,26,49)" fg:x="52206" fg:w="11"/><text x="72.5895%" y="479.50"></text></g><g><title>httpmq-rs`&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="72.3548%" y="469" width="0.0222%" height="15" fill="rgb(233,197,48)" fg:x="52217" fg:w="16"/><text x="72.6048%" y="479.50"></text></g><g><title>httpmq-rs`&lt;http::header::map::Drain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.03%)</title><rect x="72.4074%" y="453" width="0.0277%" height="15" fill="rgb(252,181,51)" fg:x="52255" fg:w="20"/><text x="72.6574%" y="463.50"></text></g><g><title>httpmq-rs`&lt;http::header::map::Drain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.04%)</title><rect x="72.7483%" y="437" width="0.0416%" height="15" fill="rgb(253,90,19)" fg:x="52501" fg:w="30"/><text x="72.9983%" y="447.50"></text></g><g><title>httpmq-rs`http::header::name::HeaderName::as_str (26 samples, 0.04%)</title><rect x="72.7899%" y="437" width="0.0360%" height="15" fill="rgb(215,171,30)" fg:x="52531" fg:w="26"/><text x="73.0399%" y="447.50"></text></g><g><title>httpmq-rs`hyper::common::date::CACHED::__getit (20 samples, 0.03%)</title><rect x="72.8259%" y="437" width="0.0277%" height="15" fill="rgb(214,222,9)" fg:x="52557" fg:w="20"/><text x="73.0759%" y="447.50"></text></g><g><title>httpmq-rs`hyper::common::date::CACHED::__getit (13 samples, 0.02%)</title><rect x="72.8730%" y="421" width="0.0180%" height="15" fill="rgb(223,3,22)" fg:x="52591" fg:w="13"/><text x="73.1230%" y="431.50"></text></g><g><title>httpmq-rs`std::thread::local::LocalKey&lt;T&gt;::with (48 samples, 0.07%)</title><rect x="72.8536%" y="437" width="0.0665%" height="15" fill="rgb(225,196,46)" fg:x="52577" fg:w="48"/><text x="73.1036%" y="447.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (21 samples, 0.03%)</title><rect x="72.8910%" y="421" width="0.0291%" height="15" fill="rgb(209,110,37)" fg:x="52604" fg:w="21"/><text x="73.1410%" y="431.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::encode (384 samples, 0.53%)</title><rect x="72.4352%" y="453" width="0.5321%" height="15" fill="rgb(249,89,12)" fg:x="52275" fg:w="384"/><text x="72.6852%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (34 samples, 0.05%)</title><rect x="72.9201%" y="437" width="0.0471%" height="15" fill="rgb(226,27,33)" fg:x="52625" fg:w="34"/><text x="73.1701%" y="447.50"></text></g><g><title>httpmq-rs`bytes::bytes::static_drop (12 samples, 0.02%)</title><rect x="72.9756%" y="453" width="0.0166%" height="15" fill="rgb(213,82,22)" fg:x="52665" fg:w="12"/><text x="73.2256%" y="463.50"></text></g><g><title>httpmq-rs`http::header::name::HeaderName::as_str (10 samples, 0.01%)</title><rect x="72.9922%" y="453" width="0.0139%" height="15" fill="rgb(248,140,0)" fg:x="52677" fg:w="10"/><text x="73.2422%" y="463.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::encode_head (540 samples, 0.75%)</title><rect x="72.2924%" y="485" width="0.7483%" height="15" fill="rgb(228,106,3)" fg:x="52172" fg:w="540"/><text x="72.5424%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::role::encode_headers (479 samples, 0.66%)</title><rect x="72.3770%" y="469" width="0.6637%" height="15" fill="rgb(209,23,37)" fg:x="52233" fg:w="479"/><text x="72.6270%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.02%)</title><rect x="73.0157%" y="453" width="0.0249%" height="15" fill="rgb(241,93,50)" fg:x="52694" fg:w="18"/><text x="73.2657%" y="463.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (19 samples, 0.03%)</title><rect x="73.0407%" y="485" width="0.0263%" height="15" fill="rgb(253,46,43)" fg:x="52712" fg:w="19"/><text x="73.2907%" y="495.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (21 samples, 0.03%)</title><rect x="73.1405%" y="469" width="0.0291%" height="15" fill="rgb(226,206,43)" fg:x="52784" fg:w="21"/><text x="73.3905%" y="479.50"></text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (12 samples, 0.02%)</title><rect x="73.1779%" y="469" width="0.0166%" height="15" fill="rgb(217,54,7)" fg:x="52811" fg:w="12"/><text x="73.4279%" y="479.50"></text></g><g><title>httpmq-rs`bytes::bytes::promotable_even_drop (12 samples, 0.02%)</title><rect x="73.2125%" y="469" width="0.0166%" height="15" fill="rgb(223,5,52)" fg:x="52836" fg:w="12"/><text x="73.4625%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (30 samples, 0.04%)</title><rect x="73.2291%" y="469" width="0.0416%" height="15" fill="rgb(206,52,46)" fg:x="52848" fg:w="30"/><text x="73.4791%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::KA::idle (8 samples, 0.01%)</title><rect x="73.2707%" y="469" width="0.0111%" height="15" fill="rgb(253,136,11)" fg:x="52878" fg:w="8"/><text x="73.5207%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::KA::status (12 samples, 0.02%)</title><rect x="73.2818%" y="469" width="0.0166%" height="15" fill="rgb(208,106,33)" fg:x="52886" fg:w="12"/><text x="73.5318%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::State::is_idle (9 samples, 0.01%)</title><rect x="73.2984%" y="469" width="0.0125%" height="15" fill="rgb(206,54,4)" fg:x="52898" fg:w="9"/><text x="73.5484%" y="479.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.01%)</title><rect x="73.5769%" y="453" width="0.0125%" height="15" fill="rgb(213,3,15)" fg:x="53099" fg:w="9"/><text x="73.8269%" y="463.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::encode::EncodedBuf&lt;B&gt; as bytes::buf::buf_impl::Buf&gt;::advance (18 samples, 0.02%)</title><rect x="73.5894%" y="453" width="0.0249%" height="15" fill="rgb(252,211,39)" fg:x="53108" fg:w="18"/><text x="73.8394%" y="463.50"></text></g><g><title>httpmq-rs`&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write_vectored (22 samples, 0.03%)</title><rect x="73.7100%" y="405" width="0.0305%" height="15" fill="rgb(223,6,36)" fg:x="53195" fg:w="22"/><text x="73.9600%" y="415.50"></text></g><g><title>httpmq-rs`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (5,019 samples, 6.95%)</title><rect x="73.6781%" y="421" width="6.9546%" height="15" fill="rgb(252,169,45)" fg:x="53172" fg:w="5019"/><text x="73.9281%" y="431.50">httpmq-rs..</text></g><g><title>libsystem_kernel.dylib`writev (4,974 samples, 6.89%)</title><rect x="73.7404%" y="405" width="6.8923%" height="15" fill="rgb(212,48,26)" fg:x="53217" fg:w="4974"/><text x="73.9904%" y="415.50">libsystem..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (78 samples, 0.11%)</title><rect x="80.6341%" y="421" width="0.1081%" height="15" fill="rgb(251,102,48)" fg:x="58192" fg:w="78"/><text x="80.8841%" y="431.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (17 samples, 0.02%)</title><rect x="80.7186%" y="405" width="0.0236%" height="15" fill="rgb(243,208,16)" fg:x="58253" fg:w="17"/><text x="80.9686%" y="415.50"></text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (5,159 samples, 7.15%)</title><rect x="73.6143%" y="453" width="7.1486%" height="15" fill="rgb(219,96,24)" fg:x="53126" fg:w="5159"/><text x="73.8643%" y="463.50">httpmq-rs`..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_write_io (5,135 samples, 7.12%)</title><rect x="73.6476%" y="437" width="7.1153%" height="15" fill="rgb(219,33,29)" fg:x="53150" fg:w="5135"/><text x="73.8976%" y="447.50">httpmq-rs`..</text></g><g><title>libdyld.dylib`tlv_get_addr (12 samples, 0.02%)</title><rect x="80.7463%" y="421" width="0.0166%" height="15" fill="rgb(223,176,5)" fg:x="58273" fg:w="12"/><text x="80.9963%" y="431.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_write_io (13 samples, 0.02%)</title><rect x="80.7685%" y="453" width="0.0180%" height="15" fill="rgb(228,140,14)" fg:x="58289" fg:w="13"/><text x="81.0185%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (29 samples, 0.04%)</title><rect x="80.8142%" y="437" width="0.0402%" height="15" fill="rgb(217,179,31)" fg:x="58322" fg:w="29"/><text x="81.0642%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (28 samples, 0.04%)</title><rect x="80.8156%" y="421" width="0.0388%" height="15" fill="rgb(230,9,30)" fg:x="58323" fg:w="28"/><text x="81.0656%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (50 samples, 0.07%)</title><rect x="80.7865%" y="453" width="0.0693%" height="15" fill="rgb(230,136,20)" fg:x="58302" fg:w="50"/><text x="81.0365%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.02%)</title><rect x="80.9361%" y="421" width="0.0166%" height="15" fill="rgb(215,210,22)" fg:x="58410" fg:w="12"/><text x="81.1861%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (78 samples, 0.11%)</title><rect x="80.8558%" y="453" width="0.1081%" height="15" fill="rgb(218,43,5)" fg:x="58352" fg:w="78"/><text x="81.1058%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (52 samples, 0.07%)</title><rect x="80.8918%" y="437" width="0.0721%" height="15" fill="rgb(216,11,5)" fg:x="58378" fg:w="52"/><text x="81.1418%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.01%)</title><rect x="80.9528%" y="421" width="0.0111%" height="15" fill="rgb(209,82,29)" fg:x="58422" fg:w="8"/><text x="81.2028%" y="431.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_flush (5,533 samples, 7.67%)</title><rect x="73.3109%" y="469" width="7.6668%" height="15" fill="rgb(244,115,12)" fg:x="52907" fg:w="5533"/><text x="73.5609%" y="479.50">httpmq-rs`..</text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.01%)</title><rect x="80.9639%" y="453" width="0.0139%" height="15" fill="rgb(222,82,18)" fg:x="58430" fg:w="10"/><text x="81.2139%" y="463.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Cursor&lt;alloc::vec::Vec&lt;u8&gt;&gt;::reset (16 samples, 0.02%)</title><rect x="80.9777%" y="469" width="0.0222%" height="15" fill="rgb(249,227,8)" fg:x="58440" fg:w="16"/><text x="81.2277%" y="479.50"></text></g><g><title>httpmq-rs`hyper::server::tcp::addr_stream::_::_&lt;impl hyper::server::tcp::addr_stream::AddrStream&gt;::project (11 samples, 0.02%)</title><rect x="80.9999%" y="469" width="0.0152%" height="15" fill="rgb(253,141,45)" fg:x="58456" fg:w="11"/><text x="81.2499%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.02%)</title><rect x="81.0179%" y="469" width="0.0152%" height="15" fill="rgb(234,184,4)" fg:x="58469" fg:w="11"/><text x="81.2679%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_flush (5,750 samples, 7.97%)</title><rect x="73.0670%" y="485" width="7.9675%" height="15" fill="rgb(218,194,23)" fg:x="52731" fg:w="5750"/><text x="73.3170%" y="495.50">httpmq-rs`h..</text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (16 samples, 0.02%)</title><rect x="81.3020%" y="453" width="0.0222%" height="15" fill="rgb(235,66,41)" fg:x="58674" fg:w="16"/><text x="81.5520%" y="463.50"></text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (9 samples, 0.01%)</title><rect x="81.3241%" y="453" width="0.0125%" height="15" fill="rgb(245,217,1)" fg:x="58690" fg:w="9"/><text x="81.5741%" y="463.50"></text></g><g><title>httpmq-rs`&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="81.3366%" y="453" width="0.0139%" height="15" fill="rgb(229,91,1)" fg:x="58699" fg:w="10"/><text x="81.5866%" y="463.50"></text></g><g><title>httpmq-rs`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (25 samples, 0.03%)</title><rect x="81.4890%" y="389" width="0.0346%" height="15" fill="rgb(207,101,30)" fg:x="58809" fg:w="25"/><text x="81.7390%" y="399.50"></text></g><g><title>libsystem_c.dylib`recv (17 samples, 0.02%)</title><rect x="81.5251%" y="389" width="0.0236%" height="15" fill="rgb(223,82,49)" fg:x="58835" fg:w="17"/><text x="81.7751%" y="399.50"></text></g><g><title>httpmq-rs`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (3,677 samples, 5.10%)</title><rect x="81.4738%" y="405" width="5.0951%" height="15" fill="rgb(218,167,17)" fg:x="58798" fg:w="3677"/><text x="81.7238%" y="415.50">httpmq..</text></g><g><title>libsystem_kernel.dylib`__recvfrom (3,623 samples, 5.02%)</title><rect x="81.5486%" y="389" width="5.0202%" height="15" fill="rgb(208,103,14)" fg:x="58852" fg:w="3623"/><text x="81.7986%" y="399.50">libsys..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (55 samples, 0.08%)</title><rect x="86.5744%" y="405" width="0.0762%" height="15" fill="rgb(238,20,8)" fg:x="62479" fg:w="55"/><text x="86.8244%" y="415.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (13 samples, 0.02%)</title><rect x="86.6326%" y="389" width="0.0180%" height="15" fill="rgb(218,80,54)" fg:x="62521" fg:w="13"/><text x="86.8826%" y="399.50"></text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (3,798 samples, 5.26%)</title><rect x="81.4100%" y="437" width="5.2627%" height="15" fill="rgb(240,144,17)" fg:x="58752" fg:w="3798"/><text x="81.6600%" y="447.50">httpmq..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_read_io (3,777 samples, 5.23%)</title><rect x="81.4391%" y="421" width="5.2336%" height="15" fill="rgb(245,27,50)" fg:x="58773" fg:w="3777"/><text x="81.6891%" y="431.50">httpmq..</text></g><g><title>libdyld.dylib`tlv_get_addr (13 samples, 0.02%)</title><rect x="86.6548%" y="405" width="0.0180%" height="15" fill="rgb(251,51,7)" fg:x="62537" fg:w="13"/><text x="86.9048%" y="415.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::ReadStrategy::record (8 samples, 0.01%)</title><rect x="86.6741%" y="437" width="0.0111%" height="15" fill="rgb(245,217,29)" fg:x="62551" fg:w="8"/><text x="86.9241%" y="447.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (3,858 samples, 5.35%)</title><rect x="81.3505%" y="453" width="5.3459%" height="15" fill="rgb(221,176,29)" fg:x="58709" fg:w="3858"/><text x="81.6005%" y="463.50">httpmq-..</text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_read_io (8 samples, 0.01%)</title><rect x="86.6852%" y="437" width="0.0111%" height="15" fill="rgb(212,180,24)" fg:x="62559" fg:w="8"/><text x="86.9352%" y="447.50"></text></g><g><title>httpmq-rs`__rdl_alloc (12 samples, 0.02%)</title><rect x="87.0289%" y="421" width="0.0166%" height="15" fill="rgb(254,24,2)" fg:x="62807" fg:w="12"/><text x="87.2789%" y="431.50"></text></g><g><title>httpmq-rs`__rust_probestack (18 samples, 0.02%)</title><rect x="87.0552%" y="421" width="0.0249%" height="15" fill="rgb(230,100,2)" fg:x="62826" fg:w="18"/><text x="87.3052%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (137 samples, 0.19%)</title><rect x="87.1314%" y="373" width="0.1898%" height="15" fill="rgb(219,142,25)" fg:x="62881" fg:w="137"/><text x="87.3814%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (65 samples, 0.09%)</title><rect x="87.2312%" y="357" width="0.0901%" height="15" fill="rgb(240,73,43)" fg:x="62953" fg:w="65"/><text x="87.4812%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.02%)</title><rect x="87.3019%" y="341" width="0.0194%" height="15" fill="rgb(214,114,15)" fg:x="63004" fg:w="14"/><text x="87.5519%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (150 samples, 0.21%)</title><rect x="87.1148%" y="389" width="0.2078%" height="15" fill="rgb(207,130,4)" fg:x="62869" fg:w="150"/><text x="87.3648%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (175 samples, 0.24%)</title><rect x="87.0857%" y="405" width="0.2425%" height="15" fill="rgb(221,25,40)" fg:x="62848" fg:w="175"/><text x="87.3357%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (27 samples, 0.04%)</title><rect x="87.3282%" y="405" width="0.0374%" height="15" fill="rgb(241,184,7)" fg:x="63023" fg:w="27"/><text x="87.5782%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc (10 samples, 0.01%)</title><rect x="87.3656%" y="405" width="0.0139%" height="15" fill="rgb(235,159,4)" fg:x="63050" fg:w="10"/><text x="87.6156%" y="415.50"></text></g><g><title>httpmq-rs`bytes::bytes::Bytes::copy_from_slice (245 samples, 0.34%)</title><rect x="87.0801%" y="421" width="0.3395%" height="15" fill="rgb(214,87,48)" fg:x="62844" fg:w="245"/><text x="87.3301%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (27 samples, 0.04%)</title><rect x="87.3822%" y="405" width="0.0374%" height="15" fill="rgb(246,198,24)" fg:x="63062" fg:w="27"/><text x="87.6322%" y="415.50"></text></g><g><title>httpmq-rs`bytes::bytes::Bytes::slice (10 samples, 0.01%)</title><rect x="87.4196%" y="421" width="0.0139%" height="15" fill="rgb(209,66,40)" fg:x="63089" fg:w="10"/><text x="87.6696%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (25 samples, 0.03%)</title><rect x="87.4945%" y="357" width="0.0346%" height="15" fill="rgb(233,147,39)" fg:x="63143" fg:w="25"/><text x="87.7445%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (62 samples, 0.09%)</title><rect x="87.4446%" y="405" width="0.0859%" height="15" fill="rgb(231,145,52)" fg:x="63107" fg:w="62"/><text x="87.6946%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (58 samples, 0.08%)</title><rect x="87.4501%" y="389" width="0.0804%" height="15" fill="rgb(206,20,26)" fg:x="63111" fg:w="58"/><text x="87.7001%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (56 samples, 0.08%)</title><rect x="87.4529%" y="373" width="0.0776%" height="15" fill="rgb(238,220,4)" fg:x="63113" fg:w="56"/><text x="87.7029%" y="383.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::BytesMut::split_to (73 samples, 0.10%)</title><rect x="87.4335%" y="421" width="0.1012%" height="15" fill="rgb(252,195,42)" fg:x="63099" fg:w="73"/><text x="87.6835%" y="431.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::shared_v_clone (25 samples, 0.03%)</title><rect x="87.5346%" y="421" width="0.0346%" height="15" fill="rgb(209,10,6)" fg:x="63172" fg:w="25"/><text x="87.7846%" y="431.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::shared_v_drop (13 samples, 0.02%)</title><rect x="87.5693%" y="421" width="0.0180%" height="15" fill="rgb(229,3,52)" fg:x="63197" fg:w="13"/><text x="87.8193%" y="431.50"></text></g><g><title>httpmq-rs`http::header::map::HeaderMap&lt;T&gt;::append (77 samples, 0.11%)</title><rect x="87.5956%" y="421" width="0.1067%" height="15" fill="rgb(253,49,37)" fg:x="63216" fg:w="77"/><text x="87.8456%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.02%)</title><rect x="87.6815%" y="405" width="0.0208%" height="15" fill="rgb(240,103,49)" fg:x="63278" fg:w="15"/><text x="87.9315%" y="415.50"></text></g><g><title>httpmq-rs`http::header::name::HeaderName::from_bytes (95 samples, 0.13%)</title><rect x="87.7051%" y="421" width="0.1316%" height="15" fill="rgb(250,182,30)" fg:x="63295" fg:w="95"/><text x="87.9551%" y="431.50"></text></g><g><title>httpmq-rs`http::header::name::parse_hdr (86 samples, 0.12%)</title><rect x="87.7175%" y="405" width="0.1192%" height="15" fill="rgb(248,8,30)" fg:x="63304" fg:w="86"/><text x="87.9675%" y="415.50"></text></g><g><title>httpmq-rs`http::header::name::parse_hdr (15 samples, 0.02%)</title><rect x="87.8367%" y="421" width="0.0208%" height="15" fill="rgb(237,120,30)" fg:x="63390" fg:w="15"/><text x="88.0867%" y="431.50"></text></g><g><title>httpmq-rs`http::method::Method::from_bytes (19 samples, 0.03%)</title><rect x="87.8575%" y="421" width="0.0263%" height="15" fill="rgb(221,146,34)" fg:x="63405" fg:w="19"/><text x="88.1075%" y="431.50"></text></g><g><title>httpmq-rs`http::uri::Uri::from_shared (448 samples, 0.62%)</title><rect x="87.8838%" y="421" width="0.6208%" height="15" fill="rgb(242,55,13)" fg:x="63424" fg:w="448"/><text x="88.1338%" y="431.50"></text></g><g><title>httpmq-rs`http::uri::path::PathAndQuery::from_shared (420 samples, 0.58%)</title><rect x="87.9226%" y="405" width="0.5820%" height="15" fill="rgb(242,112,31)" fg:x="63452" fg:w="420"/><text x="88.1726%" y="415.50"></text></g><g><title>httpmq-rs`http::uri::path::PathAndQuery::from_shared (13 samples, 0.02%)</title><rect x="88.5046%" y="421" width="0.0180%" height="15" fill="rgb(249,192,27)" fg:x="63872" fg:w="13"/><text x="88.7546%" y="431.50"></text></g><g><title>httpmq-rs`httparse::simd::runtime::match_header_value_vectored (25 samples, 0.03%)</title><rect x="88.6501%" y="389" width="0.0346%" height="15" fill="rgb(208,204,44)" fg:x="63977" fg:w="25"/><text x="88.9001%" y="399.50"></text></g><g><title>httpmq-rs`httparse::simd::sse42::match_header_value_char_16_sse (8 samples, 0.01%)</title><rect x="88.6737%" y="373" width="0.0111%" height="15" fill="rgb(208,93,54)" fg:x="63994" fg:w="8"/><text x="88.9237%" y="383.50"></text></g><g><title>httpmq-rs`httparse::parse_headers_iter_uninit (91 samples, 0.13%)</title><rect x="88.5683%" y="405" width="0.1261%" height="15" fill="rgb(242,1,31)" fg:x="63918" fg:w="91"/><text x="88.8183%" y="415.50"></text></g><g><title>httpmq-rs`httparse::parse_version (10 samples, 0.01%)</title><rect x="88.6944%" y="405" width="0.0139%" height="15" fill="rgb(241,83,25)" fg:x="64009" fg:w="10"/><text x="88.9444%" y="415.50"></text></g><g><title>httpmq-rs`httparse::simd::avx2::match_url_char_32_avx (41 samples, 0.06%)</title><rect x="88.7083%" y="405" width="0.0568%" height="15" fill="rgb(205,169,50)" fg:x="64019" fg:w="41"/><text x="88.9583%" y="415.50"></text></g><g><title>httpmq-rs`httparse::Request::parse_with_uninit_headers (314 samples, 0.44%)</title><rect x="88.5226%" y="421" width="0.4351%" height="15" fill="rgb(239,186,37)" fg:x="63885" fg:w="314"/><text x="88.7726%" y="431.50"></text></g><g><title>httpmq-rs`httparse::simd::runtime::match_uri_vectored (138 samples, 0.19%)</title><rect x="88.7665%" y="405" width="0.1912%" height="15" fill="rgb(205,221,10)" fg:x="64061" fg:w="138"/><text x="89.0165%" y="415.50"></text></g><g><title>httpmq-rs`httparse::simd::avx2::match_url_char_32_avx (118 samples, 0.16%)</title><rect x="88.7942%" y="389" width="0.1635%" height="15" fill="rgb(218,196,15)" fg:x="64081" fg:w="118"/><text x="89.0442%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.02%)</title><rect x="88.9646%" y="421" width="0.0249%" height="15" fill="rgb(218,196,35)" fg:x="64204" fg:w="18"/><text x="89.2146%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc (26 samples, 0.04%)</title><rect x="88.9896%" y="421" width="0.0360%" height="15" fill="rgb(233,63,24)" fg:x="64222" fg:w="26"/><text x="89.2396%" y="431.50"></text></g><g><title>httpmq-rs`&lt;hyper::proto::h1::role::Server as hyper::proto::h1::Http1Transaction&gt;::parse (1,678 samples, 2.33%)</title><rect x="86.7614%" y="437" width="2.3251%" height="15" fill="rgb(225,8,4)" fg:x="62614" fg:w="1678"/><text x="87.0114%" y="447.50">h..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (44 samples, 0.06%)</title><rect x="89.0256%" y="421" width="0.0610%" height="15" fill="rgb(234,105,35)" fg:x="64248" fg:w="44"/><text x="89.2756%" y="431.50"></text></g><g><title>httpmq-rs`__rust_probestack (19 samples, 0.03%)</title><rect x="89.0963%" y="437" width="0.0263%" height="15" fill="rgb(236,21,32)" fg:x="64299" fg:w="19"/><text x="89.3463%" y="447.50"></text></g><g><title>httpmq-rs`bytes::bytes::Bytes::copy_from_slice (10 samples, 0.01%)</title><rect x="89.1226%" y="437" width="0.0139%" height="15" fill="rgb(228,109,6)" fg:x="64318" fg:w="10"/><text x="89.3726%" y="447.50"></text></g><g><title>httpmq-rs`bytes::bytes::Bytes::slice (9 samples, 0.01%)</title><rect x="89.1365%" y="437" width="0.0125%" height="15" fill="rgb(229,215,31)" fg:x="64328" fg:w="9"/><text x="89.3865%" y="447.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::BytesMut::split_to (8 samples, 0.01%)</title><rect x="89.1489%" y="437" width="0.0111%" height="15" fill="rgb(221,52,54)" fg:x="64337" fg:w="8"/><text x="89.3989%" y="447.50"></text></g><g><title>httpmq-rs`http::header::map::HeaderMap&lt;T&gt;::append (12 samples, 0.02%)</title><rect x="89.1628%" y="437" width="0.0166%" height="15" fill="rgb(252,129,43)" fg:x="64347" fg:w="12"/><text x="89.4128%" y="447.50"></text></g><g><title>httpmq-rs`http::header::map::HeaderMap&lt;T&gt;::reserve (10 samples, 0.01%)</title><rect x="89.1794%" y="437" width="0.0139%" height="15" fill="rgb(248,183,27)" fg:x="64359" fg:w="10"/><text x="89.4294%" y="447.50"></text></g><g><title>httpmq-rs`http::method::Method::from_bytes (16 samples, 0.02%)</title><rect x="89.2002%" y="437" width="0.0222%" height="15" fill="rgb(250,0,22)" fg:x="64374" fg:w="16"/><text x="89.4502%" y="447.50"></text></g><g><title>httpmq-rs`http::uri::Uri::from_shared (9 samples, 0.01%)</title><rect x="89.2224%" y="437" width="0.0125%" height="15" fill="rgb(213,166,10)" fg:x="64390" fg:w="9"/><text x="89.4724%" y="447.50"></text></g><g><title>httpmq-rs`httparse::Request::parse_with_uninit_headers (19 samples, 0.03%)</title><rect x="89.2348%" y="437" width="0.0263%" height="15" fill="rgb(207,163,36)" fg:x="64399" fg:w="19"/><text x="89.4848%" y="447.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::role::parse_headers (1,861 samples, 2.58%)</title><rect x="86.7060%" y="453" width="2.5787%" height="15" fill="rgb(208,122,22)" fg:x="62574" fg:w="1861"/><text x="86.9560%" y="463.50">ht..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.02%)</title><rect x="89.2612%" y="437" width="0.0236%" height="15" fill="rgb(207,104,49)" fg:x="64418" fg:w="17"/><text x="89.5112%" y="447.50"></text></g><g><title>httpmq-rs`hyper::server::tcp::addr_stream::_::_&lt;impl hyper::server::tcp::addr_stream::AddrStream&gt;::project (14 samples, 0.02%)</title><rect x="89.2847%" y="453" width="0.0194%" height="15" fill="rgb(248,211,50)" fg:x="64435" fg:w="14"/><text x="89.5347%" y="463.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (6,310 samples, 8.74%)</title><rect x="81.1731%" y="469" width="8.7435%" height="15" fill="rgb(217,13,45)" fg:x="58581" fg:w="6310"/><text x="81.4231%" y="479.50">httpmq-rs`hy..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (442 samples, 0.61%)</title><rect x="89.3041%" y="453" width="0.6125%" height="15" fill="rgb(211,216,49)" fg:x="64449" fg:w="442"/><text x="89.5541%" y="463.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::role::parse_headers (8 samples, 0.01%)</title><rect x="89.9249%" y="469" width="0.0111%" height="15" fill="rgb(221,58,53)" fg:x="64897" fg:w="8"/><text x="90.1749%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_head (6,471 samples, 8.97%)</title><rect x="81.0345%" y="485" width="8.9666%" height="15" fill="rgb(220,112,41)" fg:x="58481" fg:w="6471"/><text x="81.2845%" y="495.50">httpmq-rs`hyp..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (47 samples, 0.07%)</title><rect x="89.9360%" y="469" width="0.0651%" height="15" fill="rgb(236,38,28)" fg:x="64905" fg:w="47"/><text x="90.1860%" y="479.50"></text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (9 samples, 0.01%)</title><rect x="90.1175%" y="453" width="0.0125%" height="15" fill="rgb(227,195,22)" fg:x="65036" fg:w="9"/><text x="90.3675%" y="463.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::BytesMut::reserve_inner (13 samples, 0.02%)</title><rect x="90.1300%" y="453" width="0.0180%" height="15" fill="rgb(214,55,33)" fg:x="65045" fg:w="13"/><text x="90.3800%" y="463.50"></text></g><g><title>httpmq-rs`std::sys::unix::decode_error_kind (14 samples, 0.02%)</title><rect x="90.1937%" y="421" width="0.0194%" height="15" fill="rgb(248,80,13)" fg:x="65091" fg:w="14"/><text x="90.4437%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`cerror_nocancel (19 samples, 0.03%)</title><rect x="90.2866%" y="373" width="0.0263%" height="15" fill="rgb(238,52,6)" fg:x="65158" fg:w="19"/><text x="90.5366%" y="383.50"></text></g><g><title>httpmq-rs`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (63 samples, 0.09%)</title><rect x="90.2672%" y="389" width="0.0873%" height="15" fill="rgb(224,198,47)" fg:x="65144" fg:w="63"/><text x="90.5172%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_exit_if_canceled (30 samples, 0.04%)</title><rect x="90.3129%" y="373" width="0.0416%" height="15" fill="rgb(233,171,20)" fg:x="65177" fg:w="30"/><text x="90.5629%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`__error (14 samples, 0.02%)</title><rect x="90.3683%" y="389" width="0.0194%" height="15" fill="rgb(241,30,25)" fg:x="65217" fg:w="14"/><text x="90.6183%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (758 samples, 1.05%)</title><rect x="90.3877%" y="389" width="1.0503%" height="15" fill="rgb(207,171,38)" fg:x="65231" fg:w="758"/><text x="90.6377%" y="399.50"></text></g><g><title>httpmq-rs`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (863 samples, 1.20%)</title><rect x="90.2575%" y="405" width="1.1958%" height="15" fill="rgb(234,70,1)" fg:x="65137" fg:w="863"/><text x="90.5075%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`cerror (11 samples, 0.02%)</title><rect x="91.4380%" y="389" width="0.0152%" height="15" fill="rgb(232,178,18)" fg:x="65989" fg:w="11"/><text x="91.6880%" y="399.50"></text></g><g><title>httpmq-rs`std::sys::unix::decode_error_kind (27 samples, 0.04%)</title><rect x="91.4547%" y="405" width="0.0374%" height="15" fill="rgb(241,78,40)" fg:x="66001" fg:w="27"/><text x="91.7047%" y="415.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::ref_inc (8 samples, 0.01%)</title><rect x="91.6015%" y="373" width="0.0111%" height="15" fill="rgb(222,35,25)" fg:x="66107" fg:w="8"/><text x="91.8515%" y="383.50"></text></g><g><title>httpmq-rs`tokio::io::driver::scheduled_io::ScheduledIo::poll_readiness (57 samples, 0.08%)</title><rect x="91.5558%" y="389" width="0.0790%" height="15" fill="rgb(207,92,16)" fg:x="66074" fg:w="57"/><text x="91.8058%" y="399.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::waker::clone_waker (16 samples, 0.02%)</title><rect x="91.6126%" y="373" width="0.0222%" height="15" fill="rgb(216,59,51)" fg:x="66115" fg:w="16"/><text x="91.8626%" y="383.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::ref_inc (14 samples, 0.02%)</title><rect x="91.6154%" y="357" width="0.0194%" height="15" fill="rgb(213,80,28)" fg:x="66117" fg:w="14"/><text x="91.8654%" y="367.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_ready (122 samples, 0.17%)</title><rect x="91.4921%" y="405" width="0.1690%" height="15" fill="rgb(220,93,7)" fg:x="66028" fg:w="122"/><text x="91.7421%" y="415.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::waker::clone_waker (19 samples, 0.03%)</title><rect x="91.6348%" y="389" width="0.0263%" height="15" fill="rgb(225,24,44)" fg:x="66131" fg:w="19"/><text x="91.8848%" y="399.50"></text></g><g><title>httpmq-rs`tokio::io::driver::registration::Registration::poll_read_io (1,079 samples, 1.50%)</title><rect x="90.2131%" y="421" width="1.4951%" height="15" fill="rgb(243,74,40)" fg:x="65105" fg:w="1079"/><text x="90.4631%" y="431.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (31 samples, 0.04%)</title><rect x="91.6653%" y="405" width="0.0430%" height="15" fill="rgb(228,39,7)" fg:x="66153" fg:w="31"/><text x="91.9153%" y="415.50"></text></g><g><title>httpmq-rs`&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_read::AsyncRead&gt;::poll_read (1,103 samples, 1.53%)</title><rect x="90.1840%" y="437" width="1.5284%" height="15" fill="rgb(227,79,8)" fg:x="65084" fg:w="1103"/><text x="90.4340%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (13 samples, 0.02%)</title><rect x="91.8856%" y="357" width="0.0180%" height="15" fill="rgb(236,58,11)" fg:x="66312" fg:w="13"/><text x="92.1356%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (9 samples, 0.01%)</title><rect x="91.9036%" y="357" width="0.0125%" height="15" fill="rgb(249,63,35)" fg:x="66325" fg:w="9"/><text x="92.1536%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (140 samples, 0.19%)</title><rect x="91.7401%" y="421" width="0.1940%" height="15" fill="rgb(252,114,16)" fg:x="66207" fg:w="140"/><text x="91.9901%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (126 samples, 0.17%)</title><rect x="91.7595%" y="405" width="0.1746%" height="15" fill="rgb(254,151,24)" fg:x="66221" fg:w="126"/><text x="92.0095%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (116 samples, 0.16%)</title><rect x="91.7734%" y="389" width="0.1607%" height="15" fill="rgb(253,54,39)" fg:x="66231" fg:w="116"/><text x="92.0234%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (57 samples, 0.08%)</title><rect x="91.8551%" y="373" width="0.0790%" height="15" fill="rgb(243,25,45)" fg:x="66290" fg:w="57"/><text x="92.1051%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (13 samples, 0.02%)</title><rect x="91.9161%" y="357" width="0.0180%" height="15" fill="rgb(234,134,9)" fg:x="66334" fg:w="13"/><text x="92.1661%" y="367.50"></text></g><g><title>httpmq-rs`bytes::bytes_mut::BytesMut::reserve_inner (162 samples, 0.22%)</title><rect x="91.7166%" y="437" width="0.2245%" height="15" fill="rgb(227,166,31)" fg:x="66190" fg:w="162"/><text x="91.9666%" y="447.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::poll_read_from_io (1,309 samples, 1.81%)</title><rect x="90.1480%" y="453" width="1.8138%" height="15" fill="rgb(245,143,41)" fg:x="65058" fg:w="1309"/><text x="90.3980%" y="463.50">h..</text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::force_io_read (1,361 samples, 1.89%)</title><rect x="90.0829%" y="469" width="1.8859%" height="15" fill="rgb(238,181,32)" fg:x="65011" fg:w="1361"/><text x="90.3329%" y="479.50">h..</text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::poll_read_keep_alive (1,424 samples, 1.97%)</title><rect x="90.0011%" y="485" width="1.9732%" height="15" fill="rgb(224,113,18)" fg:x="64952" fg:w="1424"/><text x="90.2511%" y="495.50">h..</text></g><g><title>httpmq-rs`hyper::proto::h1::conn::Conn&lt;I,B,T&gt;::try_keep_alive (20 samples, 0.03%)</title><rect x="91.9743%" y="485" width="0.0277%" height="15" fill="rgb(240,229,28)" fg:x="66376" fg:w="20"/><text x="92.2243%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::State::busy (10 samples, 0.01%)</title><rect x="92.0020%" y="485" width="0.0139%" height="15" fill="rgb(250,185,3)" fg:x="66396" fg:w="10"/><text x="92.2520%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::conn::State::wants_keep_alive (16 samples, 0.02%)</title><rect x="92.0242%" y="485" width="0.0222%" height="15" fill="rgb(212,59,25)" fg:x="66412" fg:w="16"/><text x="92.2742%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (42 samples, 0.06%)</title><rect x="92.1128%" y="469" width="0.0582%" height="15" fill="rgb(221,87,20)" fg:x="66476" fg:w="42"/><text x="92.3628%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::encode::Encoder::encode_and_end (93 samples, 0.13%)</title><rect x="92.0463%" y="485" width="0.1289%" height="15" fill="rgb(213,74,28)" fg:x="66428" fg:w="93"/><text x="92.2963%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_buffer (22 samples, 0.03%)</title><rect x="92.1766%" y="485" width="0.0305%" height="15" fill="rgb(224,132,34)" fg:x="66522" fg:w="22"/><text x="92.4266%" y="495.50"></text></g><g><title>httpmq-rs`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.02%)</title><rect x="92.1877%" y="469" width="0.0194%" height="15" fill="rgb(222,101,24)" fg:x="66530" fg:w="14"/><text x="92.4377%" y="479.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::parse (14 samples, 0.02%)</title><rect x="92.2071%" y="485" width="0.0194%" height="15" fill="rgb(254,142,4)" fg:x="66544" fg:w="14"/><text x="92.4571%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::WriteBuf&lt;B&gt;::buffer (19 samples, 0.03%)</title><rect x="92.2334%" y="485" width="0.0263%" height="15" fill="rgb(230,229,49)" fg:x="66563" fg:w="19"/><text x="92.4834%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::role::encode_headers (12 samples, 0.02%)</title><rect x="92.2597%" y="485" width="0.0166%" height="15" fill="rgb(238,70,47)" fg:x="66582" fg:w="12"/><text x="92.5097%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.04%)</title><rect x="92.2791%" y="485" width="0.0360%" height="15" fill="rgb(231,160,17)" fg:x="66596" fg:w="26"/><text x="92.5291%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (21 samples, 0.03%)</title><rect x="92.2861%" y="469" width="0.0291%" height="15" fill="rgb(218,68,53)" fg:x="66601" fg:w="21"/><text x="92.5361%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (20 samples, 0.03%)</title><rect x="92.2874%" y="453" width="0.0277%" height="15" fill="rgb(236,111,10)" fg:x="66602" fg:w="20"/><text x="92.5374%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.02%)</title><rect x="92.3858%" y="453" width="0.0208%" height="15" fill="rgb(224,34,41)" fg:x="66673" fg:w="15"/><text x="92.6358%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (55 samples, 0.08%)</title><rect x="92.3470%" y="469" width="0.0762%" height="15" fill="rgb(241,118,19)" fg:x="66645" fg:w="55"/><text x="92.5970%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (12 samples, 0.02%)</title><rect x="92.4066%" y="453" width="0.0166%" height="15" fill="rgb(238,129,25)" fg:x="66688" fg:w="12"/><text x="92.6566%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (79 samples, 0.11%)</title><rect x="92.3152%" y="485" width="0.1095%" height="15" fill="rgb(238,22,31)" fg:x="66622" fg:w="79"/><text x="92.5652%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (58,286 samples, 80.76%)</title><rect x="11.7254%" y="501" width="80.7643%" height="15" fill="rgb(222,174,48)" fg:x="8462" fg:w="58286"/><text x="11.9754%" y="511.50">httpmq-rs`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (45 samples, 0.06%)</title><rect x="92.4274%" y="485" width="0.0624%" height="15" fill="rgb(206,152,40)" fg:x="66703" fg:w="45"/><text x="92.6774%" y="495.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::encode::Encoder::encode_and_end (17 samples, 0.02%)</title><rect x="92.4897%" y="501" width="0.0236%" height="15" fill="rgb(218,99,54)" fg:x="66748" fg:w="17"/><text x="92.7397%" y="511.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::encode::Encoder::is_eof (11 samples, 0.02%)</title><rect x="92.5133%" y="501" width="0.0152%" height="15" fill="rgb(220,174,26)" fg:x="66765" fg:w="11"/><text x="92.7633%" y="511.50"></text></g><g><title>httpmq-rs`hyper::proto::h1::io::Buffered&lt;T,B&gt;::can_buffer (16 samples, 0.02%)</title><rect x="92.5285%" y="501" width="0.0222%" height="15" fill="rgb(245,116,9)" fg:x="66776" fg:w="16"/><text x="92.7785%" y="511.50"></text></g><g><title>httpmq-rs`&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (58,579 samples, 81.17%)</title><rect x="11.4039%" y="517" width="81.1703%" height="15" fill="rgb(209,72,35)" fg:x="8230" fg:w="58579"/><text x="11.6539%" y="527.50">httpmq-rs`&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.01%)</title><rect x="92.5604%" y="501" width="0.0139%" height="15" fill="rgb(226,126,21)" fg:x="66799" fg:w="10"/><text x="92.8104%" y="511.50"></text></g><g><title>httpmq-rs`&lt;hyper::server::conn::spawn_all::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll (58,612 samples, 81.22%)</title><rect x="11.3707%" y="533" width="81.2161%" height="15" fill="rgb(227,192,1)" fg:x="8206" fg:w="58612"/><text x="11.6207%" y="543.50">httpmq-rs`&lt;hyper::server::conn::spawn_all::NewSvcTask&lt;I,N,S,E,W&gt; as core::future::future::Future&gt;::poll</text></g><g><title>httpmq-rs`hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (9 samples, 0.01%)</title><rect x="92.5743%" y="517" width="0.0125%" height="15" fill="rgb(237,180,29)" fg:x="66809" fg:w="9"/><text x="92.8243%" y="527.50"></text></g><g><title>httpmq-rs`&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (11 samples, 0.02%)</title><rect x="92.5867%" y="533" width="0.0152%" height="15" fill="rgb(230,197,35)" fg:x="66818" fg:w="11"/><text x="92.8367%" y="543.50"></text></g><g><title>httpmq-rs`core::task::poll::Poll&lt;T&gt;::map (9 samples, 0.01%)</title><rect x="92.6020%" y="533" width="0.0125%" height="15" fill="rgb(246,193,31)" fg:x="66829" fg:w="9"/><text x="92.8520%" y="543.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_idle (17 samples, 0.02%)</title><rect x="92.6145%" y="533" width="0.0236%" height="15" fill="rgb(241,36,4)" fg:x="66838" fg:w="17"/><text x="92.8645%" y="543.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (58,708 samples, 81.35%)</title><rect x="11.3097%" y="549" width="81.3491%" height="15" fill="rgb(241,130,17)" fg:x="8162" fg:w="58708"/><text x="11.5597%" y="559.50">httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_running (15 samples, 0.02%)</title><rect x="92.6380%" y="533" width="0.0208%" height="15" fill="rgb(206,137,32)" fg:x="66855" fg:w="15"/><text x="92.8880%" y="543.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_idle (20 samples, 0.03%)</title><rect x="92.6588%" y="549" width="0.0277%" height="15" fill="rgb(237,228,51)" fg:x="66870" fg:w="20"/><text x="92.9088%" y="559.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::state::State::transition_to_running (9 samples, 0.01%)</title><rect x="92.6865%" y="549" width="0.0125%" height="15" fill="rgb(243,6,42)" fg:x="66890" fg:w="9"/><text x="92.9365%" y="559.50"></text></g><g><title>httpmq-rs`std::thread::local::LocalKey&lt;T&gt;::with (58,841 samples, 81.53%)</title><rect x="11.1975%" y="565" width="81.5334%" height="15" fill="rgb(251,74,28)" fg:x="8081" fg:w="58841"/><text x="11.4475%" y="575.50">httpmq-rs`std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>libdyld.dylib`tlv_get_addr (23 samples, 0.03%)</title><rect x="92.6990%" y="549" width="0.0319%" height="15" fill="rgb(218,20,49)" fg:x="66899" fg:w="23"/><text x="92.9490%" y="559.50"></text></g><g><title>httpmq-rs`tokio::coop::CURRENT::__getit (13 samples, 0.02%)</title><rect x="92.7309%" y="565" width="0.0180%" height="15" fill="rgb(238,28,14)" fg:x="66922" fg:w="13"/><text x="92.9809%" y="575.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (11 samples, 0.02%)</title><rect x="92.7489%" y="565" width="0.0152%" height="15" fill="rgb(229,40,46)" fg:x="66935" fg:w="11"/><text x="92.9989%" y="575.50"></text></g><g><title>httpmq-rs`tokio::runtime::task::raw::poll (22 samples, 0.03%)</title><rect x="92.7641%" y="565" width="0.0305%" height="15" fill="rgb(244,195,20)" fg:x="66946" fg:w="22"/><text x="93.0141%" y="575.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Shared::notify_parked (38 samples, 0.05%)</title><rect x="92.7946%" y="565" width="0.0527%" height="15" fill="rgb(253,56,35)" fg:x="66968" fg:w="38"/><text x="93.0446%" y="575.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Context::run_task (60,181 samples, 83.39%)</title><rect x="9.4917%" y="581" width="83.3901%" height="15" fill="rgb(210,149,44)" fg:x="6850" fg:w="60181"/><text x="9.7417%" y="591.50">httpmq-rs`tokio::runtime::thread_pool::worker::Context::run_task</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (11 samples, 0.02%)</title><rect x="92.8666%" y="565" width="0.0152%" height="15" fill="rgb(240,135,12)" fg:x="67020" fg:w="11"/><text x="93.1166%" y="575.50"></text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::Context::run (66,998 samples, 92.84%)</title><rect x="0.0499%" y="597" width="92.8362%" height="15" fill="rgb(251,24,50)" fg:x="36" fg:w="66998"/><text x="0.2999%" y="607.50">httpmq-rs`tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>httpmq-rs`std::sys::unix::thread::Thread::new::thread_start (67,023 samples, 92.87%)</title><rect x="0.0222%" y="725" width="92.8708%" height="15" fill="rgb(243,200,47)" fg:x="16" fg:w="67023"/><text x="0.2722%" y="735.50">httpmq-rs`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>httpmq-rs`core::ops::function::FnOnce::call_once{{vtable.shim}} (67,023 samples, 92.87%)</title><rect x="0.0222%" y="709" width="92.8708%" height="15" fill="rgb(224,166,26)" fg:x="16" fg:w="67023"/><text x="0.2722%" y="719.50">httpmq-rs`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>httpmq-rs`std::sys_common::backtrace::__rust_begin_short_backtrace (67,023 samples, 92.87%)</title><rect x="0.0222%" y="693" width="92.8708%" height="15" fill="rgb(233,0,47)" fg:x="16" fg:w="67023"/><text x="0.2722%" y="703.50">httpmq-rs`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>httpmq-rs`tokio::runtime::blocking::pool::Inner::run (67,023 samples, 92.87%)</title><rect x="0.0222%" y="677" width="92.8708%" height="15" fill="rgb(253,80,5)" fg:x="16" fg:w="67023"/><text x="0.2722%" y="687.50">httpmq-rs`tokio::runtime::blocking::pool::Inner::run</text></g><g><title>httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (67,023 samples, 92.87%)</title><rect x="0.0222%" y="661" width="92.8708%" height="15" fill="rgb(214,133,25)" fg:x="16" fg:w="67023"/><text x="0.2722%" y="671.50">httpmq-rs`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>httpmq-rs`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (67,023 samples, 92.87%)</title><rect x="0.0222%" y="645" width="92.8708%" height="15" fill="rgb(209,27,14)" fg:x="16" fg:w="67023"/><text x="0.2722%" y="655.50">httpmq-rs`tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>httpmq-rs`tokio::runtime::thread_pool::worker::run (67,023 samples, 92.87%)</title><rect x="0.0222%" y="629" width="92.8708%" height="15" fill="rgb(219,102,51)" fg:x="16" fg:w="67023"/><text x="0.2722%" y="639.50">httpmq-rs`tokio::runtime::thread_pool::worker::run</text></g><g><title>httpmq-rs`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (67,023 samples, 92.87%)</title><rect x="0.0222%" y="613" width="92.8708%" height="15" fill="rgb(237,18,16)" fg:x="16" fg:w="67023"/><text x="0.2722%" y="623.50">httpmq-rs`tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::Add (10 samples, 0.01%)</title><rect x="92.9027%" y="613" width="0.0139%" height="15" fill="rgb(241,85,17)" fg:x="67046" fg:w="10"/><text x="93.1527%" y="623.50"></text></g><g><title>httpmq-rs`snappy::internal::CompressFragment (244 samples, 0.34%)</title><rect x="93.2311%" y="453" width="0.3381%" height="15" fill="rgb(236,90,42)" fg:x="67283" fg:w="244"/><text x="93.4811%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (8 samples, 0.01%)</title><rect x="93.6163%" y="373" width="0.0111%" height="15" fill="rgb(249,57,21)" fg:x="67561" fg:w="8"/><text x="93.8663%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (50 samples, 0.07%)</title><rect x="93.5706%" y="437" width="0.0693%" height="15" fill="rgb(243,12,36)" fg:x="67528" fg:w="50"/><text x="93.8206%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (48 samples, 0.07%)</title><rect x="93.5733%" y="421" width="0.0665%" height="15" fill="rgb(253,128,47)" fg:x="67530" fg:w="48"/><text x="93.8233%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (46 samples, 0.06%)</title><rect x="93.5761%" y="405" width="0.0637%" height="15" fill="rgb(207,33,20)" fg:x="67532" fg:w="46"/><text x="93.8261%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (29 samples, 0.04%)</title><rect x="93.5997%" y="389" width="0.0402%" height="15" fill="rgb(233,215,35)" fg:x="67549" fg:w="29"/><text x="93.8497%" y="399.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (56 samples, 0.08%)</title><rect x="93.5692%" y="453" width="0.0776%" height="15" fill="rgb(249,188,52)" fg:x="67527" fg:w="56"/><text x="93.8192%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.02%)</title><rect x="93.6468%" y="453" width="0.0208%" height="15" fill="rgb(225,12,32)" fg:x="67583" fg:w="15"/><text x="93.8968%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_small (10 samples, 0.01%)</title><rect x="93.6676%" y="453" width="0.0139%" height="15" fill="rgb(247,98,14)" fg:x="67598" fg:w="10"/><text x="93.9176%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (61 samples, 0.08%)</title><rect x="93.6828%" y="453" width="0.0845%" height="15" fill="rgb(247,219,48)" fg:x="67609" fg:w="61"/><text x="93.9328%" y="463.50"></text></g><g><title>httpmq-rs`snappy::Compress (410 samples, 0.57%)</title><rect x="93.2020%" y="469" width="0.5681%" height="15" fill="rgb(253,60,48)" fg:x="67262" fg:w="410"/><text x="93.4520%" y="479.50"></text></g><g><title>httpmq-rs`snappy::UncheckedByteArraySink::Append (9 samples, 0.01%)</title><rect x="93.7701%" y="469" width="0.0125%" height="15" fill="rgb(245,15,52)" fg:x="67672" fg:w="9"/><text x="94.0201%" y="479.50"></text></g><g><title>httpmq-rs`snappy::UncheckedByteArraySink::GetAppendBuffer (16 samples, 0.02%)</title><rect x="93.7826%" y="469" width="0.0222%" height="15" fill="rgb(220,133,28)" fg:x="67681" fg:w="16"/><text x="94.0326%" y="479.50"></text></g><g><title>httpmq-rs`snappy::RawCompress (451 samples, 0.62%)</title><rect x="93.1978%" y="485" width="0.6249%" height="15" fill="rgb(217,180,4)" fg:x="67259" fg:w="451"/><text x="93.4478%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (28 samples, 0.04%)</title><rect x="93.8380%" y="453" width="0.0388%" height="15" fill="rgb(251,24,1)" fg:x="67721" fg:w="28"/><text x="94.0880%" y="463.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (31 samples, 0.04%)</title><rect x="93.8352%" y="469" width="0.0430%" height="15" fill="rgb(212,185,49)" fg:x="67719" fg:w="31"/><text x="94.0852%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::CompressData(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, unsigned int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (502 samples, 0.70%)</title><rect x="93.1853%" y="501" width="0.6956%" height="15" fill="rgb(215,175,22)" fg:x="67250" fg:w="502"/><text x="93.4353%" y="511.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::resize (39 samples, 0.05%)</title><rect x="93.8269%" y="485" width="0.0540%" height="15" fill="rgb(250,205,14)" fg:x="67713" fg:w="39"/><text x="94.0769%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (511 samples, 0.71%)</title><rect x="93.1812%" y="517" width="0.7081%" height="15" fill="rgb(225,211,22)" fg:x="67247" fg:w="511"/><text x="93.4312%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext const&amp;, rocksdb::UncompressionContext*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (534 samples, 0.74%)</title><rect x="93.1632%" y="533" width="0.7399%" height="15" fill="rgb(251,179,42)" fg:x="67234" fg:w="534"/><text x="93.4132%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Flush (26 samples, 0.04%)</title><rect x="93.9738%" y="501" width="0.0360%" height="15" fill="rgb(208,216,51)" fg:x="67819" fg:w="26"/><text x="94.2238%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::WriteBuffered (26 samples, 0.04%)</title><rect x="93.9738%" y="485" width="0.0360%" height="15" fill="rgb(235,36,11)" fg:x="67819" fg:w="26"/><text x="94.2238%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`write (26 samples, 0.04%)</title><rect x="93.9738%" y="469" width="0.0360%" height="15" fill="rgb(213,189,28)" fg:x="67819" fg:w="26"/><text x="94.2238%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Append (56 samples, 0.08%)</title><rect x="93.9447%" y="517" width="0.0776%" height="15" fill="rgb(227,203,42)" fg:x="67798" fg:w="56"/><text x="94.1947%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="94.0112%" y="501" width="0.0111%" height="15" fill="rgb(244,72,36)" fg:x="67846" fg:w="8"/><text x="94.2612%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::crc32c::Extend (128 samples, 0.18%)</title><rect x="94.0223%" y="517" width="0.1774%" height="15" fill="rgb(213,53,17)" fg:x="67854" fg:w="128"/><text x="94.2723%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteRawBlock (215 samples, 0.30%)</title><rect x="93.9073%" y="533" width="0.2979%" height="15" fill="rgb(207,167,3)" fg:x="67771" fg:w="215"/><text x="94.1573%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::WritableFileWriter::Append (11 samples, 0.02%)</title><rect x="94.2218%" y="533" width="0.0152%" height="15" fill="rgb(216,98,30)" fg:x="67998" fg:w="11"/><text x="94.4718%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteBlock (786 samples, 1.09%)</title><rect x="93.1507%" y="549" width="1.0891%" height="15" fill="rgb(236,123,15)" fg:x="67225" fg:w="786"/><text x="93.4007%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBuilder::Finish (15 samples, 0.02%)</title><rect x="94.2440%" y="549" width="0.0208%" height="15" fill="rgb(248,81,50)" fg:x="68014" fg:w="15"/><text x="94.4940%" y="559.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (8 samples, 0.01%)</title><rect x="94.2537%" y="533" width="0.0111%" height="15" fill="rgb(214,120,4)" fg:x="68021" fg:w="8"/><text x="94.5037%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.02%)</title><rect x="94.2745%" y="549" width="0.0194%" height="15" fill="rgb(208,179,34)" fg:x="68036" fg:w="14"/><text x="94.5245%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free_small (29 samples, 0.04%)</title><rect x="94.2939%" y="549" width="0.0402%" height="15" fill="rgb(227,140,7)" fg:x="68050" fg:w="29"/><text x="94.5439%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteBlock (867 samples, 1.20%)</title><rect x="93.1382%" y="565" width="1.2014%" height="15" fill="rgb(214,22,6)" fg:x="67216" fg:w="867"/><text x="93.3882%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::Flush (881 samples, 1.22%)</title><rect x="93.1244%" y="581" width="1.2208%" height="15" fill="rgb(207,137,27)" fg:x="67206" fg:w="881"/><text x="93.3744%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteBlock (8 samples, 0.01%)</title><rect x="94.3451%" y="581" width="0.0111%" height="15" fill="rgb(210,8,46)" fg:x="68087" fg:w="8"/><text x="94.5951%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::status (10 samples, 0.01%)</title><rect x="94.3562%" y="581" width="0.0139%" height="15" fill="rgb(240,16,54)" fg:x="68095" fg:w="10"/><text x="94.6062%" y="591.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external (23 samples, 0.03%)</title><rect x="94.4532%" y="565" width="0.0319%" height="15" fill="rgb(211,209,29)" fg:x="68165" fg:w="23"/><text x="94.7032%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.01%)</title><rect x="94.4712%" y="549" width="0.0139%" height="15" fill="rgb(226,228,24)" fg:x="68178" fg:w="10"/><text x="94.7212%" y="559.50"></text></g><g><title>libc+ (14 samples, 0.02%)</title><rect x="94.5405%" y="549" width="0.0194%" height="15" fill="rgb(222,84,9)" fg:x="68228" fg:w="14"/><text x="94.7905%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (10 samples, 0.01%)</title><rect x="94.7026%" y="453" width="0.0139%" height="15" fill="rgb(234,203,30)" fg:x="68345" fg:w="10"/><text x="94.9526%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (89 samples, 0.12%)</title><rect x="94.6181%" y="485" width="0.1233%" height="15" fill="rgb(238,109,14)" fg:x="68284" fg:w="89"/><text x="94.8681%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (44 samples, 0.06%)</title><rect x="94.6805%" y="469" width="0.0610%" height="15" fill="rgb(233,206,34)" fg:x="68329" fg:w="44"/><text x="94.9305%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (15 samples, 0.02%)</title><rect x="94.7207%" y="453" width="0.0208%" height="15" fill="rgb(220,167,47)" fg:x="68358" fg:w="15"/><text x="94.9707%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (168 samples, 0.23%)</title><rect x="94.5876%" y="517" width="0.2328%" height="15" fill="rgb(238,105,10)" fg:x="68262" fg:w="168"/><text x="94.8376%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (154 samples, 0.21%)</title><rect x="94.6070%" y="501" width="0.2134%" height="15" fill="rgb(213,227,17)" fg:x="68276" fg:w="154"/><text x="94.8570%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (57 samples, 0.08%)</title><rect x="94.7414%" y="485" width="0.0790%" height="15" fill="rgb(217,132,38)" fg:x="68373" fg:w="57"/><text x="94.9914%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.03%)</title><rect x="94.7899%" y="469" width="0.0305%" height="15" fill="rgb(242,146,4)" fg:x="68408" fg:w="22"/><text x="95.0399%" y="479.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (180 samples, 0.25%)</title><rect x="94.5793%" y="533" width="0.2494%" height="15" fill="rgb(212,61,9)" fg:x="68256" fg:w="180"/><text x="94.8293%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (23 samples, 0.03%)</title><rect x="94.8537%" y="517" width="0.0319%" height="15" fill="rgb(247,126,22)" fg:x="68454" fg:w="23"/><text x="95.1037%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.03%)</title><rect x="94.8592%" y="501" width="0.0263%" height="15" fill="rgb(220,196,2)" fg:x="68458" fg:w="19"/><text x="95.1092%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (39 samples, 0.05%)</title><rect x="94.8343%" y="533" width="0.0540%" height="15" fill="rgb(208,46,4)" fg:x="68440" fg:w="39"/><text x="95.0843%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (15 samples, 0.02%)</title><rect x="94.9146%" y="517" width="0.0208%" height="15" fill="rgb(252,104,46)" fg:x="68498" fg:w="15"/><text x="95.1646%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free_small (41 samples, 0.06%)</title><rect x="94.8883%" y="533" width="0.0568%" height="15" fill="rgb(237,152,48)" fg:x="68479" fg:w="41"/><text x="95.1383%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (8 samples, 0.01%)</title><rect x="94.9756%" y="501" width="0.0111%" height="15" fill="rgb(221,59,37)" fg:x="68542" fg:w="8"/><text x="95.2256%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (33 samples, 0.05%)</title><rect x="94.9451%" y="533" width="0.0457%" height="15" fill="rgb(209,202,51)" fg:x="68520" fg:w="33"/><text x="95.1951%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.02%)</title><rect x="94.9659%" y="517" width="0.0249%" height="15" fill="rgb(228,81,30)" fg:x="68535" fg:w="18"/><text x="95.2159%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (60 samples, 0.08%)</title><rect x="94.9992%" y="533" width="0.0831%" height="15" fill="rgb(227,42,39)" fg:x="68559" fg:w="60"/><text x="95.2492%" y="543.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__grow_by_and_replace (378 samples, 0.52%)</title><rect x="94.5599%" y="549" width="0.5238%" height="15" fill="rgb(221,26,2)" fg:x="68242" fg:w="378"/><text x="94.8099%" y="559.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (496 samples, 0.69%)</title><rect x="94.4920%" y="565" width="0.6873%" height="15" fill="rgb(254,61,31)" fg:x="68193" fg:w="496"/><text x="94.7420%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (63 samples, 0.09%)</title><rect x="95.0920%" y="549" width="0.0873%" height="15" fill="rgb(222,173,38)" fg:x="68626" fg:w="63"/><text x="95.3420%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBuilder::Add (597 samples, 0.83%)</title><rect x="94.3701%" y="581" width="0.8272%" height="15" fill="rgb(218,50,12)" fg:x="68105" fg:w="597"/><text x="94.6201%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="95.1862%" y="565" width="0.0111%" height="15" fill="rgb(223,88,40)" fg:x="68694" fg:w="8"/><text x="95.4362%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::EncodeVarint32 (9 samples, 0.01%)</title><rect x="95.2029%" y="581" width="0.0125%" height="15" fill="rgb(237,54,19)" fg:x="68706" fg:w="9"/><text x="95.4529%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::FlushBlockBySizePolicy::Update (28 samples, 0.04%)</title><rect x="95.2153%" y="581" width="0.0388%" height="15" fill="rgb(251,129,25)" fg:x="68715" fg:w="28"/><text x="95.4653%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBuilder::EstimateSizeAfterKV (9 samples, 0.01%)</title><rect x="95.2417%" y="565" width="0.0125%" height="15" fill="rgb(238,97,19)" fg:x="68734" fg:w="9"/><text x="95.4917%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::FragmentedRangeTombstoneIterator::status (11 samples, 0.02%)</title><rect x="95.2541%" y="581" width="0.0152%" height="15" fill="rgb(240,169,18)" fg:x="68743" fg:w="11"/><text x="95.5041%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::NotifyCollectTableCollectorsOnAdd(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long long, std::__1::vector&lt;std::__1::unique_ptr&lt;rocksdb::IntTblPropCollector, std::__1::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::__1::allocator&lt;std::__1::unique_ptr&lt;rocksdb::IntTblPropCollector, std::__1::default_delete (14 samples, 0.02%)</title><rect x="95.2708%" y="581" width="0.0194%" height="15" fill="rgb(230,187,49)" fg:x="68755" fg:w="14"/><text x="95.5208%" y="591.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__grow_by_and_replace (14 samples, 0.02%)</title><rect x="95.3691%" y="533" width="0.0194%" height="15" fill="rgb(209,44,26)" fg:x="68826" fg:w="14"/><text x="95.6191%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="95.3761%" y="517" width="0.0125%" height="15" fill="rgb(244,0,6)" fg:x="68831" fg:w="9"/><text x="95.6261%" y="527.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (37 samples, 0.05%)</title><rect x="95.3581%" y="549" width="0.0513%" height="15" fill="rgb(248,18,21)" fg:x="68818" fg:w="37"/><text x="95.6081%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.02%)</title><rect x="95.3885%" y="533" width="0.0208%" height="15" fill="rgb(245,180,19)" fg:x="68840" fg:w="15"/><text x="95.6385%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBuilder::Add (64 samples, 0.09%)</title><rect x="95.3276%" y="565" width="0.0887%" height="15" fill="rgb(252,118,36)" fg:x="68796" fg:w="64"/><text x="95.5776%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::IndexValue::EncodeTo(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (21 samples, 0.03%)</title><rect x="95.4176%" y="565" width="0.0291%" height="15" fill="rgb(210,224,19)" fg:x="68861" fg:w="21"/><text x="95.6676%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::FindShortestSeparator(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (11 samples, 0.02%)</title><rect x="95.4689%" y="549" width="0.0152%" height="15" fill="rgb(218,30,24)" fg:x="68898" fg:w="11"/><text x="95.7189%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::InternalKeyComparator::FindShortestSeparator(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (34 samples, 0.05%)</title><rect x="95.4467%" y="565" width="0.0471%" height="15" fill="rgb(219,75,50)" fg:x="68882" fg:w="34"/><text x="95.6967%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::ShortenedIndexBuilder::AddIndexEntry(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (156 samples, 0.22%)</title><rect x="95.2902%" y="581" width="0.2162%" height="15" fill="rgb(234,72,50)" fg:x="68769" fg:w="156"/><text x="95.5402%" y="591.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external (26 samples, 0.04%)</title><rect x="95.5132%" y="581" width="0.0360%" height="15" fill="rgb(219,100,48)" fg:x="68930" fg:w="26"/><text x="95.7632%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="95.5340%" y="565" width="0.0152%" height="15" fill="rgb(253,5,41)" fg:x="68945" fg:w="11"/><text x="95.7840%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::Add (1,814 samples, 2.51%)</title><rect x="93.0468%" y="597" width="2.5136%" height="15" fill="rgb(247,181,11)" fg:x="67150" fg:w="1814"/><text x="93.2968%" y="607.50">ht..</text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::LevelIterator::NextAndGetResult (17 samples, 0.02%)</title><rect x="95.6005%" y="581" width="0.0236%" height="15" fill="rgb(222,223,25)" fg:x="68993" fg:w="17"/><text x="95.8505%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::EqualWithoutTimestamp (20 samples, 0.03%)</title><rect x="95.8001%" y="565" width="0.0277%" height="15" fill="rgb(214,198,28)" fg:x="69137" fg:w="20"/><text x="96.0501%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (14 samples, 0.02%)</title><rect x="95.8084%" y="549" width="0.0194%" height="15" fill="rgb(230,46,43)" fg:x="69143" fg:w="14"/><text x="96.0584%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::InvokeFilterIfNeeded (8 samples, 0.01%)</title><rect x="95.8306%" y="565" width="0.0111%" height="15" fill="rgb(233,65,53)" fg:x="69159" fg:w="8"/><text x="96.0806%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::ParseInternalKey (23 samples, 0.03%)</title><rect x="95.8513%" y="565" width="0.0319%" height="15" fill="rgb(221,121,27)" fg:x="69174" fg:w="23"/><text x="96.1013%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::NextFromInput (187 samples, 0.26%)</title><rect x="95.6393%" y="581" width="0.2591%" height="15" fill="rgb(247,70,47)" fg:x="69021" fg:w="187"/><text x="95.8893%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.01%)</title><rect x="95.8846%" y="565" width="0.0139%" height="15" fill="rgb(228,85,35)" fg:x="69198" fg:w="10"/><text x="96.1346%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::PrepareOutput (40 samples, 0.06%)</title><rect x="95.8985%" y="581" width="0.0554%" height="15" fill="rgb(209,50,18)" fg:x="69208" fg:w="40"/><text x="96.1485%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::RealCompaction::allow_ingest_behind (16 samples, 0.02%)</title><rect x="95.9539%" y="581" width="0.0222%" height="15" fill="rgb(250,19,35)" fg:x="69248" fg:w="16"/><text x="96.2039%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.02%)</title><rect x="96.2352%" y="437" width="0.0180%" height="15" fill="rgb(253,107,29)" fg:x="69451" fg:w="13"/><text x="96.4852%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.02%)</title><rect x="96.2379%" y="421" width="0.0152%" height="15" fill="rgb(252,179,29)" fg:x="69453" fg:w="11"/><text x="96.4879%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (11 samples, 0.02%)</title><rect x="96.2379%" y="405" width="0.0152%" height="15" fill="rgb(238,194,6)" fg:x="69453" fg:w="11"/><text x="96.4879%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::Cleanable::RegisterCleanup(void (*) (19 samples, 0.03%)</title><rect x="96.2324%" y="469" width="0.0263%" height="15" fill="rgb(238,164,29)" fg:x="69449" fg:w="19"/><text x="96.4824%" y="479.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (17 samples, 0.02%)</title><rect x="96.2352%" y="453" width="0.0236%" height="15" fill="rgb(224,25,9)" fg:x="69451" fg:w="17"/><text x="96.4852%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Unlock (9 samples, 0.01%)</title><rect x="96.3252%" y="437" width="0.0125%" height="15" fill="rgb(244,153,23)" fg:x="69516" fg:w="9"/><text x="96.5752%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (8 samples, 0.01%)</title><rect x="96.3266%" y="421" width="0.0111%" height="15" fill="rgb(212,203,14)" fg:x="69517" fg:w="8"/><text x="96.5766%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (35 samples, 0.05%)</title><rect x="96.3377%" y="421" width="0.0485%" height="15" fill="rgb(220,164,20)" fg:x="69525" fg:w="35"/><text x="96.5877%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (33 samples, 0.05%)</title><rect x="96.3405%" y="405" width="0.0457%" height="15" fill="rgb(222,203,48)" fg:x="69527" fg:w="33"/><text x="96.5905%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (31 samples, 0.04%)</title><rect x="96.3433%" y="389" width="0.0430%" height="15" fill="rgb(215,159,22)" fg:x="69529" fg:w="31"/><text x="96.5933%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (9 samples, 0.01%)</title><rect x="96.3737%" y="373" width="0.0125%" height="15" fill="rgb(216,183,47)" fg:x="69551" fg:w="9"/><text x="96.6237%" y="383.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (37 samples, 0.05%)</title><rect x="96.3377%" y="437" width="0.0513%" height="15" fill="rgb(229,195,25)" fg:x="69525" fg:w="37"/><text x="96.5877%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="96.3904%" y="437" width="0.0180%" height="15" fill="rgb(224,132,51)" fg:x="69563" fg:w="13"/><text x="96.6404%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*) (90 samples, 0.12%)</title><rect x="96.2878%" y="453" width="0.1247%" height="15" fill="rgb(240,63,7)" fg:x="69489" fg:w="90"/><text x="96.5378%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::LRUHandleTable::Insert (9 samples, 0.01%)</title><rect x="96.4125%" y="453" width="0.0125%" height="15" fill="rgb(249,182,41)" fg:x="69579" fg:w="9"/><text x="96.6625%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*) (116 samples, 0.16%)</title><rect x="96.2657%" y="469" width="0.1607%" height="15" fill="rgb(243,47,26)" fg:x="69473" fg:w="116"/><text x="96.5157%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::crc32c::Extend (123 samples, 0.17%)</title><rect x="96.6079%" y="389" width="0.1704%" height="15" fill="rgb(233,48,2)" fg:x="69720" fg:w="123"/><text x="96.8579%" y="399.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::CheckBlockChecksum (143 samples, 0.20%)</title><rect x="96.5857%" y="421" width="0.1981%" height="15" fill="rgb(244,165,34)" fg:x="69704" fg:w="143"/><text x="96.8357%" y="431.50"></text></g><g><title>httpmq-rs`rocksdb::VerifyBlockChecksum(rocksdb::ChecksumType, char const*, unsigned long, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (133 samples, 0.18%)</title><rect x="96.5996%" y="405" width="0.1843%" height="15" fill="rgb(207,89,7)" fg:x="69714" fg:w="133"/><text x="96.8496%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::TryGetFromPrefetchBuffer (12 samples, 0.02%)</title><rect x="96.7894%" y="421" width="0.0166%" height="15" fill="rgb(244,117,36)" fg:x="69851" fg:w="12"/><text x="97.0394%" y="431.50"></text></g><g><title>httpmq-rs`rocksdb::PosixRandomAccessFile::Read (10 samples, 0.01%)</title><rect x="96.8587%" y="405" width="0.0139%" height="15" fill="rgb(226,144,34)" fg:x="69901" fg:w="10"/><text x="97.1087%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long long, unsigned long, rocksdb::Slice*, char*, std::__1::unique_ptr&lt;char [], std::__1::default_delete (582 samples, 0.81%)</title><rect x="96.8227%" y="421" width="0.8065%" height="15" fill="rgb(213,23,19)" fg:x="69875" fg:w="582"/><text x="97.0727%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`pread (542 samples, 0.75%)</title><rect x="96.8781%" y="405" width="0.7510%" height="15" fill="rgb(217,75,12)" fg:x="69915" fg:w="542"/><text x="97.1281%" y="415.50"></text></g><g><title>httpmq-rs`snappy::SnappyDecompressor::RefillTag (13 samples, 0.02%)</title><rect x="97.9118%" y="309" width="0.0180%" height="15" fill="rgb(224,159,17)" fg:x="70661" fg:w="13"/><text x="98.1618%" y="319.50"></text></g><g><title>httpmq-rs`void snappy::SnappyDecompressor::DecompressAllTags&lt;snappy::SnappyArrayWriter&gt; (193 samples, 0.27%)</title><rect x="97.6652%" y="325" width="0.2674%" height="15" fill="rgb(217,118,1)" fg:x="70483" fg:w="193"/><text x="97.9152%" y="335.50"></text></g><g><title>httpmq-rs`snappy::RawUncompress (207 samples, 0.29%)</title><rect x="97.6527%" y="341" width="0.2868%" height="15" fill="rgb(232,180,48)" fg:x="70474" fg:w="207"/><text x="97.9027%" y="351.50"></text></g><g><title>httpmq-rs`snappy::RawUncompress (214 samples, 0.30%)</title><rect x="97.6458%" y="357" width="0.2965%" height="15" fill="rgb(230,27,33)" fg:x="70469" fg:w="214"/><text x="97.8958%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (26 samples, 0.04%)</title><rect x="97.9423%" y="341" width="0.0360%" height="15" fill="rgb(205,31,21)" fg:x="70683" fg:w="26"/><text x="98.1923%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (19 samples, 0.03%)</title><rect x="97.9520%" y="325" width="0.0263%" height="15" fill="rgb(253,59,4)" fg:x="70690" fg:w="19"/><text x="98.2020%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (16 samples, 0.02%)</title><rect x="97.9562%" y="309" width="0.0222%" height="15" fill="rgb(224,201,9)" fg:x="70693" fg:w="16"/><text x="98.2062%" y="319.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (28 samples, 0.04%)</title><rect x="97.9423%" y="357" width="0.0388%" height="15" fill="rgb(229,206,30)" fg:x="70683" fg:w="28"/><text x="98.1923%" y="367.50"></text></g><g><title>httpmq-rs`rocksdb::Snappy_Uncompress (252 samples, 0.35%)</title><rect x="97.6388%" y="373" width="0.3492%" height="15" fill="rgb(212,67,47)" fg:x="70464" fg:w="252"/><text x="97.8888%" y="383.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressBlockContentsForCompressionType (269 samples, 0.37%)</title><rect x="97.6291%" y="405" width="0.3727%" height="15" fill="rgb(211,96,50)" fg:x="70457" fg:w="269"/><text x="97.8791%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressData (267 samples, 0.37%)</title><rect x="97.6319%" y="389" width="0.3700%" height="15" fill="rgb(252,114,18)" fg:x="70459" fg:w="267"/><text x="97.8819%" y="399.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressBlockContents (270 samples, 0.37%)</title><rect x="97.6291%" y="421" width="0.3741%" height="15" fill="rgb(223,58,37)" fg:x="70457" fg:w="270"/><text x="97.8791%" y="431.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::ReadBlockContents (1,091 samples, 1.51%)</title><rect x="96.5206%" y="437" width="1.5118%" height="15" fill="rgb(237,70,4)" fg:x="69657" fg:w="1091"/><text x="96.7706%" y="447.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (15 samples, 0.02%)</title><rect x="98.0116%" y="421" width="0.0208%" height="15" fill="rgb(244,85,46)" fg:x="70733" fg:w="15"/><text x="98.2616%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.04%)</title><rect x="98.0615%" y="405" width="0.0388%" height="15" fill="rgb(223,39,52)" fg:x="70769" fg:w="28"/><text x="98.3115%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (27 samples, 0.04%)</title><rect x="98.0629%" y="389" width="0.0374%" height="15" fill="rgb(218,200,14)" fg:x="70770" fg:w="27"/><text x="98.3129%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.02%)</title><rect x="98.0823%" y="373" width="0.0180%" height="15" fill="rgb(208,171,16)" fg:x="70784" fg:w="13"/><text x="98.3323%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (31 samples, 0.04%)</title><rect x="98.0601%" y="421" width="0.0430%" height="15" fill="rgb(234,200,18)" fg:x="70768" fg:w="31"/><text x="98.3101%" y="431.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (33 samples, 0.05%)</title><rect x="98.0587%" y="437" width="0.0457%" height="15" fill="rgb(228,45,11)" fg:x="70767" fg:w="33"/><text x="98.3087%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile&lt;rocksdb::Block&gt;(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&amp;, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, std::__1::unique_ptr&lt;rocksdb::Block, std::__1::default_delete (1,190 samples, 1.65%)</title><rect x="96.4693%" y="453" width="1.6489%" height="15" fill="rgb(237,182,11)" fg:x="69620" fg:w="1190"/><text x="96.7193%" y="463.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (10 samples, 0.01%)</title><rect x="98.1044%" y="437" width="0.0139%" height="15" fill="rgb(241,175,49)" fg:x="70800" fg:w="10"/><text x="98.3544%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Lookup (11 samples, 0.02%)</title><rect x="98.1779%" y="421" width="0.0152%" height="15" fill="rgb(247,38,35)" fg:x="70853" fg:w="11"/><text x="98.4279%" y="431.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (63 samples, 0.09%)</title><rect x="98.1197%" y="453" width="0.0873%" height="15" fill="rgb(228,39,49)" fg:x="70811" fg:w="63"/><text x="98.3697%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry (44 samples, 0.06%)</title><rect x="98.1460%" y="437" width="0.0610%" height="15" fill="rgb(226,101,26)" fg:x="70830" fg:w="44"/><text x="98.3960%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Lookup (10 samples, 0.01%)</title><rect x="98.1931%" y="421" width="0.0139%" height="15" fill="rgb(206,141,19)" fg:x="70864" fg:w="10"/><text x="98.4431%" y="431.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (1,283 samples, 1.78%)</title><rect x="96.4347%" y="469" width="1.7778%" height="15" fill="rgb(211,200,13)" fg:x="69595" fg:w="1283"/><text x="96.6847%" y="479.50">h..</text></g><g><title>httpmq-rs`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (1,501 samples, 2.08%)</title><rect x="96.1520%" y="485" width="2.0799%" height="15" fill="rgb(241,121,6)" fg:x="69391" fg:w="1501"/><text x="96.4020%" y="495.50">h..</text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::InitDataBlock (1,528 samples, 2.12%)</title><rect x="96.1215%" y="501" width="2.1173%" height="15" fill="rgb(234,221,29)" fg:x="69369" fg:w="1528"/><text x="96.3715%" y="511.50">h..</text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Next (27 samples, 0.04%)</title><rect x="98.2388%" y="501" width="0.0374%" height="15" fill="rgb(229,136,5)" fg:x="70897" fg:w="27"/><text x="98.4888%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::ParseNextIndexKey (25 samples, 0.03%)</title><rect x="98.2416%" y="485" width="0.0346%" height="15" fill="rgb(238,36,11)" fg:x="70899" fg:w="25"/><text x="98.4916%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::IndexBlockIter::DecodeCurrentValue (11 samples, 0.02%)</title><rect x="98.2610%" y="469" width="0.0152%" height="15" fill="rgb(251,55,41)" fg:x="70913" fg:w="11"/><text x="98.5110%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::IndexValue::DecodeFrom (10 samples, 0.01%)</title><rect x="98.2624%" y="453" width="0.0139%" height="15" fill="rgb(242,34,40)" fg:x="70914" fg:w="10"/><text x="98.5124%" y="463.50"></text></g><g><title>httpmq-rs`bool rocksdb::DataBlockIter::ParseNextDataKey&lt;rocksdb::DecodeEntry&gt; (11 samples, 0.02%)</title><rect x="98.2943%" y="485" width="0.0152%" height="15" fill="rgb(215,42,17)" fg:x="70937" fg:w="11"/><text x="98.5443%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::Slice&gt;::SeekToFirst (22 samples, 0.03%)</title><rect x="98.2832%" y="501" width="0.0305%" height="15" fill="rgb(207,44,46)" fg:x="70929" fg:w="22"/><text x="98.5332%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.02%)</title><rect x="98.3400%" y="469" width="0.0152%" height="15" fill="rgb(211,206,28)" fg:x="70970" fg:w="11"/><text x="98.5900%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::CachableEntry&lt;rocksdb::Block&gt;::DeleteValue (41 samples, 0.06%)</title><rect x="98.3289%" y="485" width="0.0568%" height="15" fill="rgb(237,167,16)" fg:x="70962" fg:w="41"/><text x="98.5789%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_small (22 samples, 0.03%)</title><rect x="98.3552%" y="469" width="0.0305%" height="15" fill="rgb(233,66,6)" fg:x="70981" fg:w="22"/><text x="98.6052%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::port::Mutex::Lock (8 samples, 0.01%)</title><rect x="98.3982%" y="469" width="0.0111%" height="15" fill="rgb(246,123,29)" fg:x="71012" fg:w="8"/><text x="98.6482%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.01%)</title><rect x="98.4134%" y="453" width="0.0125%" height="15" fill="rgb(209,62,40)" fg:x="71023" fg:w="9"/><text x="98.6634%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.01%)</title><rect x="98.4134%" y="437" width="0.0125%" height="15" fill="rgb(218,4,25)" fg:x="71023" fg:w="9"/><text x="98.6634%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.02%)</title><rect x="98.4120%" y="469" width="0.0152%" height="15" fill="rgb(253,91,49)" fg:x="71022" fg:w="11"/><text x="98.6620%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (17 samples, 0.02%)</title><rect x="98.4273%" y="469" width="0.0236%" height="15" fill="rgb(228,155,29)" fg:x="71033" fg:w="17"/><text x="98.6773%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Release (48 samples, 0.07%)</title><rect x="98.3954%" y="485" width="0.0665%" height="15" fill="rgb(243,57,37)" fg:x="71010" fg:w="48"/><text x="98.6454%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Release (12 samples, 0.02%)</title><rect x="98.4619%" y="485" width="0.0166%" height="15" fill="rgb(244,167,17)" fg:x="71058" fg:w="12"/><text x="98.7119%" y="495.50"></text></g><g><title>libc+ (8 samples, 0.01%)</title><rect x="98.4799%" y="485" width="0.0111%" height="15" fill="rgb(207,181,38)" fg:x="71071" fg:w="8"/><text x="98.7299%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.03%)</title><rect x="98.4938%" y="485" width="0.0263%" height="15" fill="rgb(211,8,23)" fg:x="71081" fg:w="19"/><text x="98.7438%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.02%)</title><rect x="98.5007%" y="469" width="0.0194%" height="15" fill="rgb(235,11,44)" fg:x="71086" fg:w="14"/><text x="98.7507%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (13 samples, 0.02%)</title><rect x="98.5021%" y="453" width="0.0180%" height="15" fill="rgb(248,18,52)" fg:x="71087" fg:w="13"/><text x="98.7521%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13 samples, 0.02%)</title><rect x="98.5686%" y="453" width="0.0180%" height="15" fill="rgb(208,4,7)" fg:x="71135" fg:w="13"/><text x="98.8186%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (60 samples, 0.08%)</title><rect x="98.5201%" y="485" width="0.0831%" height="15" fill="rgb(240,17,39)" fg:x="71100" fg:w="60"/><text x="98.7701%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (46 samples, 0.06%)</title><rect x="98.5395%" y="469" width="0.0637%" height="15" fill="rgb(207,170,3)" fg:x="71114" fg:w="46"/><text x="98.7895%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (12 samples, 0.02%)</title><rect x="98.5866%" y="453" width="0.0166%" height="15" fill="rgb(236,100,52)" fg:x="71148" fg:w="12"/><text x="98.8366%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::Invalidate (210 samples, 0.29%)</title><rect x="98.3164%" y="501" width="0.2910%" height="15" fill="rgb(246,78,51)" fg:x="70953" fg:w="210"/><text x="98.5664%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::FindBlockForward (1,828 samples, 2.53%)</title><rect x="96.1063%" y="517" width="2.5330%" height="15" fill="rgb(211,17,15)" fg:x="69358" fg:w="1828"/><text x="96.3563%" y="527.50">ht..</text></g><g><title>httpmq-rs`bool rocksdb::DataBlockIter::ParseNextDataKey&lt;rocksdb::DecodeEntry&gt; (28 samples, 0.04%)</title><rect x="98.6601%" y="501" width="0.0388%" height="15" fill="rgb(209,59,46)" fg:x="71201" fg:w="28"/><text x="98.9101%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Next (52 samples, 0.07%)</title><rect x="98.6407%" y="517" width="0.0721%" height="15" fill="rgb(210,92,25)" fg:x="71187" fg:w="52"/><text x="98.8907%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::BlockIter&lt;rocksdb::IndexValue&gt;::Valid (10 samples, 0.01%)</title><rect x="98.7127%" y="517" width="0.0139%" height="15" fill="rgb(238,174,52)" fg:x="71239" fg:w="10"/><text x="98.9627%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::Next (1,915 samples, 2.65%)</title><rect x="96.0883%" y="533" width="2.6535%" height="15" fill="rgb(230,73,7)" fg:x="69345" fg:w="1915"/><text x="96.3383%" y="543.50">ht..</text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::NextAndGetResult (1,942 samples, 2.69%)</title><rect x="96.0592%" y="549" width="2.6909%" height="15" fill="rgb(243,124,40)" fg:x="69324" fg:w="1942"/><text x="96.3092%" y="559.50">ht..</text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::Valid (9 samples, 0.01%)</title><rect x="98.7543%" y="549" width="0.0125%" height="15" fill="rgb(244,170,11)" fg:x="71269" fg:w="9"/><text x="99.0043%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::LevelIterator::NextAndGetResult (1,984 samples, 2.75%)</title><rect x="96.0273%" y="565" width="2.7491%" height="15" fill="rgb(207,114,54)" fg:x="69301" fg:w="1984"/><text x="96.2773%" y="575.50">ht..</text></g><g><title>httpmq-rs`rocksdb::BinaryHeap&lt;rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*, rocksdb::MinIteratorComparator&gt;::downheap (40 samples, 0.06%)</title><rect x="98.7765%" y="565" width="0.0554%" height="15" fill="rgb(205,42,20)" fg:x="71285" fg:w="40"/><text x="99.0265%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*) (10 samples, 0.01%)</title><rect x="98.8513%" y="485" width="0.0139%" height="15" fill="rgb(230,30,28)" fg:x="71339" fg:w="10"/><text x="99.1013%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::LRUCacheShard::Insert(rocksdb::Slice const&amp;, unsigned int, void*, unsigned long, void (*) (8 samples, 0.01%)</title><rect x="98.8541%" y="469" width="0.0111%" height="15" fill="rgb(205,73,54)" fg:x="71341" fg:w="8"/><text x="99.1041%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::VerifyBlockChecksum(rocksdb::ChecksumType, char const*, unsigned long, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (12 samples, 0.02%)</title><rect x="98.8818%" y="421" width="0.0166%" height="15" fill="rgb(254,227,23)" fg:x="71361" fg:w="12"/><text x="99.1318%" y="431.50"></text></g><g><title>httpmq-rs`rocksdb::crc32c::Extend (12 samples, 0.02%)</title><rect x="98.8818%" y="405" width="0.0166%" height="15" fill="rgb(228,202,34)" fg:x="71361" fg:w="12"/><text x="99.1318%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::CheckBlockChecksum (14 samples, 0.02%)</title><rect x="98.8804%" y="437" width="0.0194%" height="15" fill="rgb(222,225,37)" fg:x="71360" fg:w="14"/><text x="99.1304%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long long, unsigned long, rocksdb::Slice*, char*, std::__1::unique_ptr&lt;char [], std::__1::default_delete (34 samples, 0.05%)</title><rect x="98.9053%" y="437" width="0.0471%" height="15" fill="rgb(221,14,54)" fg:x="71378" fg:w="34"/><text x="99.1553%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`pread (32 samples, 0.04%)</title><rect x="98.9081%" y="421" width="0.0443%" height="15" fill="rgb(254,102,2)" fg:x="71380" fg:w="32"/><text x="99.1581%" y="431.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressBlockContents (11 samples, 0.02%)</title><rect x="98.9524%" y="437" width="0.0152%" height="15" fill="rgb(232,104,17)" fg:x="71412" fg:w="11"/><text x="99.2024%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressBlockContentsForCompressionType (11 samples, 0.02%)</title><rect x="98.9524%" y="421" width="0.0152%" height="15" fill="rgb(250,220,14)" fg:x="71412" fg:w="11"/><text x="99.2024%" y="431.50"></text></g><g><title>httpmq-rs`rocksdb::UncompressData (11 samples, 0.02%)</title><rect x="98.9524%" y="405" width="0.0152%" height="15" fill="rgb(241,158,9)" fg:x="71412" fg:w="11"/><text x="99.2024%" y="415.50"></text></g><g><title>httpmq-rs`rocksdb::Snappy_Uncompress (11 samples, 0.02%)</title><rect x="98.9524%" y="389" width="0.0152%" height="15" fill="rgb(246,9,43)" fg:x="71412" fg:w="11"/><text x="99.2024%" y="399.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::ReadBlockContents (69 samples, 0.10%)</title><rect x="98.8735%" y="453" width="0.0956%" height="15" fill="rgb(206,73,33)" fg:x="71355" fg:w="69"/><text x="99.1235%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile&lt;rocksdb::Block&gt;(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&amp;, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, std::__1::unique_ptr&lt;rocksdb::Block, std::__1::default_delete (79 samples, 0.11%)</title><rect x="98.8693%" y="469" width="0.1095%" height="15" fill="rgb(222,79,8)" fg:x="71352" fg:w="79"/><text x="99.1193%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (85 samples, 0.12%)</title><rect x="98.8651%" y="485" width="0.1178%" height="15" fill="rgb(234,8,54)" fg:x="71349" fg:w="85"/><text x="99.1151%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt; (103 samples, 0.14%)</title><rect x="98.8444%" y="501" width="0.1427%" height="15" fill="rgb(209,134,38)" fg:x="71334" fg:w="103"/><text x="99.0944%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::InitDataBlock (104 samples, 0.14%)</title><rect x="98.8444%" y="517" width="0.1441%" height="15" fill="rgb(230,127,29)" fg:x="71334" fg:w="104"/><text x="99.0944%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::DataBlockIter::Invalidate (15 samples, 0.02%)</title><rect x="98.9899%" y="517" width="0.0208%" height="15" fill="rgb(242,44,41)" fg:x="71439" fg:w="15"/><text x="99.2399%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::FindBlockForward (124 samples, 0.17%)</title><rect x="98.8416%" y="533" width="0.1718%" height="15" fill="rgb(222,56,43)" fg:x="71332" fg:w="124"/><text x="99.0916%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::NextAndGetResult (140 samples, 0.19%)</title><rect x="98.8319%" y="565" width="0.1940%" height="15" fill="rgb(238,39,47)" fg:x="71325" fg:w="140"/><text x="99.0819%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableIterator::Next (134 samples, 0.19%)</title><rect x="98.8402%" y="549" width="0.1857%" height="15" fill="rgb(226,79,43)" fg:x="71331" fg:w="134"/><text x="99.0902%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::MergingIterator::Next (2,198 samples, 3.05%)</title><rect x="95.9844%" y="581" width="3.0457%" height="15" fill="rgb(242,105,53)" fg:x="69270" fg:w="2198"/><text x="96.2344%" y="591.50">htt..</text></g><g><title>httpmq-rs`rocksdb::MergingIterator::Valid (11 samples, 0.02%)</title><rect x="99.0300%" y="581" width="0.0152%" height="15" fill="rgb(251,132,46)" fg:x="71468" fg:w="11"/><text x="99.2800%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::Next (2,516 samples, 3.49%)</title><rect x="95.5770%" y="597" width="3.4863%" height="15" fill="rgb(231,77,14)" fg:x="68976" fg:w="2516"/><text x="95.8270%" y="607.50">htt..</text></g><g><title>httpmq-rs`snappy::RawCompress (9 samples, 0.01%)</title><rect x="99.0772%" y="485" width="0.0125%" height="15" fill="rgb(240,135,9)" fg:x="71502" fg:w="9"/><text x="99.3272%" y="495.50"></text></g><g><title>httpmq-rs`snappy::Compress (9 samples, 0.01%)</title><rect x="99.0772%" y="469" width="0.0125%" height="15" fill="rgb(248,109,14)" fg:x="71502" fg:w="9"/><text x="99.3272%" y="479.50"></text></g><g><title>httpmq-rs`snappy::internal::CompressFragment (9 samples, 0.01%)</title><rect x="99.0772%" y="453" width="0.0125%" height="15" fill="rgb(227,146,52)" fg:x="71502" fg:w="9"/><text x="99.3272%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext const&amp;, rocksdb::UncompressionContext*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (12 samples, 0.02%)</title><rect x="99.0772%" y="533" width="0.0166%" height="15" fill="rgb(232,54,3)" fg:x="71502" fg:w="12"/><text x="99.3272%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (12 samples, 0.02%)</title><rect x="99.0772%" y="517" width="0.0166%" height="15" fill="rgb(229,201,43)" fg:x="71502" fg:w="12"/><text x="99.3272%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::CompressData(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, unsigned int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (12 samples, 0.02%)</title><rect x="99.0772%" y="501" width="0.0166%" height="15" fill="rgb(252,161,33)" fg:x="71502" fg:w="12"/><text x="99.3272%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteBlock (18 samples, 0.02%)</title><rect x="99.0772%" y="549" width="0.0249%" height="15" fill="rgb(226,146,40)" fg:x="71502" fg:w="18"/><text x="99.3272%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::Finish (21 samples, 0.03%)</title><rect x="99.0772%" y="581" width="0.0291%" height="15" fill="rgb(219,47,25)" fg:x="71502" fg:w="21"/><text x="99.3272%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteIndexBlock (21 samples, 0.03%)</title><rect x="99.0772%" y="565" width="0.0291%" height="15" fill="rgb(250,135,13)" fg:x="71502" fg:w="21"/><text x="99.3272%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionJob::FinishCompactionOutputFile (27 samples, 0.04%)</title><rect x="99.0772%" y="597" width="0.0374%" height="15" fill="rgb(219,229,18)" fg:x="71502" fg:w="27"/><text x="99.3272%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionJob::SubcompactionState::ShouldStopBefore (22 samples, 0.03%)</title><rect x="99.1160%" y="597" width="0.0305%" height="15" fill="rgb(217,152,27)" fg:x="71530" fg:w="22"/><text x="99.3660%" y="607.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external (20 samples, 0.03%)</title><rect x="99.1617%" y="581" width="0.0277%" height="15" fill="rgb(225,71,47)" fg:x="71563" fg:w="20"/><text x="99.4117%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="99.1769%" y="565" width="0.0125%" height="15" fill="rgb(220,139,14)" fg:x="71574" fg:w="9"/><text x="99.4269%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::FileMetaData::UpdateBoundaries (32 samples, 0.04%)</title><rect x="99.1464%" y="597" width="0.0443%" height="15" fill="rgb(247,54,32)" fg:x="71552" fg:w="32"/><text x="99.3964%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::FlushBlockBySizePolicy::Update (9 samples, 0.01%)</title><rect x="99.1908%" y="597" width="0.0125%" height="15" fill="rgb(252,131,39)" fg:x="71584" fg:w="9"/><text x="99.4408%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::MergingIterator::Next (22 samples, 0.03%)</title><rect x="99.2032%" y="597" width="0.0305%" height="15" fill="rgb(210,108,39)" fg:x="71593" fg:w="22"/><text x="99.4532%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::BytewiseComparatorImpl::Compare (27 samples, 0.04%)</title><rect x="99.2933%" y="581" width="0.0374%" height="15" fill="rgb(205,23,29)" fg:x="71658" fg:w="27"/><text x="99.5433%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (18 samples, 0.02%)</title><rect x="99.3058%" y="565" width="0.0249%" height="15" fill="rgb(246,139,46)" fg:x="71667" fg:w="18"/><text x="99.5558%" y="575.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__assign_external (21 samples, 0.03%)</title><rect x="99.3404%" y="581" width="0.0291%" height="15" fill="rgb(250,81,26)" fg:x="71692" fg:w="21"/><text x="99.5904%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="99.3515%" y="565" width="0.0180%" height="15" fill="rgb(214,104,7)" fg:x="71700" fg:w="13"/><text x="99.6015%" y="575.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (13 samples, 0.02%)</title><rect x="99.3751%" y="581" width="0.0180%" height="15" fill="rgb(233,189,8)" fg:x="71717" fg:w="13"/><text x="99.6251%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::OutputValidator::Add (123 samples, 0.17%)</title><rect x="99.2365%" y="597" width="0.1704%" height="15" fill="rgb(228,141,17)" fg:x="71617" fg:w="123"/><text x="99.4865%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="99.3945%" y="581" width="0.0125%" height="15" fill="rgb(247,157,1)" fg:x="71731" fg:w="9"/><text x="99.6445%" y="591.50"></text></g><g><title>libc+ (10 samples, 0.01%)</title><rect x="99.4236%" y="597" width="0.0139%" height="15" fill="rgb(249,225,5)" fg:x="71752" fg:w="10"/><text x="99.6736%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionJob::ProcessKeyValueCompaction (4,717 samples, 6.54%)</title><rect x="92.9332%" y="613" width="6.5361%" height="15" fill="rgb(242,55,13)" fg:x="67068" fg:w="4717"/><text x="93.1832%" y="623.50">httpmq-rs..</text></g><g><title>libdyld.dylib`tlv_get_addr (14 samples, 0.02%)</title><rect x="99.4499%" y="597" width="0.0194%" height="15" fill="rgb(230,49,50)" fg:x="71771" fg:w="14"/><text x="99.6999%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionJob::Run()::$_2::operator() (10 samples, 0.01%)</title><rect x="99.4693%" y="613" width="0.0139%" height="15" fill="rgb(241,111,38)" fg:x="71785" fg:w="10"/><text x="99.7193%" y="623.50"></text></g><g><title>httpmq-rs`rocksdb::TableCache::NewIterator (10 samples, 0.01%)</title><rect x="99.4693%" y="597" width="0.0139%" height="15" fill="rgb(252,155,4)" fg:x="71785" fg:w="10"/><text x="99.7193%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::TableCache::FindTable (10 samples, 0.01%)</title><rect x="99.4693%" y="581" width="0.0139%" height="15" fill="rgb(212,69,32)" fg:x="71785" fg:w="10"/><text x="99.7193%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileDescriptor const&amp;, bool, bool, rocksdb::HistogramImpl*, std::__1::unique_ptr&lt;rocksdb::TableReader, std::__1::default_delete (10 samples, 0.01%)</title><rect x="99.4693%" y="565" width="0.0139%" height="15" fill="rgb(243,107,47)" fg:x="71785" fg:w="10"/><text x="99.7193%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&amp;, rocksdb::TableReaderOptions const&amp;, std::__1::unique_ptr&lt;rocksdb::RandomAccessFileReader, std::__1::default_delete&lt;rocksdb::RandomAccessFileReader&gt; &gt;&amp;&amp;, unsigned long long, std::__1::unique_ptr&lt;rocksdb::TableReader, std::__1::default_delete (10 samples, 0.01%)</title><rect x="99.4693%" y="549" width="0.0139%" height="15" fill="rgb(247,130,12)" fg:x="71785" fg:w="10"/><text x="99.7193%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::BlockBasedTableOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, std::__1::unique_ptr&lt;rocksdb::RandomAccessFileReader, std::__1::default_delete&lt;rocksdb::RandomAccessFileReader&gt; &gt;&amp;&amp;, unsigned long long, std::__1::unique_ptr&lt;rocksdb::TableReader, std::__1::default_delete (10 samples, 0.01%)</title><rect x="99.4693%" y="533" width="0.0139%" height="15" fill="rgb(233,74,16)" fg:x="71785" fg:w="10"/><text x="99.7193%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::PrefetchIndexAndFilterBlocks(rocksdb::ReadOptions const&amp;, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase (10 samples, 0.01%)</title><rect x="99.4693%" y="517" width="0.0139%" height="15" fill="rgb(208,58,18)" fg:x="71785" fg:w="10"/><text x="99.7193%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::CreateIndexReader(rocksdb::ReadOptions const&amp;, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::__1::unique_ptr&lt;rocksdb::BlockBasedTable::IndexReader, std::__1::default_delete (10 samples, 0.01%)</title><rect x="99.4693%" y="501" width="0.0139%" height="15" fill="rgb(242,225,1)" fg:x="71785" fg:w="10"/><text x="99.7193%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::BinarySearchIndexReader::Create(rocksdb::BlockBasedTable const*, rocksdb::ReadOptions const&amp;, rocksdb::FilePrefetchBuffer*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::__1::unique_ptr&lt;rocksdb::BlockBasedTable::IndexReader, std::__1::default_delete (10 samples, 0.01%)</title><rect x="99.4693%" y="485" width="0.0139%" height="15" fill="rgb(249,39,40)" fg:x="71785" fg:w="10"/><text x="99.7193%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTable::IndexReaderCommon::ReadIndexBlock(rocksdb::BlockBasedTable const*, rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry (10 samples, 0.01%)</title><rect x="99.4693%" y="469" width="0.0139%" height="15" fill="rgb(207,72,44)" fg:x="71785" fg:w="10"/><text x="99.7193%" y="479.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry (10 samples, 0.01%)</title><rect x="99.4693%" y="453" width="0.0139%" height="15" fill="rgb(215,193,12)" fg:x="71785" fg:w="10"/><text x="99.7193%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::Status rocksdb::(anonymous namespace)::ReadBlockFromFile&lt;rocksdb::Block&gt;(rocksdb::RandomAccessFileReader*, rocksdb::FilePrefetchBuffer*, rocksdb::Footer const&amp;, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, std::__1::unique_ptr&lt;rocksdb::Block, std::__1::default_delete (10 samples, 0.01%)</title><rect x="99.4693%" y="437" width="0.0139%" height="15" fill="rgb(248,41,39)" fg:x="71785" fg:w="10"/><text x="99.7193%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::BlockFetcher::ReadBlockContents (10 samples, 0.01%)</title><rect x="99.4693%" y="421" width="0.0139%" height="15" fill="rgb(253,85,4)" fg:x="71785" fg:w="10"/><text x="99.7193%" y="431.50"></text></g><g><title>httpmq-rs`rocksdb::FileMetaData::UpdateBoundaries (10 samples, 0.01%)</title><rect x="99.4901%" y="613" width="0.0139%" height="15" fill="rgb(243,70,31)" fg:x="71800" fg:w="10"/><text x="99.7401%" y="623.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::BackgroundCompaction (4,774 samples, 6.62%)</title><rect x="92.9013%" y="645" width="6.6151%" height="15" fill="rgb(253,195,26)" fg:x="67045" fg:w="4774"/><text x="93.1513%" y="655.50">httpmq-rs..</text></g><g><title>httpmq-rs`rocksdb::CompactionJob::Run (4,773 samples, 6.61%)</title><rect x="92.9027%" y="629" width="6.6137%" height="15" fill="rgb(243,42,11)" fg:x="67046" fg:w="4773"/><text x="93.1527%" y="639.50">httpmq-rs..</text></g><g><title>httpmq-rs`rocksdb::OutputValidator::Add (9 samples, 0.01%)</title><rect x="99.5039%" y="613" width="0.0125%" height="15" fill="rgb(239,66,17)" fg:x="71810" fg:w="9"/><text x="99.7539%" y="623.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::BGWorkCompaction (4,785 samples, 6.63%)</title><rect x="92.9013%" y="677" width="6.6304%" height="15" fill="rgb(217,132,21)" fg:x="67045" fg:w="4785"/><text x="93.1513%" y="687.50">httpmq-rs..</text></g><g><title>httpmq-rs`rocksdb::DBImpl::BackgroundCallCompaction (4,785 samples, 6.63%)</title><rect x="92.9013%" y="661" width="6.6304%" height="15" fill="rgb(252,202,21)" fg:x="67045" fg:w="4785"/><text x="93.1513%" y="671.50">httpmq-rs..</text></g><g><title>httpmq-rs`rocksdb::DBImpl::PurgeObsoleteFiles (11 samples, 0.02%)</title><rect x="99.5164%" y="645" width="0.0152%" height="15" fill="rgb(233,98,36)" fg:x="71819" fg:w="11"/><text x="99.7664%" y="655.50"></text></g><g><title>httpmq-rs`snappy::Compress (17 samples, 0.02%)</title><rect x="99.5358%" y="437" width="0.0236%" height="15" fill="rgb(216,153,54)" fg:x="71833" fg:w="17"/><text x="99.7858%" y="447.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext const&amp;, rocksdb::UncompressionContext*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (18 samples, 0.02%)</title><rect x="99.5358%" y="501" width="0.0249%" height="15" fill="rgb(250,99,7)" fg:x="71833" fg:w="18"/><text x="99.7858%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (18 samples, 0.02%)</title><rect x="99.5358%" y="485" width="0.0249%" height="15" fill="rgb(207,56,50)" fg:x="71833" fg:w="18"/><text x="99.7858%" y="495.50"></text></g><g><title>httpmq-rs`rocksdb::CompressData(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, unsigned int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (18 samples, 0.02%)</title><rect x="99.5358%" y="469" width="0.0249%" height="15" fill="rgb(244,61,34)" fg:x="71833" fg:w="18"/><text x="99.7858%" y="479.50"></text></g><g><title>httpmq-rs`snappy::RawCompress (18 samples, 0.02%)</title><rect x="99.5358%" y="453" width="0.0249%" height="15" fill="rgb(241,50,38)" fg:x="71833" fg:w="18"/><text x="99.7858%" y="463.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteRawBlock (14 samples, 0.02%)</title><rect x="99.5607%" y="501" width="0.0194%" height="15" fill="rgb(212,166,30)" fg:x="71851" fg:w="14"/><text x="99.8107%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteBlock (33 samples, 0.05%)</title><rect x="99.5358%" y="517" width="0.0457%" height="15" fill="rgb(249,127,32)" fg:x="71833" fg:w="33"/><text x="99.7858%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::Flush (38 samples, 0.05%)</title><rect x="99.5358%" y="549" width="0.0527%" height="15" fill="rgb(209,103,0)" fg:x="71833" fg:w="38"/><text x="99.7858%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::WriteBlock (38 samples, 0.05%)</title><rect x="99.5358%" y="533" width="0.0527%" height="15" fill="rgb(238,209,51)" fg:x="71833" fg:w="38"/><text x="99.7858%" y="543.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::__grow_by_and_replace (21 samples, 0.03%)</title><rect x="99.5954%" y="517" width="0.0291%" height="15" fill="rgb(237,56,23)" fg:x="71876" fg:w="21"/><text x="99.8454%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="99.6134%" y="501" width="0.0111%" height="15" fill="rgb(215,153,46)" fg:x="71889" fg:w="8"/><text x="99.8634%" y="511.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBuilder::Add (33 samples, 0.05%)</title><rect x="99.5912%" y="549" width="0.0457%" height="15" fill="rgb(224,49,31)" fg:x="71873" fg:w="33"/><text x="99.8412%" y="559.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;::append (31 samples, 0.04%)</title><rect x="99.5940%" y="533" width="0.0430%" height="15" fill="rgb(250,18,42)" fg:x="71875" fg:w="31"/><text x="99.8440%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="99.6245%" y="517" width="0.0125%" height="15" fill="rgb(215,176,39)" fg:x="71897" fg:w="9"/><text x="99.8745%" y="527.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBuilder::Add (9 samples, 0.01%)</title><rect x="99.6425%" y="533" width="0.0125%" height="15" fill="rgb(223,77,29)" fg:x="71910" fg:w="9"/><text x="99.8925%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::ShortenedIndexBuilder::AddIndexEntry(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (11 samples, 0.02%)</title><rect x="99.6425%" y="549" width="0.0152%" height="15" fill="rgb(234,94,52)" fg:x="71910" fg:w="11"/><text x="99.8925%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::BlockBasedTableBuilder::Add (92 samples, 0.13%)</title><rect x="99.5344%" y="565" width="0.1275%" height="15" fill="rgb(220,154,50)" fg:x="71832" fg:w="92"/><text x="99.7844%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableIterator::Next (9 samples, 0.01%)</title><rect x="99.7173%" y="533" width="0.0125%" height="15" fill="rgb(212,11,10)" fg:x="71964" fg:w="9"/><text x="99.9673%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableIterator::key (86 samples, 0.12%)</title><rect x="99.7298%" y="533" width="0.1192%" height="15" fill="rgb(205,166,19)" fg:x="71973" fg:w="86"/><text x="99.9798%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::MemTableIterator::value (9 samples, 0.01%)</title><rect x="99.8490%" y="533" width="0.0125%" height="15" fill="rgb(244,198,16)" fg:x="72059" fg:w="9"/><text x="100.0990%" y="543.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::NextFromInput (143 samples, 0.20%)</title><rect x="99.6730%" y="549" width="0.1981%" height="15" fill="rgb(219,69,12)" fg:x="71932" fg:w="143"/><text x="99.9230%" y="559.50"></text></g><g><title>httpmq-rs`rocksdb::CompactionIterator::Next (151 samples, 0.21%)</title><rect x="99.6688%" y="565" width="0.2092%" height="15" fill="rgb(245,30,7)" fg:x="71929" fg:w="151"/><text x="99.9188%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::BuildTable(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::TableCache*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, std::__1::vector&lt;std::__1::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt;, std::__1::allocator&lt;std::__1::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::__1::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt; &gt; &gt;, rocksdb::FileMetaData*, std::__1::vector&lt;rocksdb::BlobFileAddition, std::__1::allocator&lt;rocksdb::BlobFileAddition&gt; &gt;*, rocksdb::InternalKeyComparator const&amp;, std::__1::vector&lt;std::__1::unique_ptr&lt;rocksdb::IntTblPropCollectorFactory, std::__1::default_delete&lt;rocksdb::IntTblPropCollectorFactory&gt; &gt;, std::__1::allocator&lt;std::__1::unique_ptr (272 samples, 0.38%)</title><rect x="99.5330%" y="581" width="0.3769%" height="15" fill="rgb(218,221,48)" fg:x="71831" fg:w="272"/><text x="99.7830%" y="591.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::BackgroundFlush (275 samples, 0.38%)</title><rect x="99.5316%" y="661" width="0.3811%" height="15" fill="rgb(216,66,15)" fg:x="71830" fg:w="275"/><text x="99.7816%" y="671.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector (275 samples, 0.38%)</title><rect x="99.5316%" y="645" width="0.3811%" height="15" fill="rgb(226,122,50)" fg:x="71830" fg:w="275"/><text x="99.7816%" y="655.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&amp;, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::__1::vector&lt;unsigned long long, std::__1::allocator (275 samples, 0.38%)</title><rect x="99.5316%" y="629" width="0.3811%" height="15" fill="rgb(239,156,16)" fg:x="71830" fg:w="275"/><text x="99.7816%" y="639.50"></text></g><g><title>httpmq-rs`rocksdb::FlushJob::Run (274 samples, 0.38%)</title><rect x="99.5330%" y="613" width="0.3797%" height="15" fill="rgb(224,27,38)" fg:x="71831" fg:w="274"/><text x="99.7830%" y="623.50"></text></g><g><title>httpmq-rs`rocksdb::FlushJob::WriteLevel0Table (274 samples, 0.38%)</title><rect x="99.5330%" y="597" width="0.3797%" height="15" fill="rgb(224,39,27)" fg:x="71831" fg:w="274"/><text x="99.7830%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::DeleteObsoleteFileImpl(int, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (24 samples, 0.03%)</title><rect x="99.9127%" y="645" width="0.0333%" height="15" fill="rgb(215,92,29)" fg:x="72105" fg:w="24"/><text x="100.1627%" y="655.50"></text></g><g><title>httpmq-rs`rocksdb::DeleteDBFile(rocksdb::ImmutableDBOptions const*, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (24 samples, 0.03%)</title><rect x="99.9127%" y="629" width="0.0333%" height="15" fill="rgb(207,159,16)" fg:x="72105" fg:w="24"/><text x="100.1627%" y="639.50"></text></g><g><title>httpmq-rs`rocksdb::SstFileManagerImpl::ScheduleFileDeletion(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (24 samples, 0.03%)</title><rect x="99.9127%" y="613" width="0.0333%" height="15" fill="rgb(238,163,47)" fg:x="72105" fg:w="24"/><text x="100.1627%" y="623.50"></text></g><g><title>httpmq-rs`rocksdb::DeleteScheduler::DeleteFile(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (24 samples, 0.03%)</title><rect x="99.9127%" y="597" width="0.0333%" height="15" fill="rgb(219,91,49)" fg:x="72105" fg:w="24"/><text x="100.1627%" y="607.50"></text></g><g><title>httpmq-rs`rocksdb::(anonymous namespace)::PosixFileSystem::DeleteFile(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (24 samples, 0.03%)</title><rect x="99.9127%" y="581" width="0.0333%" height="15" fill="rgb(227,167,31)" fg:x="72105" fg:w="24"/><text x="100.1627%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__unlink (24 samples, 0.03%)</title><rect x="99.9127%" y="565" width="0.0333%" height="15" fill="rgb(234,80,54)" fg:x="72105" fg:w="24"/><text x="100.1627%" y="575.50"></text></g><g><title>httpmq-rs`rocksdb::DBImpl::PurgeObsoleteFiles (25 samples, 0.03%)</title><rect x="99.9127%" y="661" width="0.0346%" height="15" fill="rgb(212,114,2)" fg:x="72105" fg:w="25"/><text x="100.1627%" y="671.50"></text></g><g><title>all (72,168 samples, 100%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(234,50,24)" fg:x="0" fg:w="72168"/><text x="0.2500%" y="783.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (72,153 samples, 99.98%)</title><rect x="0.0208%" y="757" width="99.9792%" height="15" fill="rgb(221,68,8)" fg:x="15" fg:w="72153"/><text x="0.2708%" y="767.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (72,152 samples, 99.98%)</title><rect x="0.0222%" y="741" width="99.9778%" height="15" fill="rgb(254,180,31)" fg:x="16" fg:w="72152"/><text x="0.2722%" y="751.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>httpmq-rs`void* std::__1::__thread_proxy&lt;std::__1::tuple&lt;std::__1::unique_ptr&lt;std::__1::__thread_struct, std::__1::default_delete&lt;std::__1::__thread_struct&gt; &gt;, void (*)(void*), rocksdb::BGThreadMetadata*&gt; &gt; (5,124 samples, 7.10%)</title><rect x="92.8999%" y="725" width="7.1001%" height="15" fill="rgb(247,130,50)" fg:x="67044" fg:w="5124"/><text x="93.1499%" y="735.50">httpmq-rs`..</text></g><g><title>httpmq-rs`rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper (5,124 samples, 7.10%)</title><rect x="92.8999%" y="709" width="7.1001%" height="15" fill="rgb(211,109,4)" fg:x="67044" fg:w="5124"/><text x="93.1499%" y="719.50">httpmq-rs`..</text></g><g><title>httpmq-rs`rocksdb::ThreadPoolImpl::Impl::BGThread (5,124 samples, 7.10%)</title><rect x="92.8999%" y="693" width="7.1001%" height="15" fill="rgb(238,50,21)" fg:x="67044" fg:w="5124"/><text x="93.1499%" y="703.50">httpmq-rs`..</text></g><g><title>httpmq-rs`rocksdb::DBImpl::BackgroundCallFlush (338 samples, 0.47%)</title><rect x="99.5316%" y="677" width="0.4684%" height="15" fill="rgb(225,57,45)" fg:x="71830" fg:w="338"/><text x="99.7816%" y="687.50"></text></g><g><title>httpmq-rs`rocksdb::JobContext::Clean (38 samples, 0.05%)</title><rect x="99.9473%" y="661" width="0.0527%" height="15" fill="rgb(209,196,50)" fg:x="72130" fg:w="38"/><text x="100.1973%" y="671.50"></text></g><g><title>httpmq-rs`rocksdb::SuperVersionContext::Clean (38 samples, 0.05%)</title><rect x="99.9473%" y="645" width="0.0527%" height="15" fill="rgb(242,140,13)" fg:x="72130" fg:w="38"/><text x="100.1973%" y="655.50"></text></g><g><title>httpmq-rs`rocksdb::SuperVersion::~SuperVersion (38 samples, 0.05%)</title><rect x="99.9473%" y="629" width="0.0527%" height="15" fill="rgb(217,111,7)" fg:x="72130" fg:w="38"/><text x="100.1973%" y="639.50"></text></g><g><title>httpmq-rs`rocksdb::MemTable::~MemTable (38 samples, 0.05%)</title><rect x="99.9473%" y="613" width="0.0527%" height="15" fill="rgb(253,193,51)" fg:x="72130" fg:w="38"/><text x="100.1973%" y="623.50"></text></g><g><title>httpmq-rs`rocksdb::Arena::~Arena (38 samples, 0.05%)</title><rect x="99.9473%" y="597" width="0.0527%" height="15" fill="rgb(252,70,29)" fg:x="72130" fg:w="38"/><text x="100.1973%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (38 samples, 0.05%)</title><rect x="99.9473%" y="581" width="0.0527%" height="15" fill="rgb(232,127,12)" fg:x="72130" fg:w="38"/><text x="100.1973%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`madvise (38 samples, 0.05%)</title><rect x="99.9473%" y="565" width="0.0527%" height="15" fill="rgb(211,180,21)" fg:x="72130" fg:w="38"/><text x="100.1973%" y="575.50"></text></g></svg></svg>